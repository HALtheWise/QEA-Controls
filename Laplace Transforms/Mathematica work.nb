Notebook[{

Cell[CellGroupData[{
Cell["Laplace Transforms", "Title",
 CellChangeTimes->{{3.6826813785335817`*^9, 3.682681379590159*^9}, {
   3.682710876474948*^9, 3.682710892530466*^9}, {3.682980932118884*^9, 
   3.682980953632352*^9}, {3.684152148208818*^9, 3.684152163265457*^9}, {
   3.684355522339327*^9, 3.6843555383359423`*^9}, 3.684507642144094*^9, {
   3.684507677082271*^9, 3.684507682570043*^9}, {3.684541245284643*^9, 
   3.6845412506801167`*^9}, {3.685128141054286*^9, 3.685128151201559*^9}, {
   3.685808829284281*^9, 3.685808833926445*^9}, {3.686828548690134*^9, 
   3.686828557111308*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<../MMA library.m\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682710916634346*^9, 3.682710945444784*^9}, {
  3.682711378657494*^9, 3.682711389969411*^9}}],

Cell[CellGroupData[{

Cell["iSIM problem", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.686828603950313*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<isim`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.686828603988207*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{3.686828604010029*^9, 3.686828693741185*^9, 
  3.68683167387572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"true", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", "g", " ", "l", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{"d", " ", 
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}], "\[Equal]", 
    RowBox[{"i", " ", 
     RowBox[{
      RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"linearized", "=", 
  RowBox[{"true", "/.", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "\[Rule]", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.686830072425907*^9, 3.686830075964657*^9}, {
   3.6868301302529707`*^9, 3.6868301530260572`*^9}, 3.686830313818305*^9, {
   3.6868304918778353`*^9, 3.686830491975754*^9}, {3.6868305706333838`*^9, 
   3.686830571450861*^9}, 3.6868310296814957`*^9, {3.686831318211278*^9, 
   3.686831346039236*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "l", " ", "m", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.686831346892777*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnVe4FNX2b88ND/fxvv+f7tt9l0MGBUVFASUoUTEQFJWgCIKCgqiAqEQB
BUVEJUgSyQooiOQsSRTwiIKIHgQVMKzrmPdbdWrX7urd3Tt07+VvfN/S7qrq
quq1u0bPtaqZ8//c069dr//+j3/845H/9dd/2t09uNnDD989pP3//uvJbX0f
ub933549WvYd2LN3z4fr3/M//lrY57/94x91/mr/86/HTgghhBBClDR//vmn
mpqaWq1oFXnsjz/+iNrvv/+upqamVlIt7qik15IeE0KI2kLSa95leO+3334r
9ukJIUTO4Cwfs8VdduXKFXfp0qVin54QQuQMzsJd3mlxl/3yyy/FPj0hhMgZ
nBV3GvGad9mFCxeKfXpCCJEzOMs7DZfhtV9//dWW//vf/y726QkhRM7gLNyF
w3DZ5cuX3c8//+zOnz/vzp07V+zTE0KInMFZuAuH4TLitIsXL7off/zRfffd
d8U+PSGEyBmchbtwGC4jTvvpp5/Mc6dPny726QkhAufMxMfcd5OGFLw+Ds7C
XTgMlzGXRrz2/fffu2+++aaqTlkIIcqBq75o93+tZXJWReuT4CzchcNwmffZ
2bNn3alTp1Jfx7qrrrrK2vPPP19m3TPPPBOtYz/CuePHj1t/9OvXL1rGY5Z9
/vnnRTwzIYpH3FdJZyXX8bwi8BLO8T5jHo17BIxDv/7666yv8866+uqro9+q
8fomTZqUtM9q+t9xcbxMPnvuuefcbbfd5r766qsaPR8hSolMTqPl6zLAWbgL
h+GiuM/+9a9/pb4u7jPawoULbfm7775bZrn32YoVK1z79u1d/fr13U033eRm
zJgR7evQoUPu3nvvdQ0bNnTNmzd3w4YNM7/C6tWr7XX16tWz173yyivlfPTZ
Z5/ZsR544AFrjRs3dt26dXMHDx609VOmTLH1s2bNsuPUrVvX3ifvYdCgQebj
G264wY0ZMyb6zZ2PnSZNmuRuvPFGd+2117qXXnop+reue/bssX1xrFtvvTV6
//zmhdd16tTJzZw50143duzYMn1Cw2HJ+Oy9996z99qoUSPXvXt3t2vXrug9
5tIPQtRWkk4rxGWAsyrjM65lrjGuX+jSpYtd4zfffHPksy+++MIec42+/fbb
rmvXrvZ87dq19ppWrVqZT1jHtY+TuEfB8f/5z3+6u+66y82dO9c98sgjbty4
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
6rOGg1e6WZu+cp+fv6KmpqZW1IaLiK8K9RlOLPZ7UFNTU/MNJ8lnampqITT5
TE1NLZQmn6mpqYXS5DM1NbVQmnympqYWSpPP1NTUQmk17bOrrrrKdex2Z7nl
Kz7dZesef2ZM0fsklPbp0a/cE8+OdZ3u6O7qN2jgPvvuQtHPSU0t2fZ+86P7
7OzFcsv5vO4/fT6vfRXDZ7Tlm3eWWf7QwME5+2zctBmu5wN9i/53qK5Wr359
t2rb3krvZ/ORk27CzNlu8htvW9/KZ2ql2NbtPeIWbfjUHfz+52gZfnt33Sfu
owPH8tpXMXzW/LoWrs/Dj0bLthz72tWtW9dd0/xa+ex84T47dO6XjMs/3H1I
PlMr6bZ6x363eMMW+wzjNfz2we6Dee+nGD4bM3ma++c//2nxA8tGjpvgbu1w
m7t/wMDIZ9uPf+t69HnINbn6andNs+Zu8FOj3OEffnWjXpwUxXi06W+/a9tP
nTPf3dT6FteoSRNz5c6vvit37ANnfrL94M1rW1xvxz3678u2bsHaj1zb2253
DRs1cp3vvMut3LrHlrMfjvPym3Nt/02vvsY9M35KtM9b2ndwoydNdR06dbFz
va/fw3Yc1jHe6913gGvctKm9dtbi5dHrFq/f7Np36mzH69L9brdm+377W8bf
23U33JjTuc1fs8G169jJtWzVJmOfy2dqtaHxuV768Tbz2pqdBwraRzF8xlwZ
/hr23PN27eOrV+cuKuMz/j/oyaftGt/25TeuxY0t3ZtLV9q6ZHz27gcfm8dw
BA65u3cf9/Djw8sd+8mxL7qOXe9wGw9+Ydf4zW1uteMSH+KKGfOXuK1fnHIv
TJvpml17nZ2bd8bAYU/ZuazYstvVqVPHbdh/1PaJzzp07mLb0W646Wb38px5
to55q36Dh9o+316+1uawODauxnG4eMeJ027sy6/Y6/x5xuOzXM6t6133mA+9
R5NNPlOrDY3r651V693c1RtSxxoVtWL57JV3Fto1/dKrs2z8efCv8XLcZztP
nnH7vv139DpitXFTZ9jjpM8eHzXa9X/s8ej5vNXr3Y03typ3bGIcvOCfz1m2
2r2+6H03+y9PtrqlbbScmK1Bw4bmLu8M7y/a9S1vcnNXfmiP8Rmxm1/HeQwf
Pc7t+tdZe93Gg19G627v0s2Oz3FbtmodLSe+xt3Mi/I87rNczm3pR1uy9rl8
plbq7ciPl9zSjdstRnt/8y6L0xiP5bufYvkMf+Ex5s1G/zX+ZF3cZ6u37bP4
hm1oXON4jHVJn/UdNMTGeq1vbWeNcVfcAb4xfvMxXrwRJ7W7vWOZZexv4Yeb
ImcQI/p1jB2Jt3iMz+LjSOI43gNxGK9jW39ejHE5Fo3XpfVR3Gf5nlumJp+p
lXLDZcs+2emWf7rbvq9phTqtWD7jMfNOxBp+rivus2TcwxgyzWfENo8OH1Hh
sXHKzAVLo+fEcRajLVxm6/xy+pOxYTwGytdnbM/rGC8mz4Pt43NdxNZPjnkh
ikfjPsv33DI1+UytlNvaXZ+Zz/xcNs07jfsE+eyrmD7jOt576odoXdxnjMf4
rQHb8NuORo0bRz6b+Poc88j6vYdtXIofmON/b+M2t+Xzf9l8Pdskj433+O3b
pkNfuvX7jrg2bdtb/MPzuvXq2diT/TEGZo6K679Qn/EYDz024hmb91q2abu7
v/8jth/ug+As5u443gvTX7MxrN8H9xw4/48OfJ73uWVq8plaKTd+m0GMllzO
svhvOHJpxfRZssV9xhw/MQzbc+/gzh697N4m65jzx0Vc58zDsYx7pown8QTz
47guuX/cyfwWvsB/3I/w/YiT8A/xIs4j/mF5ZXy2bs9hd8e9PW0+n7HmcxNf
jrbj9W3atbfj3da5a3Q8/15Y7mO4fM4t3nAg/UE/sR2PaZnu/aqphdD0753U
1NRCafKZmppaKE0+U1NTC6XJZ2pqaqE0+UxNTS2UJp+pqamF0uQzNTW1UJp8
pqamFkqTz9TU1EJp8pmamlooTT5TU1MLpclnampqoTT5TE1NLZQmn6mpqYXS
5DM1NbVQWmV81mjQSjdr01dFfw9qampquKjRoBUF++zk2Z9do8ErzYlqampq
xWzEV1/95aRCfSaEEKWMfCaECAX5TAgRCvKZECIU5DMhRCjIZ0KIUJDPhBCh
IJ8JIUJBPhNChIJ8JoQIBflMCBEK8pkQIhQK8dmPP/7orrrqKjdixIgyy3/7
7Td3yy23uE6dOtXEqbsLFy64J5980t1www3u+uuvd4MGDXLff/99ue02bNjg
brvtNnfjjTfa/z/99FNbfvToUXvNrbfe6h566KFo+7TlcRYvXuwefvjh6Pnj
jz/u3nrrrSp+h0KIfKiMz+rWreu++uqraPl7771ny2vKZ7isf//+7pdffnFX
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
NeGzZKPGB9c1NTOBesSM0U6cOJG6PNMcNt97zM8y781+eex/DxGfr6UeLnMi
zN9TE4T7l8B4itdQ+4PfKPCYuijZXuN/I8JnnHuefCdX9L29Zs0a2zdO5Puf
x/49Vmdfejiun/eBtHsrvMcePXpY3/GaiRMnBnUtFtKHzKlxH8DfE8B1kOl+
AH1F3Wc+M9QppO4qfhQ1h35PGzbUssJNFTlXiBCQz8KFMSa/O9i0aVOxT0WI
GkE+E0KEgnwmhAgF+UwIEQrymRAiFOQzIUQoyGdCiFCQz4QQoSCfCSFCQT4T
QoSCfCaECAX5TAgRCrW5fgCEXsPDUxN9uWHDBsv9Qd4g/k+e3iTk7CUHB31N
/pF4vsq0v0WudWuyQW4m8jrx71H59/Xs7/Lly3nto7r7MJdzzKUvDh8+bDlf
4tcf+YXJ88Lfhn2TBzzfHAPZ6v+EQm33Weg1PDzV3Zd4h1xGvh7R8uXLLXdX
Mp8m14PPZ+nzzuExSPtb5FK3piK4/gYMGGDXMN7o2LFj3n/n6u7DXM6xor7g
tV27dnXz5s0rs5zvB18LAieSazPf6zOt/k9IFMNn/E3TanXkUw/l71DDw5Nv
X27evDmveihcR/F4zF9vyRiA/JD8PTzkAWNZLn+LTHk3d+3aZTnF+DtzHe/b
ty/j+ycnWfzzyHvIlj88E4V8HvOph5LPOablVMYzvXr1snPy4wyfO3jJkiXm
SNxGXlHPu+++a3naiN3I/8f22ZDPCiPb92FarY586qH8HXLeewrpy3zqoSSZ
PHly9L2SBtc7YxfqwuTyt0hew1euXLEYkPqkQC7YDh06VNAT//97jHyLjMvy
oZA+9ORSDyWfc8zkM/JHcgyuO47j6xX4vmWcyvXBPsmfzN+QHJxt27a17xjO
d+zYsZZjNBvyWWFk+/xkq9WRaz0U+ew/6zL1ZT71UOLgKebAsl2vjF2IB3w+
30J89sUXX7i6detGtWPuu+8+iz+A4xMD0eJxI/Ei240fPz6n9xKn0M9jrvVQ
8jnHZF/gIubH/DhzypQpUW0V37fxuirUuKbeJzU+yZXs+5CcuNQw4Bry/Udj
/OuRzwqjovmKtFodudZD+TvU8PAU2pe51kPx8J3Ptj6/eCa+//57qy1ADO3J
5W+RvIYZ0+KQXGH8xRiO91RIHvBC+zDXeij5nGOyL8gdzz0AxiQ0HnMN0H++
b+PfL/hs5cqVFif6HPO5Ip8VRrb6E5CpVke+9VBCr+HhKaQv05an9SV9ztyM
vyfgwW18x/jzIIYiLkhS0d8ieQ0zdsJnXJewcePG1L8dbuA6HDp0aMH3rwvp
w3zqoWQ7x2SfZ6tJBvH4DOhblnGufA/gOsan7JN5Pe47sw5PpdUN8shnhZGt
/oQnWasjn3ooEHoND08hfZm2PK0vmfOuV6+exQa+ce3gGF+zirEMx41vQ/0r
SPtbZKtbwz0f5t75DuvUqVPqvN6KFSvstU2aNImOm++8QiF9mE89lGzn6Ps8
W1/ESfqM75o777zT+onXcv/Z88Ybb9j3EOu4/5x0rydb/Z9QKObvaVWro+pI
60v1ce6or2o/xfKZanVUHWl9qT7OHfVVGOjfOwkhQkE+E0KEgnwmhAgF+UwI
EQrymRAiFOQzIUQoyGdCiFCQz4QQoSCfCSFCQT4TQoSCfCaECIXaXj9gxowZ
lkuUnC7kqErmugkF1fKofC2P6u5DcmDzPumbtLzh5DDr16+ffWbJc0bOC59b
KFs9mqr8nFdFfZpSpTb7jPycfCZ8njtycpEzJeR8QarlUXjururuQ3Kakfca
H6X5DJeRHxIuXLhgOZLIt5StHk1lP+fkRY1TFfVpSpVi+SxTnQl/Pfh8VOTP
8jndM+WbIk86+bg8fD44HjmmQiPfvuSz36BBA8tjD+SUZR199Het5ZFvH0KX
Ll2i5eSGGz16tHmA/aSRzWfkuFy1alX0nJzyfIaz1aPJ9jlnPefUunVr61tc
mfScz12XpKKckrWRYsdnyToT5JTnelu9erWNLfznO1P9CfLdxXPece7JPOuh
UEhfEgv4+pj83+e+/rvW8iikDz3kzm3WrJk5hP1kO4dsPiO//6hRo8xDJ0+e
dG3atHEjR44st128Hk22zzl/1yFDhtj+qEtDvknG5nHks5rxWVqdCWrt8Dpy
FGdDPvsPmfqS3KPkfgXGNdSGq4iQa3kU+nnEcZwH81u5kM1nvLdu3bpZfljG
97go6bNkPZpsn/PBgwdbzOf7kHhy8eLF1vwyvpv843j9Z/ksPyr6/KTVmRgx
YoTNJUyfPj3r/jXe/A+Z+pJxB/MufLYZ01VE6LU8CulDauqR55pa77mSzWeM
I/0cAPjxpidTPZpsn/OBAwdG9Z3TUHxW/fVQ0upMENdzH4f5HL4TuTcGmepP
LFq0yOYN/LXC9RH6/YB8+hK4L0aND3LMe/6utTwK6UN8Q02EeJ/go2y1/5I+
i/ffsGHDzE8c8/z58xZbMYcIafVosn3OmYtkjInjiGNxcrzGFshn1V8PJVOd
CY7Ld5OvIcwcMvOy/G4g0xw2f89JkybZZ4C5DcYrfCZCJN++9OAN5rHj8+x/
11oe+fahHytzPL8cv6XdD8AbnBc1RZkX4zH3YeL1Z06dOmX3G/mc873N59d/
/6bVo8n2Ofe/vcDF119/vbmyot/C5Pp3rI3o97RhQ/045liE+Dsgn4UJMS0x
D/PDxARC/B2Qz4QQoSCfCSFCQT4TQoSCfCaECAX5TAgRCvKZECIU5DMhRCjI
Z0KIUJDPhBChIJ8JIUJBPhNChIJ8JoQIhWw+CzEvohAiXHBW3GfkhCPPHLmf
lJdBCFGbwFm4C4fhMu8z8tCRw5R8gEePHrX8ceQC3rFjh9u6davbsmWL5Tnf
vHmzmpqaWo00nIN7cBAuwkm4CUfhKpyFu7zP/h9KvnmX
    "], {{0, 362}, {308, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{179.19999999999982`, Automatic},
  ImageSizeRaw->{308, 362},
  PlotRange->{{0, 308}, {0, 362}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "\[Rule]", 
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        TemplateBox[{"0.211","\"lb\"","pounds","\"Pounds\""},
         "Quantity"], ",", " ", "\"\<Kilograms\>\""}], "]"}], "]"}]}], ",", 
    RowBox[{"g", "\[Rule]", 
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{"UnitConvert", "@", 
       RowBox[{
        TemplateBox[{"\"Earth\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}],
          "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"","\"planet\""},
         "Entity"], "[", "\"\<Gravity\>\"", "]"}]}]}]}], ",", 
    RowBox[{"l", "\[Rule]", 
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        TemplateBox[{"8.125","\"in\"","inches","\"Inches\""},
         "Quantity"], ",", " ", "\"\<Meters\>\""}], "]"}]}]}], ",", 
    RowBox[{"i", "\[Rule]", 
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        TemplateBox[{"19.2",RowBox[{
            SuperscriptBox["\"in\"", "2"], "\[InvisibleSpace]", "\"lbf\""}],
          "inch squared pounds\[Hyphen]force",RowBox[{
            SuperscriptBox["\"Inches\"", "2"], " ", "\"PoundsForce\""}]},
         "Quantity"], ",", " ", 
        RowBox[{
         RowBox[{"\"\<Meters\>\"", "^", "2"}], "*", "\"\<Newtons\>\""}]}], 
       "]"}]}]}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.686830197486252*^9, 3.686830325768567*^9}, {
   3.6868303688209543`*^9, 3.6868303693816566`*^9}, {3.6868304039901123`*^9, 
   3.686830415365819*^9}, 3.686831042899068*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m", "\[Rule]", "0.09570799007`"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`3."}], ",", 
   RowBox[{"l", "\[Rule]", "0.206375`"}], ",", 
   RowBox[{"i", "\[Rule]", "0.055100441420188113`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.686830355048337*^9, {3.68683039292806*^9, 3.686830416885347*^9}, 
   3.686830495133689*^9, 3.686831043108923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"components", "=", 
   RowBox[{"{", 
    RowBox[{"\[Theta]dot", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", "g", " ", "l", " ", "\[Theta]"}], "-", 
      RowBox[{"d", " ", "\[Theta]dot"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"StreamPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"components", "/.", "params"}], "/.", 
      RowBox[{"d", "\[Rule]", "dval"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dot", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Omega]\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dval", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6868301757520847`*^9, 3.6868301902754*^9}, {
   3.6868302852787657`*^9, 3.68683028687313*^9}, {3.686830421478863*^9, 
   3.686830686381051*^9}, {3.686830729534521*^9, 3.68683072971982*^9}, 
   3.6868310464697723`*^9, {3.6868314239476547`*^9, 3.686831450142304*^9}, {
   3.6868315290284758`*^9, 3.6868315308695793`*^9}, 3.6868320569849453`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dval$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`dval$$], 0, 2}}, Typeset`size$$ = {
    259.2, {129., 130.6501953125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`dval$165081$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`dval$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`dval$$, $CellContext`dval$165081$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamPlot[
        ReplaceAll[
         ReplaceAll[
         isim`components, $CellContext`params], $CellContext`d -> \
$CellContext`dval$$], {$CellContext`\[Theta], -Pi, Pi}, {
        isim`\[Theta]dot, -Pi, Pi}, FrameLabel -> {"\[Theta]", "\[Omega]"}], 
      "Specifications" :> {{$CellContext`dval$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{296., {162., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      isim`components = {
        isim`\[Theta]dot, -($CellContext`g $CellContext`l $CellContext`m \
$CellContext`\[Theta]) - $CellContext`d 
         isim`\[Theta]dot}, $CellContext`params = 
       Association[$CellContext`m -> 0.09570799007, $CellContext`g -> 
         9.8`3., $CellContext`l -> 0.206375, $CellContext`i -> 
         0.055100441420188113`]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.686830543960349*^9, 3.686830686769318*^9}, 
   3.6868307305595007`*^9, 3.686831047225749*^9, 3.686831434812479*^9, 
   3.686831531408112*^9, 3.686832060296029*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-\
bfe6-c2f220cb7cf2\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-\
bfe6-c2f220cb7cf2\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-bfe6-\
c2f220cb7cf2"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-bfe6-\
c2f220cb7cf2"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-bfe6-\
c2f220cb7cf2", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/1d3ceb0b-1063-494d-bfe6-c2f220cb7cf2"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.686830543960349*^9, 3.686830686769318*^9}, 
   3.6868307305595007`*^9, 3.686831047225749*^9, 3.686831434812479*^9, 
   3.686831531408112*^9, 3.686832060700371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"r", "^", "2"}], "+", 
     RowBox[{"d", " ", "r"}], "+", "mgl"}], "\[Equal]", "0"}], ",", "r"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.686831061300006*^9, 3.6868311188075733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["d", "2"], "-", 
          RowBox[{"4", " ", "mgl"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["d", "2"], "-", 
          RowBox[{"4", " ", "mgl"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.686831096454471*^9, 3.686831119401523*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"linearized", ",", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6868312308450203`*^9, 3.686831254992702*^9}, {
   3.686831665518392*^9, 3.6868316674276457`*^9}, {3.68683296054535*^9, 
   3.686832964689033*^9}, 3.686832997294243*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["isim`d", "isim`i"]}], "-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          SuperscriptBox["isim`d", "2"], "-", 
          RowBox[{
          "4", " ", "isim`g", " ", "isim`i", " ", "isim`l", " ", 
           "isim`m"}]}]], "isim`i"]}], ")"}], " ", "t"}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["isim`d", "isim`i"]}], "+", 
       FractionBox[
        SqrtBox[
         RowBox[{
          SuperscriptBox["isim`d", "2"], "-", 
          RowBox[{
          "4", " ", "isim`g", " ", "isim`i", " ", "isim`l", " ", 
           "isim`m"}]}]], "isim`i"]}], ")"}], " ", "t"}]], " ", 
   RowBox[{"C", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6868312557078753`*^9, 3.686831354469853*^9, 
  3.686831667730661*^9, 3.686833001707679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"sol", "/.", "params"}], "/.", 
       RowBox[{"d", "\[Rule]", "dval"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"dval", ",", "0", ",", ".3"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.686831678025177*^9, 3.6868318114383707`*^9}, {
  3.6868318563316174`*^9, 3.686831875415242*^9}, {3.686831912761066*^9, 
  3.686831925978196*^9}, {3.686831978245174*^9, 3.686831980977405*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`dval$$ = 0.1975, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`dval$$], 0.3}, 0, 0.3}}, Typeset`size$$ = {
      259.2, {78., 80.33602031818012}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      False, $CellContext`dval$899777$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`dval$$ = 0.3}, 
        "ControllerVariables" :> {
          Hold[$CellContext`dval$$, $CellContext`dval$899777$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Plot[
          ReplaceAll[
           ReplaceAll[
            
            ReplaceAll[$CellContext`sol, $CellContext`params], $CellContext`d -> \
$CellContext`dval$$], {C[1] -> 1, C[2] -> 1}], {$CellContext`t, 0, 10}, 
          PlotRange -> Full], 
        "Specifications" :> {{{$CellContext`dval$$, 0.3}, 0, 0.3}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{296., {111., 114.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`sol = 
         E^(((-($CellContext`d/$CellContext`i) - 
               Sqrt[$CellContext`d^2 - 
                 4 $CellContext`g $CellContext`i $CellContext`l \
$CellContext`m]/$CellContext`i) $CellContext`t)/2) C[1] + 
          E^(((-($CellContext`d/$CellContext`i) + 
               Sqrt[$CellContext`d^2 - 
                  4 $CellContext`g $CellContext`i $CellContext`l \
$CellContext`m]/$CellContext`i) $CellContext`t)/2) C[2], $CellContext`params = 
         Association[$CellContext`m -> 0.09570799007, $CellContext`g -> 
           9.8`3., $CellContext`l -> 0.206375, $CellContext`i -> 
           0.055100441420188113`]}; Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.686831701891539*^9, 3.686831812024976*^9}, 
   3.6868318663941298`*^9, 3.686831927043446*^9, 3.686831981304132*^9, 
   3.6868743317586727`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-\
8501-36b66b2dbd43\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-\
8501-36b66b2dbd43\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-8501-\
36b66b2dbd43"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-8501-\
36b66b2dbd43"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-8501-\
36b66b2dbd43", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/425c64f1-fea8-42fd-8501-36b66b2dbd43"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.686831701891539*^9, 3.686831812024976*^9}, 
   3.6868318663941298`*^9, 3.686831927043446*^9, 3.6868319819041348`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<isim`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.686828604042306*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{3.686828610296685*^9, 3.686874406841174*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.686874570674745*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<l`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.68687457072122*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{{3.686874570769676*^9, 3.6868745769107018`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bigY", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"s", "+", "1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", "^", "2"}], "+", 
     RowBox[{"5", "s"}], "+", "4"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Apart", "[", "bigY", "]"}], "\[IndentingNewLine]", 
 RowBox[{"InverseLaplaceTransform", "[", 
  RowBox[{"bigY", ",", "s", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.686874582553372*^9, 3.6868746154012947`*^9}, {
  3.686874663107503*^9, 3.686874693222335*^9}, {3.686874814045074*^9, 
  3.686874819761219*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "s"}], 
  RowBox[{"4", "+", 
   RowBox[{"5", " ", "s"}], "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{
  3.686874615885157*^9, {3.686874666669074*^9, 3.686874693576487*^9}, 
   3.686874820225284*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"4", "+", "s"}]]], "Output",
 CellChangeTimes->{
  3.686874615885157*^9, {3.686874666669074*^9, 3.686874693576487*^9}, 
   3.6868748202636843`*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "4"}], " ", "t"}]]], "Output",
 CellChangeTimes->{
  3.686874615885157*^9, {3.686874666669074*^9, 3.686874693576487*^9}, 
   3.686874820301619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bigY", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", "^", "2"}], "+", 
     RowBox[{"2", "s"}], "+", "2"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"split", "=", 
  RowBox[{"Apart", "[", "bigY", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{"#", ",", "s", ",", "t"}], "]"}], "&"}], "/@", 
  "split"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{"bigY", ",", "s", ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.686874708621546*^9, 3.686874709119664*^9}, {
  3.686874805912754*^9, 3.68687485592863*^9}, {3.686875026865097*^9, 
  3.686875049626833*^9}, {3.68687508485807*^9, 3.686875089760322*^9}, {
  3.6868753146429987`*^9, 3.6868753277184963`*^9}, {3.686908196625806*^9, 
  3.686908221011957*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", "+", 
   RowBox[{"2", " ", "s"}], "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{{3.6868748354812317`*^9, 3.686874856344893*^9}, 
   3.686875052660389*^9, 3.686875090401033*^9, {3.6868753186478167`*^9, 
   3.686875328367421*^9}, {3.6869081982428617`*^9, 3.686908221304253*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", "+", 
   RowBox[{"2", " ", "s"}], "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{{3.6868748354812317`*^9, 3.686874856344893*^9}, 
   3.686875052660389*^9, 3.686875090401033*^9, {3.6868753186478167`*^9, 
   3.686875328367421*^9}, {3.6869081982428617`*^9, 3.6869082213349857`*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"DiracDelta", "[", "t", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["DiracDelta", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ")"}], 
  RowBox[{"-", 
   RowBox[{"DiracDelta", "[", "t", "]"}]}]]], "Output",
 CellChangeTimes->{{3.6868748354812317`*^9, 3.686874856344893*^9}, 
   3.686875052660389*^9, 3.686875090401033*^9, {3.6868753186478167`*^9, 
   3.686875328367421*^9}, {3.6869081982428617`*^9, 3.686908221367906*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "t"}]], " ", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{{3.6868748354812317`*^9, 3.686874856344893*^9}, 
   3.686875052660389*^9, 3.686875090401033*^9, {3.6868753186478167`*^9, 
   3.686875328367421*^9}, {3.6869081982428617`*^9, 3.68690822141502*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "'''"}], "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "//",
   "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.68687550061693*^9, 3.686875527162315*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["s", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "t"], "[", 
       RowBox[{"f", "(", "t", ")"}], "]"}], 
      RowBox[{"(", "s", ")"}]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "(", "0", ")"}], "-", 
   RowBox[{"s", " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "(", "0", ")"}]}], "-", 
   RowBox[{
    RowBox[{"f", "(", "0", ")"}], " ", 
    SuperscriptBox["s", "2"]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.686875518184565*^9, 3.686875527491763*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<l`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.68687457081682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch Work", "Section",
 CellChangeTimes->{{3.684352034538128*^9, 3.6843520403533773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportNotebookPDF", "[", "]"}]], "Input",
 CellChangeTimes->{{3.684460723261771*^9, 3.684460729218697*^9}}],

Cell[BoxData["\<\"/home/eric/Documents/School/QEA2/Module 3/Laplace \
Transforms/Mathematica work.pdf\"\>"], "Output",
 CellChangeTimes->{3.6869473955410013`*^9}]
}, Open  ]],

Cell["1/(s^2+2s+2)", "WolframAlphaLong",
 CellChangeTimes->{{3.686908253315153*^9, 3.686908256793725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmbedCode", "[", 
  RowBox[{
   RowBox[{"CloudDeploy", "[", 
    RowBox[{
     RowBox[{"APIFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<City\>\"", "\[Rule]", "\"\<String\>\""}], "}"}], ",", 
       RowBox[{
        RowBox[{"WeatherData", "[", 
         RowBox[{"#city", ",", "\"\<Temperature\>\""}], "]"}], "&"}]}], "]"}],
      ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}], ",", 
   "\"\<Python\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.686832563849267*^9, 3.68683260664809*^9}, {
  3.686832766797176*^9, 3.686832797569957*^9}, {3.686832864517561*^9, 
  3.6868328660279512`*^9}, {3.6868725002760677`*^9, 3.686872518574527*^9}}],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   PanelBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"Embeddable Code\"\>", "ControlStyle",
         StripOnInput->False,
         FontSize->Larger,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]]},
       {
        StyleBox["\<\"Use the code below to call the Wolfram Cloud function \
from Python:\"\>",
         StripOnInput->False,
         FontColor->RGBColor[0.23, 0.23, 0.23]]},
       {
        FrameBox[
         TagBox[GridBox[{
            {
             TagBox[GridBox[{
                {
                 TagBox[GridBox[{
                    {
                    StyleBox["\<\"Code\"\>", "ControlStyle",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]},
                    {
                    StyleBox["\<\"\"\>",
                    StripOnInput->False,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]}
                   },
                   DefaultBaseStyle->"Column",
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Column"], 
                 ItemBox[
                  ButtonBox["\<\"Copy to Clipboard\"\>",
                   Appearance:>FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                   BaseStyle->"DialogStyle",
                   
                   ButtonFunction:>CopyToClipboard[
                    "from urllib import urlencode\nfrom urllib2 import \
urlopen\n\nclass WolframCloud:\n\n    def wolfram_cloud_call(self, **args):\n \
       arguments = dict([(key, arg) for key, arg in args.iteritems()])\n      \
  result = \
urlopen(\"http://www.wolframcloud.com/objects/b59d9861-219a-4cc6-868a-\
ea3cde7c09a5\", urlencode(arguments))\n        return result.read()\n\n    \
def call(self, City):\n        textresult =  \
self.wolfram_cloud_call(City=City)\n        return textresult"],
                   Evaluator->Automatic,
                   FrameMargins->{{10, 10}, {0, 0}},
                   ImageSize->Automatic,
                   Method->"Queued"],
                  Alignment->Right,
                  StripOnInput->False]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
               GridBoxItemSize->{"Columns" -> {{Fit}}, "Rows" -> {{Fit}}}],
              "Grid"]},
            {
             FrameBox[
              PaneBox[Cell["\<\
from urllib import urlencode
from urllib2 import urlopen

class WolframCloud:

    def wolfram_cloud_call(self, **args):
        arguments = dict([(key, arg) for key, arg in args.iteritems()])
        result = \
urlopen(\"http://www.wolframcloud.com/objects/b59d9861-219a-4cc6-868a-\
ea3cde7c09a5\", urlencode(arguments))
        return result.read()

    def call(self, City):
        textresult =  self.wolfram_cloud_call(City=City)
        return textresult\
\>",
                Editable->False,
                Deployed->False],
               AppearanceElements->{},
               ImageSize->{
                 Scaled[1], 300},
               Scrollbars->Automatic],
              Background->GrayLevel[1],
              BaseStyle->"StandardForm",
              FrameStyle->RGBColor[0.69, 0.69, 0.69],
              StripOnInput->False]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{"Columns" -> {{Fit}}, "Rows" -> {{Fit}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {0.2, {0.5}}}],
          "Column"],
         Background->RGBColor[0.96, 0.96, 0.96],
         FrameMargins->{{14, 14}, {14, 10}},
         FrameStyle->RGBColor[0.69, 0.69, 0.69],
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {0.3, 0.4, 0.8, 1.5}}],
     "Column"],
    Background->RGBColor[0.87, 0.87, 0.87],
    BaseStyle->{"Deploy"},
    ImageSize->630],
   Background->RGBColor[0.87, 0.87, 0.87],
   FrameMargins->{{2, 2}, {1, 1}},
   FrameStyle->RGBColor[0.76, 0.76, 0.76],
   RoundingRadius->6,
   StripOnInput->False],
  EmbeddingObject[
   Association[
   "EnvironmentName" -> "Python", "CodeSection" -> 
    Association[
     "Content" -> 
      "from urllib import urlencode\nfrom urllib2 import urlopen\n\nclass \
WolframCloud:\n\n    def wolfram_cloud_call(self, **args):\n        arguments \
= dict([(key, arg) for key, arg in args.iteritems()])\n        result = \
urlopen(\"http://www.wolframcloud.com/objects/b59d9861-219a-4cc6-868a-\
ea3cde7c09a5\", urlencode(arguments))\n        return result.read()\n\n    \
def call(self, City):\n        textresult =  \
self.wolfram_cloud_call(City=City)\n        return textresult", "Title" -> 
      Automatic, "Filename" -> "WolframCloud.py"], "CloudObject" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/b59d9861-219a-4cc6-868a-\
ea3cde7c09a5"]]]]], "Output",
 CellChangeTimes->{
  3.6868326094273357`*^9, {3.686832787968598*^9, 3.686832799119422*^9}, 
   3.686832867317923*^9, 3.6868725295969677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeatherData", "[", 
  RowBox[{"\"\<Boston\>\"", ",", "\"\<Temperature\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.686832645767997*^9, 3.686832650407403*^9}, {
  3.686832840231337*^9, 3.686832850301722*^9}}],

Cell[BoxData["14.4`"], "Output",
 CellChangeTimes->{
  3.6868326779749823`*^9, {3.686832842935789*^9, 3.686832852461484*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rotate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"Pi", "/", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.686907893495247*^9, 3.686907962826211*^9}}],

Cell[BoxData[
 RotationBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}],
  BoxRotation->1.0471975511965976`]], "Output",
 CellChangeTimes->{3.686907982604496*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\</dev/ttyACM*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.686908663435783*^9, 3.6869086840491877`*^9}, {
  3.6869087360124807`*^9, 3.686908758497818*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"/dev/ttyACM0\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.686908743922512*^9, 3.686908774342782*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findArduino", "[", "]"}]], "Input",
 CellChangeTimes->{{3.686908958277647*^9, 3.686908969914126*^9}, {
  3.686909128861071*^9, 3.6869091429364653`*^9}}],

Cell[BoxData["\<\"/dev/ttyACM0\"\>"], "Echo",
 CellChangeTimes->{3.686913469513674*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"ArduinoInstallLocation\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"ArduinoLink`Private`ArduinoOpenDriver\\\"}]\\).\"",2,5,2,
   30908105390109845099,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.686910312056447*^9, 3.6869104361157217`*^9, 
  3.686913469678651*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"ArduinoInstallLocation\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"ArduinoLink`Private`ArduinoOpenDriver\\\"}]\\).\"",2,5,3,
   30908105390109845099,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.686910312056447*^9, 3.6869104361157217`*^9, 
  3.686913469847097*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{8.64, {0., 8.64}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
MM7frP8LRW5zsn2bFYu5VJqzlKQrM+wZ79nu30ggmdkzKuYiZUhI7BEWlRtX
ryvKuFJVfkLYE7CsY8/0n2cFb2v9vXCoV+Q2J1jMnlM2Nq+hinWSUpjSLd7g
W/6NvLy/K86RYWh8AmYEsIOXroDBNARgDwa3OiWwkYylRhfPhNXrioY/r7Z3
KkZvRRlXqsZtwp54BreY5dWAn333FfFor8xtTraYfeHeDtmzA0SX9KklpVfj
PdsNsAdZzFXff87t3mJmJbe/SKocIXsV6jbtUWPPc/ldmbiTCXsCVh7Yw9bq
+teidflof7NF6vBZ3rQswUsge2WohNV7STZ6cLLNAHvA/BuRDYnOa9gxS865
/UVS5QiJPcIXSUXTnpea9ymGbln1etoyEwh7AlYe2AM6dfnCtbVzVS+5O15J
Z3oPWHVHF4W3SLqaHPzCDHse3R32NiKrYWd9pRwK003O7S+SKkdI7NHtVWjW
tIewJ+VWNtgzcTSvHurh1fje2XU89tS3vpb4VeDX8E1VIQApnQJ6McMeTA27
89Y9GOxJVSIoKUNCrkwhvMEUfQ7V2CPLT0jbalyEPQErD+wJHf9vvfPi4+/u
P56aGDn0QmyJPVU7NuA/7F/PLm0vC6TUirCHRJq2W5lC8Xl1r0JZ0x5hBlGC
IuwJWHlgz1jLSvU4/+2B9eyT9y81xOPqebL2/ctdVfhG0FVNLd5TI2yfTiLx
0lqZwrOJo3n/RoQ3pPOOhZgwBGEPyUwRYY9Zr0LCnpRbGWAPJsPBS2YIOHyi
W5/i7V2vw/a72xcgP++1LkzbI0NKs8xq2DHYk3PdsZCwhxSdkNgjfKN0jj1p
S1Eg7AlYGWDPN3XV6kE+0Kik9FUh6sUpmKtHl6xeat4n7J1OIslE2EMiTaOx
R/hdY+zJym1M2BOwrGMPZmWihwNBlrh9ZEGkK1MwVw8zvMPnibp8342biZxG
UkZF2EMiTRP2KEXYE7BMY8/j7+6H5jYEmrMxlb4qnPlobkSn1O/q0XX4OG+W
QipvhWa1qVPdmJ6qbxTejW53FYM9FOElmYmwRyHCnoBlGntCi9bBSv1F4Xd/
8YeoCrj8rh5dhw9MQPceTsZ8GknZFeYRCA37ytancLurhD2k6IRphknYQ8Ys
u9jz6O6wmasHBGghe8O1NN7Vo+vwcd4mjlTGIuwhkaZnliJldu7srsOFX7QX
V3r2T6f2wn2V7+uXNQYh7Kk0yy72fHtgvbGrJ7rbgHf16Dp8crT4NQmtSLFn
7NQv1aa1q4Q9pBgUaFECBn+j/gphT6VZRrEHU7SeHlcPM3wGtfNOcaRyVaTY
o1i9l5nWrhL2kGIQYQ8vwp6AZRR7MAUsfAEXU/yuHmZaSdStAxdjPqWkLIqw
h0Tyi7CHF2FPwLKIPZii9cDA7ikpV4/uUu+U20zCyEkBu+yJiB970tbnjZQ5
xYk9rMEsYU/mLHPYgylaH/7zVYf8Wnb4WERnclH+rdBpQmu1d8ptJoUq0r49
8WNP2uYLUub0p8HWwF16t+8N9VeMsYcWp8ioZQ57MJnMgbYknr4cn4j0ZJ75
aG7oTPH2rtfL+OqQYhZhD4nk1+SdM4G7NDT3nrCn0ixbEysmk/nWOy96K3AF
FJ2rhxnG4XNTZ8332Y3NFOoiKRS6Mkt02HP7yAKtXSXsIcUgA+x58+Mjshty
TuMexfhM2JNRyxb2jGxbqDuke4ra1cOsu31BKPZoFbOv6j0R80kmZUgGzDPM
NXYQ3ngA5+rbWLeAvfnsecIeUtQywB5Fh+e5u9sUg/P81v3Cb+X7+uM5WKQI
ewKWIezBFK3Iitan5eUqbm1ewxqMw0dr5Xdq40OSyQx7/JlvMAKY3cm62INZ
PoCwh2QpHntC3ZLG2AP/KvyWrC9iUiLsCVhWsGdq+LLueO6XbGyPwjAOnzMf
zcXnNj/f0h7z2SZlQpiYb7awZ7RUcn2SSBUn3SQ0xZ05v3W/YmSWYc+6o+Le
KUmJsCdgWcEeTA7DWMtK2deBHGI7pVU7NmAcPlq5zbREKYnXw4FeM+x5/N19
byOtAxeFt9ySnSvUN/D4H9/T2lsM9rg+Q6RKlC72KLLOXm3vVAzLzzQ0ZeJO
JuwJWCawBxPeUmQyywb26Ky+9TUM+eBzm7NypUhxyqxXIZh/I7IhUd178yai
HUpAocyTtsmClFHx9+qjknhqYFJgT3WHKjVCgT2p8lsS9mRuMkWGtx6cbBN+
Pbr+hAoDngltXXhTM7eZqrpIAY21rDRgnm/qqv0bWdV7Qni/bdmzWH33/mmw
VWtvQ5nnzY+PuDw7pErV2KlfBu7VyTtnFJ8/d2tEcVuqh+VMZKkR9gQs/diD
CW8FRnK/krrioS/LzPALdeWoqov05zKrXkeuTBGaoqaeSgIqTU2FYk/aEkFJ
GRWPPQ9vHld8HhBFcVs+UZdXjMlLOovCb6Wqhp2wJ2Apx57xnu2YkXxq+LLw
6/EUrQvtydr3Md0Ltfo2g/VcvRbzJSClVmYRrkCHh9mNzcI77fiBH6lv3anx
S/hdVc8shD0kh7p3dp1WQFbN5F7Hwie31z77XjAtQda6p/ns+diON1nxkOnE
dCsmykbIQhVZo57puIrWZYbsXtjc9hP8NmmtLhKTcRkXpmlPznWLZgz2VM5M
QYpU/LJcoen3/N34zr6mba2/3/f7v2vb8vOu373Cnp3NG34eeExeat4nvJk3
f1IpnnnCHod6/N19THNC+Iy/LMWvnqvXEmQeZphi9puabXyA5WK+FqQUyjif
GVO9HtqrMIoWzamKC5Cyq9JXBd05tLFz1we7/zNAzj+/t/jsu6/Inh3gn8CT
Mqdxj+x+judgExdhj0Mh0zVljXruPZyUee/jNGQxu1YbnxzVs5NMV+Ma/vMy
LlmRo/OmPbT8Oik2ITsWlvqL8BBhXq79FnhSnt7RmIms5uhE2ONKD062Ye7A
8Z7tsi2kJ4krtCKGGXxMa7MpT8oiRS0z5kGWcYUm5EfRtKdCpglS1Ho8NcHf
sfzHzF4c+PSeCsd4wh4nQlasK8Jb52/fSZx2PHuy9n1MMftNzVAXJflUsowb
FQbeFGTJb6GNp3Sr1zd/ciIUe1LV6oSUaY0ceiFwx/KFh2Zh4iWbfh14WGRZ
zWlbmSsiEfbYC5nSMyyv3ppOOpOZN2Rus25VFyX5VKyQFY68IfOZQ8u4tKrX
p6lXISle8XNx6atC4DNm7w58VrNsiYoK6UNF2GMvZEqPonqrvv9c4pzDGzK3
WauqK0dJPpUq3YQEz/ydzBVO0dAbVWtvh8YnQpmncipfSDFo/I/vBe5YvoYd
GVYIGJ/V/Fx+l+yuhjs/kcOPU4Q9lkKm9CiaE345PhF/T2aMIfs2gy3Kv6W1
ZerkU2kyG66HZ+LC/u3IXhBC85l1y7jUXXCZUdMekkP9abAVM42aPUeB52VW
bUMlFycS9tgIOZjfeudFRXiruhDSSzxBQ/ZtBjrSWqsLMA9e2+O8UqRkZRzh
+vbAev92ZA9L6I167+w6rR2m6nVSzOKLuUYOvcB/zCyred7WtYFHprqjq2J9
mIQ9xnr83X3gGcwtJ1t7azodjXrUFpoywUxrrS6w51vaKb25cmQc4Xo40Ovf
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
           "], {{0, 0}, {765,
            324}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 765}, {0, 324}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Arduino\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (/dev/ttyACM0)", "Not connected (/dev/ttyACM0)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Arduino", 2}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{101.9689453125, {5., 6.538}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1:eJztvXtsVVee73lmRkLzRxRF0fyTP6JwpaK7JU/VhEipFCohcsPUNDeTUlkX
FVKlUA1t0UOlSKe4BKgmhOYVceMbC5f7CMcCbJfB4Ljtc4wIVzzaUYAQmVg0
TFk8r2ESB4MJNsGGOsGyQJ5fe03vu2uvx/6tx36d8/vqp4jAOfvs51qf/Xut
f1fz2//4f/+PuVzu7f8Z/vMf/+Z3/3716r9Zv/gp+J+fv/X2Gyve+tvl/+Gt
NX+74m9X/6jmf4K//N//h1zuMXz+X/88TSKRSCQSiUQikUgkEolEIpFIJBKJ
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCRScnp0
d/jBybbRnb+69c6Lw//przyD/4W/nDianxq+jN/aw4Hebw+s/6aumt8U/Ar8
lvrrk4NfwC96Fvp5zLf8/wSfRB6I/1ul/mLoDoz3bIdj9B81GJwHOBtwTkJ/
Dn5Caz/hZPo/LzxXgdOia6H7LNt5re8KBccS2CD+wpFIJBKJJBRMLmMtKwMz
tdBGti2Eqefxd/cVW4OJCT4WuinAAMV24Ff8H0ZOdupv+f8JPyP7vwU8I/sY
MGGA8WQnUA0/AWRS7yccIP8T/LkKnBZdQ54ofue1vos8QHuUIpFC9enQDc/q
+89t+qwPafBh/3eTPg4SiSQQvKEH3DsYYpFt7cHJNvx2gAFkHqRsYQ+cQ60T
ON6zXfZzWtgjBC3CHhIpVF+OTwCWtA5cBFZZ1Xvi5f1dYLn/XB+Rse0vO3wM
fg5+FH4adiDpc0AiVaJ052tmsliPwdaAuIQBrAxhD5CbwTmU7QAee2Rnm7CH
RAro/O07PVevAXJUFw4939IeHd7oGuwM4JDHQkmfJxKpzAXztczPw5JwmPER
K2FwCuhFvSlZDEjIEhnCHn6u9z4sO4HMhLyHxB64BLJrR9hDIrHg1LLDx1IF
ORib3dgMbAYgBIdw7+Fk0ieSRFIJZjGWO/rtgfVs/E/5EC2crwFO+HkTJtlS
f5F9Hj4g3BocNQ88Ab8QbEc4BfPuo6xgj9DVw6ctwZ7w1CeMFSKxR0Ey/Lli
d2bA+HAk7A//Ma0UYsIeUlICQui5eo2FqxJHF7cUBPDWOnDx/O07SZ9jEulf
Z5OHA70wDvPVT8wUKRyJS5gNO9ayMvRbwgiX0NUjy9vhJ9yRbQsDn8kK9vD4
Icv/4f0z8L/8xzDYA2dbkY6FPFdREAVhDylmMdTJnEvHzJ6qb6wuHKrvP0d5
QaQ4xV6TAQ8wacCKwp/EJXTOqEu0FBK6DhSf5+M+AUbKCvbwE72iUIs/5zwZ
YrCH3w5hD6lydP72HZj6y8yro2vMCwTUR4EwUhSCuYk1tAnlnIDxToz0iMc2
OEbjrfH17+oybd5JEpjOsoI9fOhKsSk4J6GIEoo9QjcdYQ+p7AW0s6r3BEz3
iSNH2qy6cKh14CK5gEiWYtks8FqtW9ztdtiPSMKMFGNXz7QIokJ7+wQ+HyCK
rGBP4ChkiU9M/FHzqBmKPaH4TdhDKicB7Sw7fIxoB2PPt7RTCIykK9apGNN3
DmlanY1jE+92UM/XodLlPYCiwOcDiS4KgAkUbvtzjcywB3bGH3QL+Oi0sEcd
1sRM4mrs4YvWedIg7CGVgci3Y8k/rQMXKf5FUsg57ejOQTGLjzGFJjMrxPuO
MNE9NSkpACaQF+T/LTPs4c+GH6XSgz0BPGPHzm+znLBHiHmW2ySlWTBT1/ef
SzZF+ekdjc80NIHNadwzd3eb3xbu7Xi1vTNg8JeBj8EX2RZgU8nyT3XhUM/V
a0lfVVKKFB3tOJxKolBoao2WQiNWQplhj7BHn0cpBtgjbIDjR6n0YA9/1R4O
9JYx9vCYp3WApGzp06Ebyw4fi40HnqjLA5ZUNbV4MLOks1hTPBSRwcY9QIIf
jZmInqpvXNV7goJfFS6YKJGrUFlaOmvY04k9/ulMBjDCedCjFAPskTXA8VAq
JdjD4xn7rTLGHtmlIYdPOenew8nWgYtRB7MY5HiEEx3e4C1f3Hiz8L3jB37U
3b7g7V2vL8q/VbVjQ9T88/L+LjjbSV9zUqx6dHcYOMQyS1nL0jlEZxR7FAt+
MUrRxR5Fr2PvEFKCPbLi93LFHsWlwR8jKc36cnxiVe+Jp+ojcXrMqm14Lr8L
OAcgZ2n3wcQhh7f24krAHt6AgrbsWbxk54roKAggc9NnfZT5U/bymgxHamwh
BiArmKBhZLapjYpU6cQe/2INPMCo50Hm8NHFnsDnA9tnX08D9vDZU15bpHLF
HvWCGmluDUEKFSvOisKlM6dxz/zW/ZGGq1xZb6FaiD1+u9xVxXxB8xrWRME/
cBUo8lV+YqshyBZFcmIw1MNPPBzoFS6xlE7xc4pNMI6flDF1YfyZVOwhW/Uj
MO8HHCBAtlrYE+Ao+HPgQBjDpAF7An/pbyxZltjDN/3mlzaTrYdLSrM+Hbrh
ts0g8+q81LwvE6jjt9OFRaHYwzuCljctc+4Fqi4colVQy0Mwcqqb2RobTDpj
LSsfnGxLZ3E6RnwBu2UwTs0wBl8JAAzscMAVA9c3MDnCtKiFPYEPs0k/cM8E
2CAR7OEvlv9bZYk9/JPLVkUJXG7LvSXFKbfA80RdvqqpZeHejsTpxdh0mcdv
Zz6aW9/62qL8W0/Wvu/qlMLVIfjJrmCEdA48ZYA6fvH+GeH6UHghV2n3xL/O
B2axAJME5lPPNxW40IHdUGBPIMXL858Edizwu4lgj6JgX7jNrGOP0NXD/okc
PlmUQ+BhtFPd0ZU4tFjab4qdNtjjt+a2nyzZucIV/xD8ZE4wkrtN4IFhFubH
qPMnr4yOeXZ66OuDl67IzOGP8qCiXk5CLb4sTn3SQt1NitQOf4hHK/FVcaH9
M76CmePHHv7oApep/LBH0YAxkNNODp+U68vxierCIaId3rYV611hTxT8Q/CT
CbkFnm/qqmGAdZirMzQ+AUhzfPA6oEu+r7/21OdgBg+Lq/2ZFk3uNnEuvsZK
nSwE/6qecxXYg/8kEnsCa7AKV5NPCntCt19m2KNOj+cplxw+6dS9h5P2Scuz
ahvmNO5JSb25W2PV6xEZ8M+i/FtO4Of87TtJ30okgRwCjyva8Zw2wDbrjvY6
fFicnDEm4eQeuhqpzCPEb02xnrvQRaNegV2xWYXDB4k9/FHLHD6JYw8fYy0z
7AldayNwY5DDJ4Xa9FmfZVn60zsa57fuT2fhuROTVa87tMtdVVv2LH62bqsl
/FC1V6oEU62TloMskmVDO8yT03z2/OZPTkT6sDg8e9OSyV0298HsA1iogBl+
a/B5/sPwN3xbbH7ykmGPcPdkH8Zgj3DelDl8ksUer2hdvc3sYg8m055fzS2d
jdArUz1Xr1k2HpzTuKecglkyw1Svu7Lu9gVLdq6whB/q85O4YOhzkrQMGzFL
aClNTZ27NdIxcMEsVpUS7JH5SRgHlvqLMDM+ONkGf/YnAsnCCkJUgO0HNiX8
RX6bQpKRQZfsQDDYIzsc4Q2WIPbIjh2DPaxpVcCE8Ml/jD8i4daY8VdB9knh
aefzzYQIF7g0ChQnxaYvxyds8pZn1TbM3d1Wxu6dgBlUr9s7f97e9bqN8+ep
+kbq8JyUYKawbLMMoytMwQZD5ZXRsYOXrkTt0okNe6ZFk2aoKXryqFvMyUyI
CsJNKRI5hJ8PxR5FiERIcQlij8ILF4oKZtfFM7dbkx0OftVR/tKQwydZ2US1
nqjLz2/dnziHeFbd0cUWGPXWFWVLaCGNLfLFjG1H6LyKmXn8Vt/6mk3zw+db
2inbOU49HOi1bDwIA6mue6c0NXV66Ot8X/+bHx9J/JGM4qzCLKmLkYoqfl0v
nDAQNi2aW9VZHEKHTyj2qBNi+bzrpLBHcezlgT3CVUcV0Tpy+KREMAMar5ae
LPAs7T4ITPJS8z7gE0YslmGgUGO/woiou33BmY/mJgg/sAM28LOq9wTFvKIW
vN9Z5i3DOKmVvTNaKh0fvB5zDCsR7NE9vTA9qbNHFCtn8ZAgm634uTW0Zof/
ihp7QltJy1b/VGwzIuxRsHp5YA+/TfszSYpUMOvB3Jch4Knu6IIfZa6bWbUN
UUMO0oA9luxcsWXPYuCQy11VMcPP8QM/Mk77oZhXdGKrSxiPrjBtsWUIkD/H
fDsJhrESwR4m1uZR4fkZa1mJrBdmLbLVm1Kzk0HBDk8pauzBpP7yXRMDH4gB
e3S3mTnswXjqeCkW7CBFrfO375ilLscJPEu7Dy7c28GcOYnjDdKqdmxgFARA
Ehv8nPlorjH8vLy/i+q83AqGPuOoli7wnLs1ku/rTxxsFFZ76vNIz7anqeHL
bA0sZg8Heo0bNsKm4OtONkUikdKgTZ/1pRZ4GOpUNbU8vSOShd3jtCdr31+U
fys2BAL4Mev281R9Y33/uaTvynIQ4IpxcboW8IyWSh0DF9KQt5Me7CGRSCRe
8F5vkMkTQ5XWks7iS837MuTVMUCgJTtX1Le+FnUgzDjnh9w+luLXnYwCeE4P
fZ221B3CHhKJlE61Dlw0KNea07gnurXRqzu6qppanqjLx8MesxubYXIXmmW3
Ii0DLNmyZ3GkGdEAPwal7uT2MZOxkwcPPKWpqYOXrrhtnkzYQyKRylVmK008
vaMxonUloqAdhjRwmJs+64O5+9OhG2DGSzPAF9kWYFOwQdgsbNy45E1mVTs2
RMo/sHGDFb7I7aMlYycPskprtFRqPns+E/Eswh4SiZQGwQyuO1/Pqm14qXmf
8wFwafdB2KyTpB2PcGzYxkwAQm7hJzfj/4ko/gXbXN60THd/nqpv7Ll6Lc6z
mkUZd10e3fkrRQ8ZT0PjEwA8iXMLYQ+JRMqQDAJbz+V3OY9qLdzbAZu1AQMg
t1W9J+BwEl9b0ywhHGMs/6e7fYFz+Dl+4EcGCT8AltTbRybgFoNyLfgKpvHg
ldGxbCXwEPaQSKQ0SLctz6zaBuAThyMec+8YB7Ne3t/F/DlJn8g/U3XhUETY
49mzdVu37Fns3PlT3/qabsxrdmNz4pyZQpn1AMGk8QyNT5QN8BD2kEik2AQv
6boLbD2X3+WwVmtJZ3FO4x6DpoIwzwKtpTnCYrNymZYx54/bzB9AKYMOP5Tn
7Am4xaDxMnwlNI2H5fAkTilqgAHrGLhw8NIVsCujY57Fc/JJJBJJKN1kHrdO
nlfbOwF4dCdW2GGYWzORSRsP8/htXsMat5Evgzqv6sIhCngZrAMFnw9tEVya
mkob8LCO6HN3t8HbEFENiURKsz4duqGVzPNMQ5OrTB4AHt3GOxmiHSaY+uPH
HmZVOzbUt76WYKozXKxKDngZBLbGWlaqo1qsLD0NVVpseTt4YeErDir5opNI
pJSrdeCi1kQGb3OJAM/sxuZNn/VliHY8AVUmhT3Mnq3b6hB+dN0+lbmMl0Fg
69Y7L4amLp+7NZJgHx6vHXrok5u25DoSiURi0qowmlXb4KQnz5LOolaJ1rLD
xzI9iuqCZfrhx8Dts6r3RNLXIT4ZVGyFOnlGS6Wk8pbhqYeXHa0mEjCwxHa2
dTXx7djZ0//86eHOzt11nn3ee2jw4vnJhyXMFuBjX1+/4jfYpuVefXPr68A2
kQZfDN2a8DN+wf4HNos8FQ4FO8lfl4P7dmpdGl5wLLAF2E5gm6HnRL2fR7pa
/fsJu33hXz5H3gb8tdb6sPrz/K7CwQYM/jL08PmbHG/x3zwyPZ6amBq/5P8b
rW6E8H5nn70MW8Dn8DD3Thkkh0RXvW4GP81tP3ECP7AdrSKvNOecO1Spv6iV
zBPq5GFRrfgdO/Nb95uVGPCUCyPP5J0zD28ev3+pgdm9s+vGTv0y1Mb/+B58
0dWlgQEZZqi69X+rMJjOQicv2E7gWzCVWO5b6I7JDL4YujXhZzzBJJXf8tvA
ZvFzq6XgbAMz7Povfx96pHBptPYKLgp/XH6DHwVWwW8QPhy6n3CqQ3eSv9ay
T8LJEZ4HJ7sKJwfOvOxu529yvMV286gFzHOn96cjh17wyEeLeZwEtmAjyCH0
5f1d5RQWiaF6XddcJTxf7qpC9vaB+y3p6xCHxnu2uy3XujI6FmdUi9GOZb8s
sPm7fs+4xf4eA0ZycmlghEcO2jAdDF48r9hUmWEP7HxSMxf+ongGXwndLEzl
e/9xK3KD8EmMdwJgw9VO4rGH/yTcnGos/+bW1/hjZyZkv6xjD2MeNoYA+dy5
fR5fT+2kYuvV9k5kHx7YsUzHs4SKrXpd1xbl33JS6v72rtfVP/R8S3vSFyFy
GayxNXE0r9hgaWoq39cfG/DYdwf127N1W514FF1hj9acpZgLmMoJe2AOFbpE
4pm5ME4e3tTuDqHzSm2h5GNw/yjIB4k9QvBQ32nAPLrHLrvVM409fubx3tCr
dmzAjF3AKtUdXTZjKT6NZ9nhY+Va/ZE43qgNoMW+yeHxAz+S5Tk/Vd9YBpFK
tR7dHf6mrhoPPCPbFqpXmjh3aySeWi14QquaWswiWWpLD/YMXjxvMHTD9CHL
fygn7JFN6PHMXGdP/7PZUcMXZds0O5OKU2R2/yjOIRJ7hK4eBZ4Z8B4z4Taz
iz088zCDd/zQrIyndzRaJvO81LwPM5yW9yqWCVav481Jwo8s4HVs7Y/He7Yn
fR0iFACMVjKPOns5NifP/Nb9ur0jtAxIOA3YI5wL4G9g3vSCBYA3wjwQ2VQY
D/bwmahCE76qI7FHMbXFM3MFclf2/uNWuC7+n2b558IrKNwgnA0h0nhJ0fBf
+LMQjWT+PT5mBL8OZ967f2Cbwlwa2WnHYI/w0ihgb1pCsCyBxw/w8GfY24P7
dnrnXLg1fgdg+8h70j7D31gy5vFezxXkM6dxj+UrJGZELcuQVkCJV6/jDaDF
PuYVCHjVr/+Zl8QSushCFqW7lvqDk22KrcXg5IF3GXyWnY256pZpiT28P0GW
HSEMEAhn/3iwx+HW8PNv/C/sDCqAGRS/iL80PKLIImI8JMA+8B8TJhULfxrg
hycfocMQc635zwh3T72fcDYUBAL/xEhG+K/8TZ546CpUauZRk09VU0vUTp7Z
jc0VUteTkup1vAG3WM5TXoXX8o01/hn/m7rq0NUWsqVSf1GrYmty8Avppqam
OgYuRAo8bPGXDN1ITrCHnwcVSTs8IwknzfLAHqFjJP45jhWDhyYV8+eHd30A
Y/CIq9gyTyl8Kjt/lhSZRfyHhf6Z0GstdPWoi854igtNflYri9iDrKHgyWd+
6/6onTwvNKc0wfX87TufDt0A2/RZn2fVhUMv7+8S2rLDx7yP1fefY98NBOxS
Vb2OtKodGywjFPD15bV/I5z61TktGZJW0RYgn8LZNTQ+sfmTE9EBz6vtnQ7T
lZG2vGlZ4tgDUx4/F9h/vgywR+iaSPMcJwwCBj7DU6u6ogqDNHyZmwI/+PtH
uAOh15r/gLoWD8R7wyzvycxhz72z67RmKI98bJhn4d6OUCfPE3V5VheW+JI9
wCetAxc9qnE+5j9V3wibhY1rrXSWKrN9W+/83vB7fykkn9AFp9Kvbw+sxzMP
fFixqeOD16MLbBks/uLK5jWsSRx7+KE7dPrgZxx+tBdu1qwpnOJ3TQ5YsjX+
qIVF6/g5Do7L36xPaJhKc6R4N06dyJHi5at4pm5EwAeG+EQX/kSpzwzmflNf
a6GrJ/Ry8F+xTLDJFvZoMY9HPv9L3QfGHZiXdh+samoJHQbn7m7zcqTXHQ1p
wu9czIcDHDK7sTlxosiK2bt9hj/4CyEJZJd8Hn93X4t5FEcaafZygsDDLFDD
fqf3p6yTj9exEGzyzhmZeb0NbdoV8nNW6Csw/xV+etUqcmHprwZBHOOj5rcW
mHz5onUM7OmegVDCREpWlM3voe5RTHOUwp92/n5QX0pMeFHozPEMnxrtiXdb
yRKV8coQ9pS+KhjMTdcL33+zyzCfZ0lnMbRrPXyAL4SHl9xIT8W9h5M9V6+t
6j2RXX9LSszW7fOhmHzUPpB0CpgHX6iuTuaJLrAVcw4Pb/DEwfsFvGUAugC0
PJ5KrE7TCfbwXzGo7VWUwzPFiT18HojuHBcP9rCcW9n55D8fyjC8+NMeuEz8
/aC1QST2qO3gvp1q1uJ3EtPJWa2sYI8x82wofmg2wGICW7IOz29+fATedp2f
hPO379T3n0tth8CMmm2RV8uc4bWZJx8t5oFPKrKYTg99HUVgC+l3dW7AOfB+
0TpwMW2tt/hJMxR7+BdnmHQCnzFuaaKYOMwK2JGdYfyTLx8QYVNkerCH1YOr
Ww0LU4WdYE/gwNOAPXVh2GyA96EyLmC3/F0tTY1fGjn0QpzMAzyjHgyFTh6/
NZ9VBV61BOMtDLwUwIrOnqx936q3z945w+vF5JOJwnZd5lEcVEQVW8g2Wa4M
3iw2fdaX8gYU/PyiTvaYxqUDGWOPorDIrMmebJZRTL6Bf/LqfbSwJ6LcHube
Ce25J3NllDH21Ckrs/ikpiiwB2mWv4vX46mJOJkHXipDC0OQy3gN2TUqJNqJ
2ZY3LTNv6dz5veF3BUnOakhIg7SYRwFypampKFZRxy/+YmnwoMHjlqHWEwbJ
HmbYw1bJ9NuFf/lcOLshQSUi7OEbDntb0D1RbgU0iFwAQhG+yS72+HFR4ebC
918qe+zBtOhxyDyhyTwwAuOzo2EWMDjkew8n6/vPUdJOIla1Y4N5wCuD5KPL
PLLtAOE7X1QU8wJib/CgweOWxVbq/HQQuuK2GfbIZhlhNxXkrkaBPYF0Wfhf
z/uUIPYgV5KCvVU767KLPfxnYDeE/CMMdRkEc0OVcuwxKN0CM2Oe6o4utSMd
BmHdJS26Ll/FH+z523e01o6vZFuyc8Wi/FtRbNky4DX8fmbIR4t5FB2Yo2i/
HHVUK7u048kg54H3h9hgj3BpDGTnXufYw58NP0UkhT2ytVD9BgAQyqvT5YU9
05LeSsLQYTy5PenBnj8NthrMO/niRoNhNjSBGcZhXYh6pqFpdmMzZqnK1oGL
lKiMNyATFo3qbl+AXHlW12wqvDJBPlrMoyhUPz543S3wIPuCmtlT9Y2rek+k
LTnZTLFVcik2i8wvEs6/oSZL9uAnXx7AAjNyUtij4D1+PSm1eEgw6BuQHuyZ
FiXYCzcYTyUXWy4t1Cx/N1RT45diY575rfsVQyXgkFbbn0DJyabP+hSHCcBD
2Tu6tmXPYv9Fr299LXTxWQOb17DGONUn5eTjinmaz57PipMHXivgWYviZF4Z
HQMD/Dt46QpYvq+/9tTnnnmH5ryLKT9rhObZOsce+EXMh6MuYOfjIAGcSAR7
hCtJ1c3EszDunYAMUrl4R1OAlJLFHv5OEzbkQX5MS+ksYH88NXH7iPZif+3F
lc6ZR3et9oV7OwIZmPCCyfvS7z2cBBwi4DGwQKc4ZsAny5uWOf8tq5aG9YKW
PmkgHzzzKJrzOO9GGJ2TZ9nhY66CWaOlEtALsA3wHiCNVmjPOfbwxdqhVdWY
Tr9a2IOssokUe3g3CO8NSGSOE64LZuyp4AlTzU78WhL8aU8b9gg/LDyQsuzS
fLfvDd1Z5nDhFwaD7b/f+5FiwJzTuAfPPIoMzOrCnw0FiXh42IoSYKt6TwRW
2pIZfIB9Er7CvgsbiXm3eVMsfg2IMq9hjdufe7L2ffPltkXNDJMlHy3mkTXn
AeZx240wCicP3Ktw62JCzArBkTLO0YWcGLBnGvE6H/p5fvrQwh4+MRUZ5DI7
XtnW/Caso09kjuOhwsZNwedlqQkKk8eVNuyRcTt/m5XfmlwGKT2nC4sMBqLT
Q1+fv31HNpUjq9SZhaYGsR4gPVevxQM83lqi8LvOMxng3ZlBEcOhOFkIsxbS
lj2Lnce86ltfKwPyccI8o6WSQ+aJolwLHjF4s7ABnnO3RjoGLrhFuyiwhw/u
KDwA/Dy467/8Pf8xPPYIgzjC6SNO7BHubUqwBxOFlP0Tn7+kXoEd44hLFnt4
/5UMe3i/WWhj8OmZMyb7p7Rhj0FKz9nCgt8UtZfcAuZhvygkH/y6pcjmsc+3
tEeatAzbB85JqpcsgBAQHVBW1InZyOpy+JjzOq8lO1dkmnycMM/Q+ITDoq1X
2zvdOnkY8JidH8C544PXo2g9FB328KO3bDrAF84gsQc2yL+D4wvYbY5agT1C
kJtOCHuEnCmbi72absVszlMu32SbSRhf4z17CWIPHK/Wuur83asgHzjJcG8r
fGupwh6DlB6zFj0e8zDBUOmNnDAOs4XUMVbd0RW6aFd0BoM8oA7whqUn37nY
0qjOEejZuq1amTbNbT9x6/YB8jFMck4B+SDXGFUwz7TTJsyhjdC1jIW0DE4L
o52IVhCLGnumRbMMWx7UmxHgD2dP/7OwjFqYIIFZgV3WbVgWdjFbnAJM6LxS
YI+s9U0ic5ywwJ/lM3tnHq5OoPejcGUKJqF7Db4LR802CL8IhyZsjYgsklIf
kRn28JdV1rRQgXw8Q3q3HBwyg0n4L3zMf3PKNmi8OAWYZVoRr/E/vqc7oXxQ
3K47/gjXCWXkA8yjXnLCb/Nb98fZMN+zDLUcYUumAps5DIRpsQd80m22T9WO
DVkkHyfMw2TvD1nafdBh9rJZDk9stBM19mA6wwhN9mZtszgFsuQcb1rLHygy
uhPBnmkRV4SaOv/HYIMKAEjP4hTqy8fEB8VCTcbhxje585tn8s4Z3anEoHRL
sVTWzn/5f/DME/8y0BmiHaE+Hbrhin+erH3/w06NkJPbbB+35BPDiqXjPdtd
Mc+0dT4zPGIOF5swqNI6d2vEbQ1astgzLYloGM+txjOCIq0oHuxR+AoinbnU
Qi5L4Td1XrrBBmWXJj3Yo85TMj522WZTgj0G4a3eQrVD5sEP5vCuGmdga3Zj
M7zMZpd2eDH/j805eaahCS7E6uIfThcWIe+W4wd+5LCxIUCUWWG7sJ9PpORT
6i86ZJ7pGQ/eD//QgX9B8Ju6WYSWwVuA1lKho6XSwUtXnK+gkQbsmZ4JAeB9
Pgf37dTK9sRMLuqFFWLAHnVZU3QzF0a6borQZF2t2V+BoynBHtZwEnMmQbKI
rdbJTAn26Ia3LhZ+qJvG7IR5QhewcGjVhUMZWhhRVzB7Ghfy++fcD4rbrxe+
j7xtHPb2yQT5OGee87fvsNXitMLBzFw5SJ+qb6zvP4c/CUPjE87bKqYNe6b/
bYFv9YiNaZSnNSPs/cetMHUatAvGT4iYrYX6CqKbuZCCXww9CXB1AJCQqSOY
DcL9oN5a4tgDBK4GZqHgoOBEYdayx+f2xI89BuEt3TRmoBpgG+Gv45knnmQe
GNUdNlhLv1jwC39+YPYMXBcA4O5CDfLOcZjn7JZ8FM2QzQQkAzyDwZ6HA72Y
DQZqHvGdPB0m88C7AP7RANKIrjIrbdjDBLM/gA1MZ/5lr2GOgHdk5DoILC0W
Y/g3dPhp5DYDJtxnfmuhh2a8524F8zV/deB/8VcnIJavDvO7tzUACdggsATm
GGF/tBZfCJx55NXBX1ldwXZYgr13+CwzOfRA8De5zW2vkEF4a3dxjdaAs+5o
rxPmiQF47BusZVQwl63qPRGa+QPYKZtqtxXrLxZ+iLl/znw011XAK7Xkg2ce
5I8K+zxgyMdVtSP8Ot75mQjwsNUo8n39bJUKZqeHvmarV8iGIBKJVGm6f6lB
a77Q7Uz45sdHhiSvh3jmiTqBuZKBxy+2ZocCftQ9JPFun8tdVUt2rnBFPiZt
nDu/N/yugHyQwSa18C16bJgHQz6uOvNUFw4hn454gAfGjeaz54Fqzt0aiceN
QyKRykO6zQmvF76vm9IjG5RSwjwEPLxk8PNEXR5zvfBun/rW11xdR5M2ziLy
wafZKDS681cY5pk4msdsTcE8HvkIL4QTByneyRMp8Kw72gucc3zwOkEOiUSy
0dipX2rNFLpdeoQtepiQWY6RMk9F5fDoiocffBtJYOPDhV9g7qju9gWuUn0M
yWdtkEZGti20aeaDbNGDTKIOZR5mfMLVS8377E8p0skzWipFUZPOUOf00New
fePLQSKRSJ5KXxW05gjdinVF6VbizKNbfluxglmPJTyzonUtQxZ5uUr1Mczz
2TuHJ59v6qrNTheydGusZSVma0jm4cnHyYODKdcqTU0dvHTFLe1s/uQEbFMW
GSeRSCQz6WYy64a3FKVb8PqWIPPolt+Spmfm3w8+/8JgCltd/MPZQvhtdrmr
yskaXobk0zLHSUn75OAXGOZBtoYG4GS16nhj5GP/4MDvYpaWO3drxOECYTBi
HB+8To4dEokUkXQzmbXCW4o05iujYwkyj1b5LSkguKZmyRvIPGcnSc6G5CNq
4IzMvWF6dHcYU7qFjKAZMA8z+w7MmMAWwImrNB4YKzoGLpBvh0QiRapHpeGR
Qy9EF94KrDTqCbl+dBTMo1V+S1IILq7BO36+uBET8NqyZ3FS5DP8gYB8kB11
kKVbyHxpY+axN4wj1FVUC8BJNlCQSCSSW907u04rvLW6+Af8aCZL6UGWbkXB
PC/v7yInj0PBpTRYCnxD8UNMwMtJeZch+bxnWNiFTGOeHPwCc3oTYR54LwgN
bMFri5PFQ2GIoGAWiUSKTY9Kw1pzgVZzQkVnQkytx9zdbc7H802f9cV8hitE
V0bHdJdY+k2xE7OMl5PyrmfrtmqvWCoqaQ8NSz042YZhHmSLHsvl0swMQCs0
sGXv5Hnz4yOwEWobSCKRYpZW0Tq8nmuNbLKuGscHr4d+13kfZniBpXKtSGXm
9sGk+hw/8CN78jFZq/2AoLBrdOevZGcAmcaMTJBOhHngR9XMY+/kIeAhkUhJ
SXf5rW3FevzgBiOb8Edh2Az97qvtnfG/wJKcCFhXN9snX9wYG/nohrqEhV3C
9ObH393HpDErqMmv+v5z8TNPqC8UXlhsyrUIeCpEX45PwDsm3MNwRzGD/8XU
A2ZdcJg9V695R906cJHetdMmLVePViYzvA8KfxFGvNBQiPN11eEFNuYTW+GC
q6zbsA6IOjTJGcjHvqXPkp0rtMlHVNjFpzdj0piRpVswWsbPPPCjbq8p/x5U
rsADExx/Pl/e36X+lvAqrOr97yMnzJjIzQJmyC6rHzaEGwzYU/WN8BOwG3A/
6L4qsqamsxubFRuH0TiUBGAHbO7kAL0Lj1pB+MJfV19NtoKzoq0W5qhJMUjX
1aOVySwLb4V2JlzafdDJUomeUVuepIQJZfptQ/HD0GUsLndV2ZPP8qZluuTD
r1V6650XH90d9g52vGe7q9ItmKcc3v8YC01gHhqf0E3c8lvZJy3LLpniKzIC
CaUU4fwri4cG3vgw2BO4MUKDnp4Ak/DtNNWbTRB7eq5eE25Thj1wFICIyB3D
L2ZHikharp724kr8KNcxcEH4i+dujYR+97n8LoeDufoFlhS1dKfL3xQ7Q8u7
nJCP9tIVovRmr9Pgw4FeV2nMWq2YXT0maubRxVe/bf7kRIUsmyV0cShe8IUO
ItiI/zNI7FG4egIlq7rY490hoe0+DPyTisSDBLFH5qoSYo9BcwlKt0hQWq4e
rZ7Msuot+MvQrACHpVuYClxSDNINjsRGPs1tP9EjH1F687cH1iM7E473bA89
V/G36FEPwjaBLXjYFWvwlZ+Er/yKSIrwQmOcM/z8i3T1yDaINMUrpLF/srpw
SLjBpLBHAW9aTja1hUY/SRHpbt8bEbl6zt0aEf5i6PjpMI2ZmCdt0vUYhC5d
ak8+Js18dgnSm0e2LQxlHuSqXpajva6pmcemYgse9nJN45EJH5CanuFb4RUJ
OFUw25S5emAM5LuT2WBP7s8DcH7Z3LdCh1hS2KPISuIvZUQMSYpIWr16LhZ+
iB/uak99LvzF0PDW0u6DrtKYiXnSKd0KrxjIx6SZT70gvTk0pQeTxhxzubqa
eQzK8ZitO9ore/Epewmjk15Rj9+E1xq+HtggBnuEwbKcZFoXbpDlMDNTB1gD
MTgmRYgNDpOVMtX3n5ORjNDhs6r3hLdL6n2D25j/ZAAqkNgjO5PC0z4tZzP4
ezhe+FHYDdlDLTyTpEil1ZY5X9yIH/SEiYuY8JarlB5injQLbg8tBwKGfABd
bG4Yg5L24c3BJB+1Yboxx1y6pa5tNE7maT57vtKcPH5ZgisyJuWffwFchTAA
fylkWqT7CABAxj+8m0J26/K1JDKuQJ5eIWZgyqMw2CM7k4qzhLyIsvNDDp84
9XhqIiJXjyyTObSF3UvN+5wM5sQ86Zduukgo+dj389Euae/8Hp/kIzPMAqYx
l26pmSe01lJo8F5TsU4eT7IiIKTxacOhlKLl6sFs0JPsnuSdM5jcbE9CtEAO
2pFij9rVw58lWVstIW0K95zaqsQprcXW8a4eGPeEL3qhzQmXdBadhLeIeTIk
rbk1BvLRLuwS9TDkDdOZMPQ1060pBlt4fs0WUq/ATB6ZbC4NvzXhfP18Szv8
PTPhnQPIIQtfaiUgyeqyAxsXzun+7kN+ATXxH0Y2tIkOezDPYOAsCQ9EdiaF
jMTHNEnR6faR8PUfDVw9sqqN0IH0mYYm+8GcmCdzOj30darIRzu9OSzJB5nS
E2fplpp5zBKYK6pcK1TC2RBjwhQXs6RZRfREC3tkvx4gDSGNyNxNQqdK4tiD
iU4GzpLwsdVysuUkriGSc5W+KuAHdnwB17qjwY61TKFTm6vwVmhbCVIKBbcH
Pm82lHy62xfY3EJATbrpzXwnH92UHnyjM3tTMI9ZN0L4yhBXK1ThMs7RErKK
GfYoeuJpYc+0xHkVmNy1aCSF2KNIyVacJcyZUe8A/sBJlsK3KNTq1QPzF/9b
oetQuApvUW5YdgXzpkPyqW99zeZGmtewRs/hI+rkg+/SE2cas5p5DIq2KLAl
lLAyPTAbCuMp+AxkjM1ubOar12UbrHDsQSai22CP7POEPTFIq269u1Bj6eo5
eOmK+otOqrdkQWRSVuSWfLbsWWxzO2mvWyFargvTpSfObsyKWnUz5qHAlkL8
7OyfMYWpwrKufTadYeCiIzeowB5MT8VMY4/wcghBCIM9ioWQdD9PcqXJO2fu
9P4UOZ7jV+CSuXrUw6mT5oTU7rI8pBVkCSWfJTtX2NxUut2bh9/7y0BKT+jC
W3F2Y1Ywj1Z6FTN4qCtksQljCfNX1f8q81dbdhfknQ+62INZlDPT2MNvk9X+
hx618IQrdgZ5gUgRaWr80r2z60YOvaAYyWFmidrV80Rd3nI8VxQskDInrZTa
UPJZlH/L+L56svb9Mx/N1SCfzu8Nr//v2PPgZFvowcbWmdAt88AFKu8VRZ1I
mCviTYjCuVsrFcdfydVz9ZpixXO+ipywxzPYEwUOhR618ITrensIe2LW46mJ
0lcFmfNnW7HextUDY6Pa1eNk7S0q3SozaZGPet0uywbO2j0M/62eHVOxHltK
j+K9wIB5KJkHL96V502I/GUSRqOYkJSicB4GBkld7BECVSAkl13skbl6pk2x
Rze3h7JSk9Kj0vD4H9/zO3/wdesyV4+6K4uTdSgoKlqWwpNP6IqlQD42Je26
ST7DH/wFpmL9y/GJeFJ6FC0dDJgHnugIrnbZio9kMVQQzr+KoQxPKbJOiZhl
GiozpVkIigo6tcEe2RJslNKcuEpfFVid1+7iGuRgePDSFcF2wrJ6qppaLId0
WQYgqQykRT6A6AoUsWzmo5fk0/m90h+LoUcXT0qPW+YRenRJCvGJsqw3nbBf
gbDkikmLUjATsZP1UssDe3jzxwRDz5KTvj2EPSnRo9Iwsm5d1pZZndWzpLNo
P6RTSk95C08+G4ofXi98X0EjNiXtup184K1BfVyxdemROc+JeWITHx4CFuLn
SkWEazpp7JF5kDDtCrOIPf6nJvQsCftSytpEULvClAs/MAr93qGunjmNeyyH
dOpMWAnSIh81jSxvWmZ8s+l28vnTYKvsiCyrcvAmC5roMg88yNSN0Fg84gpn
fHWwHk8pSM+MFvbIVhjHLE6ROewJjWFh1uSSrUQmPGpanCI9wi8TKazpUK/d
bO/qofBW5QhPPvniRjWN2BR2bdmzGI89I4deeFQa5o8FZgpZuY1bk71vnrs1
QswTp4RxLv56qesy8JQiWxkz8JKI36DMM8m7p8oDewLbCT1Lst7Owv3BZIaT
khKQDHJUrD31uXAL6u4rlq6e8ghv4Rtla1lohCWLCi0J9Ky9uFJxciwLu7SW
6xJeCOOlmrRM9tqu25OQmMeJQnPXZc4BT6EF7MwU/RACiUOYDQJBKRCdj59G
gT1Ag4FjBJMlIfOfxBy1+sHBfEa4P/CXfpSFCUt2daiMKyVS+2r8Joz4q98o
7V095XGfEPZoCT9lq5v52KQ369azB0JdshwJtyZr0aPLPNScx5VCuzOFdpi3
DIzynhnLDQo5LQrskcXXkIYJ7fmN97nxn+GxR9GJAs48fF5xFOXxCl8eQsYU
YBQVfl292LplAVfZNGQm7NEVcuIOLWm3SW9+e9fr+GvhD3XB4BZDxbqsdAvv
LvOYh5rzuFIo7oZ2HrOkFD4N0nKDwh3OOvYI48L8x4QTkPF+UqPClAgf4eoY
uKD7dftePWXTnJCwx0BXRscwdyaQj7qwyya9ubtdxVQBu9v3BtvzeMJbwjx/
rfaPxDxRSEG8oRGuaTtKEc7mNhuUOduzjj3CBgL8x4TYY9aGS12+R4pT+AiX
MO4PLKT4ykvN+2xuY8X60ZkTYY+ZkIVIoYVdxkk+z9Zt1apnn7xzJp7wlvDN
kZgnDVJAL2YNZWNKkW3cbIOBfJWAMo09shPFf1IWbtBdU1ixXgwpfiEHSfiY
8OvqZGabFbjgplJ09MqcCHuMhSRzdWHXmY/mGif5aLVu/m//9f+IIbwlqwdR
d0on5olHivQPTCMOA0qB+0FR3KS7QdhaaEZldrFHkWDDf1iRZaHIWw78HMW2
UiV8hAumHv7r6mTmhXs7HN7DWRdhj42Qs7k6vbm57SfGdyM+1GVTNY802Zuj
2vUaMHhhIeaJSHB1WGorb5ivn799R/Z1v8EICQYcFepGCN3gqt4TsClWHoV0
SsBX+O3IvEMAUZgPC7eJtwCqyY5a0TRJeGbU5wHezWGD8MnAyw48pABFsEvk
5Emb8K3MhFUe6snoufwu44G9/DLeCXsspc6c90yd3myc5IMMddmQFf7REE4u
Wm0JqVadRCJVppBdCoURLnVn5tC6dYCiqqYWWcJzmbl6pgl7rIXMWlld/IM6
vdk4ySe0qstyFVSkCaMPyNxvYh4SiVThQo6TwgiX+u0yNJm5uqOrZqbUCz4Z
SAEqP1fPNGGPCyHrsj8oblecMZtOPuoGhjb1YkgTJvlrtegh5iGRSBUr/Bui
cJxUe4qe3qHK6oR/DXx+4d6OZxqaFGN71kXY40TIm7a7UKM4aVv2LDajDkUD
w+72BVEzjzClR7d069ytkUQuHIlEIiUuZALkuqO9wq8rXjCrO0IS8ue37pd9
8bV/OlhOBVyeCHtcCZnEok7yMU48lq3VZbMKBsZkKT341fRqaF11EolU2UK+
JAq7FKpruNSdmWfVNiztPqiFWGUgwh6HwhR2qZN8jPNw4Ft8bvPbu16P2tUj
LD85eOkKnnngw/FfKRKJREqJSlNTNl5x9byjbtczp3FPBY7MhD1uhYF2dZKP
cdVVoI2PTUcgpAm79Gitrg4PbPzXiEQikdIj/Jgp/LqiS2FohGvh3g7Zd8t4
MUTCHrdSFxJ6pk7yMU5CBtTxNhJ1ox5hhr/Wqlu1pz5P5BqRSCRSeoR0jwsH
THWTQ3UN16zaBtkX83398Z+H2ETY41yY9Gb1QqWXu6qerdtqgCLzGtawLcSQ
ySzsfItPY6ZWzCQSiTSNbv4mjDqpFwtQ13ApIlzlnW9J2BOFMPSuXq7LmFtY
32YzasKbsEksvhszlauTSCQSE3LYhBdq/ruK4pGl3QfVw7gswgXjc/wnIU4R
9kQkDMC3F1c6D3UB8ESdyTy7sZkPb2ml9AifXxKJRKo0wQsgctgUfl2RVKBe
h0sR4Sr7lEvCnoiETPKJItQVtfEV61opPeXtPiWRSCS8kJ1PhIk9amSa07hH
MYw/l98l+2LZd1Ej7IlOmCQfdT17DGtp6ZpwfRZ8Sk/Zv0eQSCQSXsjcAGHH
HjUyqUvXZV0KZW6lchJhT6TCJPnsLq5RnMkYVk7H2/Mt7fwx4lN6hIvokUgk
UsUKmc8sdJIrOvaEJvYs6SwKv1jeNVxMhD1RC3NXny4sUoS6YlhIFGl8eAu/
lMybHx8p40YQJBKJZCDk+CmsAVG42dWJPU/U5bX4qsxE2BO1MHkv6lCX8Vpd
bo2v3ipNTSk6ZQWM0phJJBLJL3XXHb8Jv674/NzdbYrBXFG6Xgkvp4Q9MQhT
5aSu6prXsCZZ5hFWb+EX3irjPuek6DQ5+MXE0XzSe0EiRSWkt1yYz6z+rreE
utBkiT1lvA6XX4Q98QhDCIqqruMHfpQs9nw6dCOwFC++Yp26MZPwYqgzuvNX
w//pr5hNDV9OeqdIpEiE7M8szGdWNypUj+eyxJ4KKTkh7IlHmHiQuoFhDOuK
Klw9YC/v7/IfDrJiHT5G3ZhJavGo47cHJ9tkX7z3cBKAfNNnfdWFQ3ziGYmU
ciHrQYTecsV3gWoU47miY08lJPZME/bEKIw/8+yul2WnNA1tfDyHDz68RSk9
JKGmhi8rUMdvYy0r/V8EvGGcAyjuvzlbBy4mdSwkkpmQZVzCUVTxXXU+8zMN
TbIvVkjzfMKeOKVm+/yH/zC89q9uHpgjO6uJt/FZdvjYtE54S+ibJVWsAHUe
nGwDjLn1zouhtOPZyLaF/o2s6j0hvDmFHaVIpDQL2fFMmGasCB+o85nhX2Vf
jP8MJCLCnjilCHX95p86L6yf96/j/Ht/qTixiec237z/ABneoi49pIC+PbAe
Tzt+e/zdfW8jrQMXhXemPwhLImVCyPdH3e8+l9+lGMNl+cyVk4RJ2BOzZKGu
fb//O2+Qv7lL6vBJPLf5x/Lenn6jxUZJvEr9RTPsmRz8wtvIp0M3hHfm7Mbm
BA+NRNIVvAVjxlJhdZV6WQp1Gder7Z3pd86znL2IbF372rd3ve7cYLPR7fOX
GZ9P+VDX6gNtfzbOr/+rm51SpFyyc0WC2DOrtmFp98HQR/X44PWkTzMpdZoa
vmyGPYGsZtnNmdRxkUgGiq56XT2GZ2LQhok+2Rf8tBlwYNLXxEp8GdQ/v7c4
MM7frP8LRW5zsn2bFYu5VJqzlKQrM+wZ79nu30ggmdkzKuYiZUhI7BEWlRtX
ryvKuFJVfkLYE7CsY8/0n2cFb2v9vXCoV+Q2J1jMnlM2Nq+hinWSUpjSLd7g
W/6NvLy/K86RYWh8AmYEsIOXroDBNARgDwa3OiWwkYylRhfPhNXrioY/r7Z3
KkZvRRlXqsZtwp54BreY5dWAn333FfFor8xtTraYfeHeDtmzA0SX9KklpVfj
PdsNsAdZzFXff87t3mJmJbe/SKocIXsV6jbtUWPPc/ldmbiTCXsCVh7Yw9bq
+teidflof7NF6vBZ3rQswUsge2WohNV7STZ6cLLNAHvA/BuRDYnOa9gxS865
/UVS5QiJPcIXSUXTnpea9ymGbln1etoyEwh7AlYe2AM6dfnCtbVzVS+5O15J
Z3oPWHVHF4W3SLqaHPzCDHse3R32NiKrYWd9pRwK003O7S+SKkdI7NHtVWjW
tIewJ+VWNtgzcTSvHurh1fje2XU89tS3vpb4VeDX8E1VIQApnQJ6McMeTA27
89Y9GOxJVSIoKUNCrkwhvMEUfQ7V2CPLT0jbalyEPQErD+wJHf9vvfPi4+/u
P56aGDn0QmyJPVU7NuA/7F/PLm0vC6TUirCHRJq2W5lC8Xl1r0JZ0x5hBlGC
IuwJWHlgz1jLSvU4/+2B9eyT9y81xOPqebL2/ctdVfhG0FVNLd5TI2yfTiLx
0lqZwrOJo3n/RoQ3pPOOhZgwBGEPyUwRYY9Zr0LCnpRbGWAPJsPBS2YIOHyi
W5/i7V2vw/a72xcgP++1LkzbI0NKs8xq2DHYk3PdsZCwhxSdkNgjfKN0jj1p
S1Eg7AlYGWDPN3XV6kE+0Kik9FUh6sUpmKtHl6xeat4n7J1OIslE2EMiTaOx
R/hdY+zJym1M2BOwrGMPZmWihwNBlrh9ZEGkK1MwVw8zvMPnibp8342biZxG
UkZF2EMiTRP2KEXYE7BMY8/j7+6H5jYEmrMxlb4qnPlobkSn1O/q0XX4OG+W
QipvhWa1qVPdmJ6qbxTejW53FYM9FOElmYmwRyHCnoBlGntCi9bBSv1F4Xd/
8YeoCrj8rh5dhw9MQPceTsZ8GknZFeYRCA37ytancLurhD2k6IRphknYQ8Ys
u9jz6O6wmasHBGghe8O1NN7Vo+vwcd4mjlTGIuwhkaZnliJldu7srsOFX7QX
V3r2T6f2wn2V7+uXNQYh7Kk0yy72fHtgvbGrJ7rbgHf16Dp8crT4NQmtSLFn
7NQv1aa1q4Q9pBgUaFECBn+j/gphT6VZRrEHU7SeHlcPM3wGtfNOcaRyVaTY
o1i9l5nWrhL2kGIQYQ8vwp6AZRR7MAUsfAEXU/yuHmZaSdStAxdjPqWkLIqw
h0Tyi7CHF2FPwLKIPZii9cDA7ikpV4/uUu+U20zCyEkBu+yJiB970tbnjZQ5
xYk9rMEsYU/mLHPYgylaH/7zVYf8Wnb4WERnclH+rdBpQmu1d8ptJoUq0r49
8WNP2uYLUub0p8HWwF16t+8N9VeMsYcWp8ioZQ57MJnMgbYknr4cn4j0ZJ75
aG7oTPH2rtfL+OqQYhZhD4nk1+SdM4G7NDT3nrCn0ixbEysmk/nWOy96K3AF
FJ2rhxnG4XNTZ8332Y3NFOoiKRS6Mkt02HP7yAKtXSXsIcUgA+x58+Mjshty
TuMexfhM2JNRyxb2jGxbqDuke4ra1cOsu31BKPZoFbOv6j0R80kmZUgGzDPM
NXYQ3ngA5+rbWLeAvfnsecIeUtQywB5Fh+e5u9sUg/P81v3Cb+X7+uM5WKQI
ewKWIezBFK3Iitan5eUqbm1ewxqMw0dr5Xdq40OSyQx7/JlvMAKY3cm62INZ
PoCwh2QpHntC3ZLG2AP/KvyWrC9iUiLsCVhWsGdq+LLueO6XbGyPwjAOnzMf
zcXnNj/f0h7z2SZlQpiYb7awZ7RUcn2SSBUn3SQ0xZ05v3W/YmSWYc+6o+Le
KUmJsCdgWcEeTA7DWMtK2deBHGI7pVU7NmAcPlq5zbREKYnXw4FeM+x5/N19
byOtAxeFt9ySnSvUN/D4H9/T2lsM9rg+Q6RKlC72KLLOXm3vVAzLzzQ0ZeJO
JuwJWCawBxPeUmQyywb26Ky+9TUM+eBzm7NypUhxyqxXIZh/I7IhUd178yai
HUpAocyTtsmClFHx9+qjknhqYFJgT3WHKjVCgT2p8lsS9mRuMkWGtx6cbBN+
Pbr+hAoDngltXXhTM7eZqrpIAY21rDRgnm/qqv0bWdV7Qni/bdmzWH33/mmw
VWtvQ5nnzY+PuDw7pErV2KlfBu7VyTtnFJ8/d2tEcVuqh+VMZKkR9gQs/diD
CW8FRnK/krrioS/LzPALdeWoqov05zKrXkeuTBGaoqaeSgIqTU2FYk/aEkFJ
GRWPPQ9vHld8HhBFcVs+UZdXjMlLOovCb6Wqhp2wJ2Apx57xnu2YkXxq+LLw
6/EUrQvtydr3Md0Ltfo2g/VcvRbzJSClVmYRrkCHh9mNzcI77fiBH6lv3anx
S/hdVc8shD0kh7p3dp1WQFbN5F7Hwie31z77XjAtQda6p/ns+diON1nxkOnE
dCsmykbIQhVZo57puIrWZYbsXtjc9hP8NmmtLhKTcRkXpmlPznWLZgz2VM5M
QYpU/LJcoen3/N34zr6mba2/3/f7v2vb8vOu373Cnp3NG34eeExeat4nvJk3
f1IpnnnCHod6/N19THNC+Iy/LMWvnqvXEmQeZphi9puabXyA5WK+FqQUyjif
GVO9HtqrMIoWzamKC5Cyq9JXBd05tLFz1we7/zNAzj+/t/jsu6/Inh3gn8CT
Mqdxj+x+judgExdhj0Mh0zVljXruPZyUee/jNGQxu1YbnxzVs5NMV+Ma/vMy
LlmRo/OmPbT8Oik2ITsWlvqL8BBhXq79FnhSnt7RmIms5uhE2ONKD062Ye7A
8Z7tsi2kJ4krtCKGGXxMa7MpT8oiRS0z5kGWcYUm5EfRtKdCpglS1Ho8NcHf
sfzHzF4c+PSeCsd4wh4nQlasK8Jb52/fSZx2PHuy9n1MMftNzVAXJflUsowb
FQbeFGTJb6GNp3Sr1zd/ciIUe1LV6oSUaY0ceiFwx/KFh2Zh4iWbfh14WGRZ
zWlbmSsiEfbYC5nSMyyv3ppOOpOZN2Rus25VFyX5VKyQFY68IfOZQ8u4tKrX
p6lXISle8XNx6atC4DNm7w58VrNsiYoK6UNF2GMvZEqPonqrvv9c4pzDGzK3
WauqK0dJPpUq3YQEz/ydzBVO0dAbVWtvh8YnQpmncipfSDFo/I/vBe5YvoYd
GVYIGJ/V/Fx+l+yuhjs/kcOPU4Q9lkKm9CiaE345PhF/T2aMIfs2gy3Kv6W1
ZerkU2kyG66HZ+LC/u3IXhBC85l1y7jUXXCZUdMekkP9abAVM42aPUeB52VW
bUMlFycS9tgIOZjfeudFRXiruhDSSzxBQ/ZtBjrSWqsLMA9e2+O8UqRkZRzh
+vbAev92ZA9L6I167+w6rR2m6nVSzOKLuUYOvcB/zCyred7WtYFHprqjq2J9
mIQ9xnr83X3gGcwtJ1t7azodjXrUFpoywUxrrS6w51vaKb25cmQc4Xo40Ovf
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
           "], {{0, 0}, {765,
            324}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 765}, {0, 324}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Arduino\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (/dev/ttyACM0)", "Not connected (/dev/ttyACM0)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Arduino", 2}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Arduino", 2}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Arduino", 2}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.686909158786438*^9, 3.686909273986762*^9, 3.6869093162757*^9, {
   3.686909584545765*^9, 3.6869095875230722`*^9}, 3.686909729631009*^9, 
   3.6869103185400352`*^9, 3.686910437105109*^9, 3.686913478799547*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["arduino"], "Input",
 CellChangeTimes->{{3.686909279433358*^9, 3.6869092841443768`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{8.64, {0., 8.64}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
MM7frP8LRW5zsn2bFYu5VJqzlKQrM+wZ79nu30ggmdkzKuYiZUhI7BEWlRtX
ryvKuFJVfkLYE7CsY8/0n2cFb2v9vXCoV+Q2J1jMnlM2Nq+hinWSUpjSLd7g
W/6NvLy/K86RYWh8AmYEsIOXroDBNARgDwa3OiWwkYylRhfPhNXrioY/r7Z3
KkZvRRlXqsZtwp54BreY5dWAn333FfFor8xtTraYfeHeDtmzA0SX9KklpVfj
PdsNsAdZzFXff87t3mJmJbe/SKocIXsV6jbtUWPPc/ldmbiTCXsCVh7Yw9bq
+teidflof7NF6vBZ3rQswUsge2WohNV7STZ6cLLNAHvA/BuRDYnOa9gxS865
/UVS5QiJPcIXSUXTnpea9ymGbln1etoyEwh7AlYe2AM6dfnCtbVzVS+5O15J
Z3oPWHVHF4W3SLqaHPzCDHse3R32NiKrYWd9pRwK003O7S+SKkdI7NHtVWjW
tIewJ+VWNtgzcTSvHurh1fje2XU89tS3vpb4VeDX8E1VIQApnQJ6McMeTA27
89Y9GOxJVSIoKUNCrkwhvMEUfQ7V2CPLT0jbalyEPQErD+wJHf9vvfPi4+/u
P56aGDn0QmyJPVU7NuA/7F/PLm0vC6TUirCHRJq2W5lC8Xl1r0JZ0x5hBlGC
IuwJWHlgz1jLSvU4/+2B9eyT9y81xOPqebL2/ctdVfhG0FVNLd5TI2yfTiLx
0lqZwrOJo3n/RoQ3pPOOhZgwBGEPyUwRYY9Zr0LCnpRbGWAPJsPBS2YIOHyi
W5/i7V2vw/a72xcgP++1LkzbI0NKs8xq2DHYk3PdsZCwhxSdkNgjfKN0jj1p
S1Eg7AlYGWDPN3XV6kE+0Kik9FUh6sUpmKtHl6xeat4n7J1OIslE2EMiTaOx
R/hdY+zJym1M2BOwrGMPZmWihwNBlrh9ZEGkK1MwVw8zvMPnibp8342biZxG
UkZF2EMiTRP2KEXYE7BMY8/j7+6H5jYEmrMxlb4qnPlobkSn1O/q0XX4OG+W
QipvhWa1qVPdmJ6qbxTejW53FYM9FOElmYmwRyHCnoBlGntCi9bBSv1F4Xd/
8YeoCrj8rh5dhw9MQPceTsZ8GknZFeYRCA37ytancLurhD2k6IRphknYQ8Ys
u9jz6O6wmasHBGghe8O1NN7Vo+vwcd4mjlTGIuwhkaZnliJldu7srsOFX7QX
V3r2T6f2wn2V7+uXNQYh7Kk0yy72fHtgvbGrJ7rbgHf16Dp8crT4NQmtSLFn
7NQv1aa1q4Q9pBgUaFECBn+j/gphT6VZRrEHU7SeHlcPM3wGtfNOcaRyVaTY
o1i9l5nWrhL2kGIQYQ8vwp6AZRR7MAUsfAEXU/yuHmZaSdStAxdjPqWkLIqw
h0Tyi7CHF2FPwLKIPZii9cDA7ikpV4/uUu+U20zCyEkBu+yJiB970tbnjZQ5
xYk9rMEsYU/mLHPYgylaH/7zVYf8Wnb4WERnclH+rdBpQmu1d8ptJoUq0r49
8WNP2uYLUub0p8HWwF16t+8N9VeMsYcWp8ioZQ57MJnMgbYknr4cn4j0ZJ75
aG7oTPH2rtfL+OqQYhZhD4nk1+SdM4G7NDT3nrCn0ixbEysmk/nWOy96K3AF
FJ2rhxnG4XNTZ8332Y3NFOoiKRS6Mkt02HP7yAKtXSXsIcUgA+x58+Mjshty
TuMexfhM2JNRyxb2jGxbqDuke4ra1cOsu31BKPZoFbOv6j0R80kmZUgGzDPM
NXYQ3ngA5+rbWLeAvfnsecIeUtQywB5Fh+e5u9sUg/P81v3Cb+X7+uM5WKQI
ewKWIezBFK3Iitan5eUqbm1ewxqMw0dr5Xdq40OSyQx7/JlvMAKY3cm62INZ
PoCwh2QpHntC3ZLG2AP/KvyWrC9iUiLsCVhWsGdq+LLueO6XbGyPwjAOnzMf
zcXnNj/f0h7z2SZlQpiYb7awZ7RUcn2SSBUn3SQ0xZ05v3W/YmSWYc+6o+Le
KUmJsCdgWcEeTA7DWMtK2deBHGI7pVU7NmAcPlq5zbREKYnXw4FeM+x5/N19
byOtAxeFt9ySnSvUN/D4H9/T2lsM9rg+Q6RKlC72KLLOXm3vVAzLzzQ0ZeJO
JuwJWCawBxPeUmQyywb26Ky+9TUM+eBzm7NypUhxyqxXIZh/I7IhUd178yai
HUpAocyTtsmClFHx9+qjknhqYFJgT3WHKjVCgT2p8lsS9mRuMkWGtx6cbBN+
Pbr+hAoDngltXXhTM7eZqrpIAY21rDRgnm/qqv0bWdV7Qni/bdmzWH33/mmw
VWtvQ5nnzY+PuDw7pErV2KlfBu7VyTtnFJ8/d2tEcVuqh+VMZKkR9gQs/diD
CW8FRnK/krrioS/LzPALdeWoqov05zKrXkeuTBGaoqaeSgIqTU2FYk/aEkFJ
GRWPPQ9vHld8HhBFcVs+UZdXjMlLOovCb6Wqhp2wJ2Apx57xnu2YkXxq+LLw
6/EUrQvtydr3Md0Ltfo2g/VcvRbzJSClVmYRrkCHh9mNzcI77fiBH6lv3anx
S/hdVc8shD0kh7p3dp1WQFbN5F7Hwie31z77XjAtQda6p/ns+diON1nxkOnE
dCsmykbIQhVZo57puIrWZYbsXtjc9hP8NmmtLhKTcRkXpmlPznWLZgz2VM5M
QYpU/LJcoen3/N34zr6mba2/3/f7v2vb8vOu373Cnp3NG34eeExeat4nvJk3
f1IpnnnCHod6/N19THNC+Iy/LMWvnqvXEmQeZphi9puabXyA5WK+FqQUyjif
GVO9HtqrMIoWzamKC5Cyq9JXBd05tLFz1we7/zNAzj+/t/jsu6/Inh3gn8CT
Mqdxj+x+judgExdhj0Mh0zVljXruPZyUee/jNGQxu1YbnxzVs5NMV+Ma/vMy
LlmRo/OmPbT8Oik2ITsWlvqL8BBhXq79FnhSnt7RmIms5uhE2ONKD062Ye7A
8Z7tsi2kJ4krtCKGGXxMa7MpT8oiRS0z5kGWcYUm5EfRtKdCpglS1Ho8NcHf
sfzHzF4c+PSeCsd4wh4nQlasK8Jb52/fSZx2PHuy9n1MMftNzVAXJflUsowb
FQbeFGTJb6GNp3Sr1zd/ciIUe1LV6oSUaY0ceiFwx/KFh2Zh4iWbfh14WGRZ
zWlbmSsiEfbYC5nSMyyv3ppOOpOZN2Rus25VFyX5VKyQFY68IfOZQ8u4tKrX
p6lXISle8XNx6atC4DNm7w58VrNsiYoK6UNF2GMvZEqPonqrvv9c4pzDGzK3
WauqK0dJPpUq3YQEz/ydzBVO0dAbVWtvh8YnQpmncipfSDFo/I/vBe5YvoYd
GVYIGJ/V/Fx+l+yuhjs/kcOPU4Q9lkKm9CiaE345PhF/T2aMIfs2gy3Kv6W1
ZerkU2kyG66HZ+LC/u3IXhBC85l1y7jUXXCZUdMekkP9abAVM42aPUeB52VW
bUMlFycS9tgIOZjfeudFRXiruhDSSzxBQ/ZtBjrSWqsLMA9e2+O8UqRkZRzh
+vbAev92ZA9L6I167+w6rR2m6nVSzOKLuUYOvcB/zCyred7WtYFHprqjq2J9
mIQ9xnr83X3gGcwtJ1t7azodjXrUFpoywUxrrS6w51vaKb25cmQc4Xo40Ovf
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
           "], {{0, 0}, {765,
            324}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 765}, {0, 324}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Arduino\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (/dev/ttyACM0)", "Not connected (/dev/ttyACM0)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Arduino", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{101.9689453125, {5., 6.538}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
MM7frP8LRW5zsn2bFYu5VJqzlKQrM+wZ79nu30ggmdkzKuYiZUhI7BEWlRtX
ryvKuFJVfkLYE7CsY8/0n2cFb2v9vXCoV+Q2J1jMnlM2Nq+hinWSUpjSLd7g
W/6NvLy/K86RYWh8AmYEsIOXroDBNARgDwa3OiWwkYylRhfPhNXrioY/r7Z3
KkZvRRlXqsZtwp54BreY5dWAn333FfFor8xtTraYfeHeDtmzA0SX9KklpVfj
PdsNsAdZzFXff87t3mJmJbe/SKocIXsV6jbtUWPPc/ldmbiTCXsCVh7Yw9bq
+teidflof7NF6vBZ3rQswUsge2WohNV7STZ6cLLNAHvA/BuRDYnOa9gxS865
/UVS5QiJPcIXSUXTnpea9ymGbln1etoyEwh7AlYe2AM6dfnCtbVzVS+5O15J
Z3oPWHVHF4W3SLqaHPzCDHse3R32NiKrYWd9pRwK003O7S+SKkdI7NHtVWjW
tIewJ+VWNtgzcTSvHurh1fje2XU89tS3vpb4VeDX8E1VIQApnQJ6McMeTA27
89Y9GOxJVSIoKUNCrkwhvMEUfQ7V2CPLT0jbalyEPQErD+wJHf9vvfPi4+/u
P56aGDn0QmyJPVU7NuA/7F/PLm0vC6TUirCHRJq2W5lC8Xl1r0JZ0x5hBlGC
IuwJWHlgz1jLSvU4/+2B9eyT9y81xOPqebL2/ctdVfhG0FVNLd5TI2yfTiLx
0lqZwrOJo3n/RoQ3pPOOhZgwBGEPyUwRYY9Zr0LCnpRbGWAPJsPBS2YIOHyi
W5/i7V2vw/a72xcgP++1LkzbI0NKs8xq2DHYk3PdsZCwhxSdkNgjfKN0jj1p
S1Eg7AlYGWDPN3XV6kE+0Kik9FUh6sUpmKtHl6xeat4n7J1OIslE2EMiTaOx
R/hdY+zJym1M2BOwrGMPZmWihwNBlrh9ZEGkK1MwVw8zvMPnibp8342biZxG
UkZF2EMiTRP2KEXYE7BMY8/j7+6H5jYEmrMxlb4qnPlobkSn1O/q0XX4OG+W
QipvhWa1qVPdmJ6qbxTejW53FYM9FOElmYmwRyHCnoBlGntCi9bBSv1F4Xd/
8YeoCrj8rh5dhw9MQPceTsZ8GknZFeYRCA37ytancLurhD2k6IRphknYQ8Ys
u9jz6O6wmasHBGghe8O1NN7Vo+vwcd4mjlTGIuwhkaZnliJldu7srsOFX7QX
V3r2T6f2wn2V7+uXNQYh7Kk0yy72fHtgvbGrJ7rbgHf16Dp8crT4NQmtSLFn
7NQv1aa1q4Q9pBgUaFECBn+j/gphT6VZRrEHU7SeHlcPM3wGtfNOcaRyVaTY
o1i9l5nWrhL2kGIQYQ8vwp6AZRR7MAUsfAEXU/yuHmZaSdStAxdjPqWkLIqw
h0Tyi7CHF2FPwLKIPZii9cDA7ikpV4/uUu+U20zCyEkBu+yJiB970tbnjZQ5
xYk9rMEsYU/mLHPYgylaH/7zVYf8Wnb4WERnclH+rdBpQmu1d8ptJoUq0r49
8WNP2uYLUub0p8HWwF16t+8N9VeMsYcWp8ioZQ57MJnMgbYknr4cn4j0ZJ75
aG7oTPH2rtfL+OqQYhZhD4nk1+SdM4G7NDT3nrCn0ixbEysmk/nWOy96K3AF
FJ2rhxnG4XNTZ8332Y3NFOoiKRS6Mkt02HP7yAKtXSXsIcUgA+x58+Mjshty
TuMexfhM2JNRyxb2jGxbqDuke4ra1cOsu31BKPZoFbOv6j0R80kmZUgGzDPM
NXYQ3ngA5+rbWLeAvfnsecIeUtQywB5Fh+e5u9sUg/P81v3Cb+X7+uM5WKQI
ewKWIezBFK3Iitan5eUqbm1ewxqMw0dr5Xdq40OSyQx7/JlvMAKY3cm62INZ
PoCwh2QpHntC3ZLG2AP/KvyWrC9iUiLsCVhWsGdq+LLueO6XbGyPwjAOnzMf
zcXnNj/f0h7z2SZlQpiYb7awZ7RUcn2SSBUn3SQ0xZ05v3W/YmSWYc+6o+Le
KUmJsCdgWcEeTA7DWMtK2deBHGI7pVU7NmAcPlq5zbREKYnXw4FeM+x5/N19
byOtAxeFt9ySnSvUN/D4H9/T2lsM9rg+Q6RKlC72KLLOXm3vVAzLzzQ0ZeJO
JuwJWCawBxPeUmQyywb26Ky+9TUM+eBzm7NypUhxyqxXIZh/I7IhUd178yai
HUpAocyTtsmClFHx9+qjknhqYFJgT3WHKjVCgT2p8lsS9mRuMkWGtx6cbBN+
Pbr+hAoDngltXXhTM7eZqrpIAY21rDRgnm/qqv0bWdV7Qni/bdmzWH33/mmw
VWtvQ5nnzY+PuDw7pErV2KlfBu7VyTtnFJ8/d2tEcVuqh+VMZKkR9gQs/diD
CW8FRnK/krrioS/LzPALdeWoqov05zKrXkeuTBGaoqaeSgIqTU2FYk/aEkFJ
GRWPPQ9vHld8HhBFcVs+UZdXjMlLOovCb6Wqhp2wJ2Apx57xnu2YkXxq+LLw
6/EUrQvtydr3Md0Ltfo2g/VcvRbzJSClVmYRrkCHh9mNzcI77fiBH6lv3anx
S/hdVc8shD0kh7p3dp1WQFbN5F7Hwie31z77XjAtQda6p/ns+diON1nxkOnE
dCsmykbIQhVZo57puIrWZYbsXtjc9hP8NmmtLhKTcRkXpmlPznWLZgz2VM5M
QYpU/LJcoen3/N34zr6mba2/3/f7v2vb8vOu373Cnp3NG34eeExeat4nvJk3
f1IpnnnCHod6/N19THNC+Iy/LMWvnqvXEmQeZphi9puabXyA5WK+FqQUyjif
GVO9HtqrMIoWzamKC5Cyq9JXBd05tLFz1we7/zNAzj+/t/jsu6/Inh3gn8CT
Mqdxj+x+judgExdhj0Mh0zVljXruPZyUee/jNGQxu1YbnxzVs5NMV+Ma/vMy
LlmRo/OmPbT8Oik2ITsWlvqL8BBhXq79FnhSnt7RmIms5uhE2ONKD062Ye7A
8Z7tsi2kJ4krtCKGGXxMa7MpT8oiRS0z5kGWcYUm5EfRtKdCpglS1Ho8NcHf
sfzHzF4c+PSeCsd4wh4nQlasK8Jb52/fSZx2PHuy9n1MMftNzVAXJflUsowb
FQbeFGTJb6GNp3Sr1zd/ciIUe1LV6oSUaY0ceiFwx/KFh2Zh4iWbfh14WGRZ
zWlbmSsiEfbYC5nSMyyv3ppOOpOZN2Rus25VFyX5VKyQFY68IfOZQ8u4tKrX
p6lXISle8XNx6atC4DNm7w58VrNsiYoK6UNF2GMvZEqPonqrvv9c4pzDGzK3
WauqK0dJPpUq3YQEz/ydzBVO0dAbVWtvh8YnQpmncipfSDFo/I/vBe5YvoYd
GVYIGJ/V/Fx+l+yuhjs/kcOPU4Q9lkKm9CiaE345PhF/T2aMIfs2gy3Kv6W1
ZerkU2kyG66HZ+LC/u3IXhBC85l1y7jUXXCZUdMekkP9abAVM42aPUeB52VW
bUMlFycS9tgIOZjfeudFRXiruhDSSzxBQ/ZtBjrSWqsLMA9e2+O8UqRkZRzh
+vbAev92ZA9L6I167+w6rR2m6nVSzOKLuUYOvcB/zCyred7WtYFHprqjq2J9
mIQ9xnr83X3gGcwtJ1t7azodjXrUFpoywUxrrS6w51vaKb25cmQc4Xo40Ovf
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
           "], {{0, 0}, {765,
            324}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 765}, {0, 324}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Arduino\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (/dev/ttyACM0)", "Not connected (/dev/ttyACM0)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Arduino", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Arduino", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Arduino", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.686909284426947*^9, 3.6869093007113256`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "arduino", "]"}]], "Input",
 CellChangeTimes->{{3.686909287603527*^9, 3.686909294177607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceOpen", "[", 
  RowBox[{"\"\<Arduino\>\"", ",", "\"\</dev/ttyACM0\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.686910447841461*^9, 3.686910457109756*^9}, {
  3.686910535094635*^9, 3.686910537223692*^9}, {3.6869122042205467`*^9, 
  3.6869122083661213`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "SerialLink`SerialPortOpen","nopen",
   "\"Could not open the port \\!\\(\\*RowBox[{\\\"\\\\\\\"/dev/ttyACM0\\\\\\\
\"\\\"}]\\).\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\)\"",2,4,1,
   30908105390109845099,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6869125830931396`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.686910460441566*^9, 3.686910540952479*^9, 3.686910954024292*^9, 
   3.6869114793320923`*^9, 3.686911654989709*^9, {3.686912581545896*^9, 
   3.686912583220982*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], 
  "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.686910848371875*^9, 3.686910864715168*^9}, 
   3.686911154036785*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "t"], "[", 
       RowBox[{"\[Theta]", "(", "t", ")"}], "]"}], 
      RowBox[{"(", "s", ")"}]}], ")"}]}], "-", 
   RowBox[{"\[Theta]", "(", "0", ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6869108603589993`*^9, 3.686910865141459*^9}, 
   3.686911154762497*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.686911290393139*^9, 3.686911292434202*^9}}],

Cell[BoxData["\<\"/home/eric/.Mathematica\"\>"], "Output",
 CellChangeTimes->{3.6869114805685873`*^9}]
}, Open  ]],

Cell[BoxData["DeviceReadTimeSeries"], "Input",
 CellChangeTimes->{{3.686911646436013*^9, 3.6869116516429996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ts", "=", 
  RowBox[{"DeviceReadTimeSeries", "[", 
   RowBox[{"\"\<Arduino\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", ".01"}], "}"}], ",", "\"\<A0\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ts", "=", 
  RowBox[{"TimeSeriesResample", "[", "ts", "]"}]}]}], "Input",
 CellChangeTimes->{{3.686913493737102*^9, 3.68691355386506*^9}, {
  3.686913600025531*^9, 3.6869136002515907`*^9}, {3.686913678162189*^9, 
  3.686913687098538*^9}, {3.6869137189426107`*^9, 3.686913721923973*^9}, {
  3.686915996206465*^9, 3.68691602591584*^9}}],

Cell[BoxData[
 TemplateBox[{
  "DeviceReadTimeSeries","tslow",
   "\"The result may have taken longer to obtain and/or may have a smaller \
number of data points because \\!\\(\\*RowBox[{\\\"178\\\"}]\\) \
measurement(s) took longer than the requested interval \
\\!\\(\\*RowBox[{\\\"0.01`\\\"}]\\), about \
\\!\\(\\*RowBox[{\\\"0.011506050561797751`\\\"}]\\) seconds (on average).\"",
   2,69,24,30908105390109845099,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.686916000188828*^9, 3.6869160302462*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{8.64, {0., 8.64}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.832\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.216\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["299",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.832\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.216\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["299",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" property\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.010009288787841797`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     StructuredArray[QuantityArray, {299}, 
      StructuredArray`StructuredData[
      QuantityArray, {
       1.1388074291300097752`6., 1.1534701857282502444`6., 
        1.1534701857282502444`6., 1.1339198435972629521`6., 
        1.1485826001955034213`6., 1.1534701857282502444`6., 
        1.129032258064516129`6., 1.1534701857282502444`6., 
        1.1436950146627565982`6., 1.129032258064516129`6., 
        1.1436950146627565982`6., 1.1436950146627565982`6., 
        1.124144672531769306`6., 1.1388074291300097752`6., 
        1.1485826001955034213`6., 1.129032258064516129`6., 
        1.129032258064516129`6., 1.1485826001955034213`6., 
        1.129032258064516129`6., 1.1339198435972629521`6., 
        1.1436950146627565982`6., 1.1192570869990224829`6., 
        1.1388074291300097752`6., 1.1436950146627565982`6., 
        1.1192570869990224829`6., 1.124144672531769306`6., 
        1.1388074291300097752`6., 1.129032258064516129`6., 
        1.1143695014662756598`6., 1.1388074291300097752`6., 
        1.1388074291300097752`6., 1.1192570869990224829`6., 
        1.1192570869990224829`6., 1.1388074291300097752`6., 
        1.124144672531769306`6., 1.1143695014662756598`6., 
        1.1339198435972629521`6., 1.1192570869990224829`6., 
        1.1192570869990224829`6., 1.1339198435972629521`6., 
        1.1143695014662756598`6., 1.1094819159335288368`6., 
        1.124144672531769306`6., 1.1339198435972629521`6., 
        1.124144672531769306`6., 1.1143695014662756598`6., 
        1.129032258064516129`6., 1.1143695014662756598`6., 
        1.1045943304007820137`6., 1.129032258064516129`6., 
        1.129032258064516129`6., 1.1045943304007820137`6., 
        1.1045943304007820137`6., 1.129032258064516129`6., 
        1.1143695014662756598`6., 1.0997067448680351906`6., 
        1.1192570869990224829`6., 1.124144672531769306`6., 
        1.1045943304007820137`6., 1.0997067448680351906`6., 
        1.1143695014662756598`6., 1.1094819159335288368`6., 
        1.0948191593352883676`6., 1.1094819159335288368`6., 
        1.1192570869990224829`6., 1.1045943304007820137`6., 
        1.0997067448680351906`6., 1.1192570869990224829`6., 
        1.1192570869990224829`6., 1.0948191593352883676`6., 
        1.1094819159335288368`6., 1.1192570869990224829`6., 
        1.0997067448680351906`6., 1.1045943304007820137`6., 
        1.1192570869990224829`6., 1.1094819159335288368`6., 
        1.0899315738025415445`6., 1.1045943304007820137`6., 
        1.1094819159335288368`6., 1.0899315738025415445`6., 
        1.1045943304007820137`6., 1.1192570869990224829`6., 
        1.0997067448680351906`6., 1.0997067448680351906`6., 
        1.1143695014662756598`6., 1.0948191593352883676`6., 
        1.0997067448680351906`6., 1.1192570869990224829`6., 
        1.1045943304007820137`6., 1.0899315738025415445`6., 
        1.1143695014662756598`6., 1.1045943304007820137`6., 
        1.0850439882697947214`6., 1.1045943304007820137`6., 
        1.1143695014662756598`6., 1.0899315738025415445`6., 
        1.1045943304007820137`6., 1.1094819159335288368`6., 
        1.0850439882697947214`6., 1.1045943304007820137`6., 
        1.0948191593352883676`6., 1.0850439882697947214`6., 
        1.0997067448680351906`6., 1.0997067448680351906`6., 
        1.0850439882697947214`6., 1.1045943304007820137`6., 
        1.0997067448680351906`6., 1.0850439882697947214`6., 
        1.1045943304007820137`6., 1.0948191593352883676`6., 
        1.0850439882697947214`6., 1.1045943304007820137`6., 
        1.0948191593352883676`6., 1.0899315738025415445`6., 
        1.1094819159335288368`6., 1.0948191593352883676`6., 
        1.0899315738025415445`6., 1.1045943304007820137`6., 
        1.0801564027370478983`6., 1.0997067448680351906`6., 
        1.0997067448680351906`6., 1.0801564027370478983`6., 
        1.0997067448680351906`6., 1.1045943304007820137`6., 
        1.0801564027370478983`6., 1.0948191593352883676`6., 
        1.0997067448680351906`6., 1.0948191593352883676`6., 
        1.0752688172043010753`6., 1.0997067448680351906`6., 
        1.0899315738025415445`6., 1.0850439882697947214`6., 
        1.0997067448680351906`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0997067448680351906`6., 
        1.0850439882697947214`6., 1.0752688172043010753`6., 
        1.0997067448680351906`6., 1.0752688172043010753`6., 
        1.0850439882697947214`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0850439882697947214`6., 
        1.0997067448680351906`6., 1.0801564027370478983`6., 
        1.0752688172043010753`6., 1.0997067448680351906`6., 
        1.0801564027370478983`6., 1.0850439882697947214`6., 
        1.0997067448680351906`6., 1.0752688172043010753`6., 
        1.0801564027370478983`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0899315738025415445`6., 
        1.0703812316715542522`6., 1.0899315738025415445`6., 
        1.0899315738025415445`6., 1.0752688172043010753`6., 
        1.0948191593352883676`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0801564027370478983`6., 
        1.0997067448680351906`6., 1.0801564027370478983`6., 
        1.0801564027370478983`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0997067448680351906`6., 
        1.0899315738025415445`6., 1.0752688172043010753`6., 
        1.0850439882697947214`6., 1.0997067448680351906`6., 
        1.0752688172043010753`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0801564027370478983`6., 
        1.0752688172043010753`6., 1.0948191593352883676`6., 
        1.0801564027370478983`6., 1.0801564027370478983`6., 
        1.0997067448680351906`6., 1.0703812316715542522`6., 
        1.0850439882697947214`6., 1.0997067448680351906`6., 
        1.0801564027370478983`6., 1.0703812316715542522`6., 
        1.0899315738025415445`6., 1.0899315738025415445`6., 
        1.0703812316715542522`6., 1.0899315738025415445`6., 
        1.0850439882697947214`6., 1.0703812316715542522`6., 
        1.0948191593352883676`6., 1.0850439882697947214`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0948191593352883676`6., 1.0703812316715542522`6., 
        1.0899315738025415445`6., 1.0948191593352883676`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0850439882697947214`6., 1.0703812316715542522`6., 
        1.0850439882697947214`6., 1.0948191593352883676`6., 
        1.0703812316715542522`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0703812316715542522`6., 
        1.0801564027370478983`6., 1.0948191593352883676`6., 
        1.0654936461388074291`6., 1.0801564027370478983`6., 
        1.0899315738025415445`6., 1.0752688172043010753`6., 
        1.0703812316715542522`6., 1.0948191593352883676`6., 
        1.0850439882697947214`6., 1.0703812316715542522`6., 
        1.0948191593352883676`6., 1.0801564027370478983`6., 
        1.0654936461388074291`6., 1.0899315738025415445`6., 
        1.0801564027370478983`6., 1.0703812316715542522`6., 
        1.0948191593352883676`6., 1.0801564027370478983`6., 
        1.0654936461388074291`6., 1.0948191593352883676`6., 
        1.0801564027370478983`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0703812316715542522`6., 
        1.0850439882697947214`6., 1.0899315738025415445`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0899315738025415445`6., 1.0703812316715542522`6., 
        1.0948191593352883676`6., 1.0801564027370478983`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0850439882697947214`6., 1.0703812316715542522`6., 
        1.0899315738025415445`6., 1.0948191593352883676`6., 
        1.0654936461388074291`6., 1.0948191593352883676`6., 
        1.0850439882697947214`6., 1.0703812316715542522`6., 
        1.0948191593352883676`6., 1.0948191593352883676`6., 
        1.0752688172043010753`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0703812316715542522`6., 
        1.0850439882697947214`6., 1.0899315738025415445`6., 
        1.0654936461388074291`6., 1.0899315738025415445`6., 
        1.0850439882697947214`6., 1.0654936461388074291`6., 
        1.0850439882697947214`6., 1.0899315738025415445`6., 
        1.0703812316715542522`6., 1.0899315738025415445`6., 
        1.0948191593352883676`6., 1.0654936461388074291`6., 
        1.0801564027370478983`6., 1.0850439882697947214`6., 
        1.0703812316715542522`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0654936461388074291`6., 
        1.0752688172043010753`6., 1.0948191593352883676`6., 
        1.0703812316715542522`6., 1.0801564027370478983`6., 
        1.0948191593352883676`6., 1.0752688172043010753`6., 
        1.0752688172043010753`6., 1.0948191593352883676`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0899315738025415445`6., 1.0703812316715542522`6., 
        1.0850439882697947214`6., 1.0899315738025415445`6., 
        1.0703812316715542522`6., 1.0850439882697947214`6., 
        1.0899315738025415445`6., 1.0752688172043010753`6., 
        1.0801564027370478983`6.}, "Volts", {{1}}]]}, CompressedData["
1:eJwt03tQlGUUx3HUFoWmRpNpG1IgL0gySNwGGXaQLiRTOspqoEJcRESQ23IX
W0NQ3AWUiwSiooayJotsogFiiIrLMGUZhhVkMdwctDQ0sRrHqDlf/3jfzz/v
+zznPM/vvLYxWR0zzcLCYsqzx/n/V5lhwx+e2b+9WWoXKi5Lx7huvOYRJs4q
xKohjPb6UNxSgTueopM6XLQxoMIqQjRrsKYLAxZHim56bB5DjW+UeGcvPjeK
+X4bxeBqfP8ROgZHiyta0Mdxk3g+By/+grZvxIiHT2DEJKriN4t17VjtECu+
VYBHBjDBY4vovweX3sKdHnGiewN6vxAvmrLwRA/6OG0VzxShYRznrU4QnxzH
my8nivVJmDyMY75JYm4NVk5PFoc2ob4XnV1TqOcYZj7F0lUaMaQJu5SpYmA2
RvahzidN7D+EkzPSxe2heKMN187JENdrccEP2O2eSX3HUTkti3tOxJUdGD87
W7yXjteG8Ve/bdx7OdaP4CL/HHHUiIu12+nzMU6s+Eh8yYTDVlq+T8H6G/i6
aof4dglGDWKZ98f0p8dvhzHRO5f9y7FoEu3UO8XCBvRT5JH/KNzdgcX2+eLW
VHQyY5P9LlGbhQt6sMF5t/iwCC8MYKZnAeeow6mDuMZzD+uWYPMouqzSiQ6n
MEmhFx+sw6hetHMvFK0r0P42Zi8tEi8fxhyrYuYmDMcaMWzqXvGDcBxowvWK
fWJLBEadxQOWJZxLGj64iRVupeRmP26/jZGqMnFhJc59iHMCykWNCV0V+/kv
BJe0YbpjBXXpceUYWgZ+Ir56CPvuY5y6UlR0oNUrVdxvBnZ2o7/HAdFWh1N+
RguXanFXLv7ZjzHLD4r5dWiyPCQmbMC6dsyaf1j8Kxst+9HKo0YM2IvrBnHc
84iYV4wn7+JKv6NicAM6vniMHGxD3x40LPqUOcpFcx+G+9ayfgXa3sGhFcfF
6BZcbX1CLAlHTSuqbOpEfWLds/nDqIUG8XoWzryFYYEnxdk1+M9jvBL0Gedi
xOaZp8TeaExpxlDberG8ANv68RuVUWwtRdMTdFA3MF9GXDKJtZrTYuBVDLZt
FG0y0Oo6us03ibnF2DiEHl6fkw8dFvTjPK8z4iMdpg/gu/5NYnwtzp3Ar5ef
FWNrsGEca9XnyONF1M76gn1iMfIrNHg2i2v24OY+HHNtEZX5WD2KhqBWzuMc
ej1/XixMwzIzjivbRHUiOnRi3pwL9JmK7d/jdM8vyX8Rxo7gwWXt4tp6VP6L
l0IvkgsTvqPsEO9p0NeMpfaXxL91+OMYHlVdpp8qdLuP+qAr1GVEraKTOQvB
n06jccZVchePIx24ycEsTmTi79/hQpcu8b0qtL6L/wH7tgip
    "], 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     MetaInformation -> {"A0" -> TemporalData`Self["PathComponent", 1]}}}, 
   True, 11.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.68691354501727*^9, 3.6869135674301233`*^9}, 
   3.686913600774959*^9, {3.686913698520526*^9, 3.6869137258455553`*^9}, 
   3.6869137874412127`*^9, 3.686913915892165*^9, 3.6869160003216333`*^9, 
   3.686916030381775*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{8.64, {0., 8.64}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.832\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.215\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["339",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.832\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.215\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["339",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["True",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" property\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.010009288787841797`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     StructuredArray[QuantityArray, {339}, 
      StructuredArray`StructuredData[QuantityArray, CompressedData["
1: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
/fV7EcrlXRzBieZRuZ7HR/J1lfp32/3Ev7T2zwM1G2iuzOPzrWl/dfWmNmnq
k+B4cPAC0nlpR2h9O/nManot+E77nVUFyncpV3UyG9tfmVLO/dgHFP+g/Apj
+Kepnwphfm+cbcb6mgiNw46kt8a2Sb6P8rG7KdVrkPL/r37U2W00z55cN9YY
R++M535TI4ZyWtEmNPLmUf43vPcrJ74pchIHfvnEM7/b+JFwl4RphZ+l/J3o
2/K8hfiOH2w3y7YZ890nzUy8lfJgVKLTNUB+2J/6qONEvApXVEpXBdD/L+/T
rmKqCAtlN2vX7kfoSFBifaI+u+kYs2/No/k5tWfqJJoDcSxLRS7NLc+3G4W8
HQjbTMRMkPq047yIs5rOLwtPSFKkeWiXUxp5mnhoPSwaf5XwIxZY3/7sj6AZ
/XMXo0DzUVPmyBXK3eElul6rOQgmy3wu1xLOrTQr4RHy4567SLib+mfNLxt0
o777SjstDKR5wLbc/KUnkHzgreTYEY5e/hWJeOI9W7znQx7l95FXrrEW8RAs
EmttJ38aLpTv20z5dCxteXOO5to8zxMXNlPd2Ao1rVXEY8Twc6HHYoTvRk7C
nVRXsaH6u9pK4hGb/U2RdA2W70iton5wJbc9FCeeS+vMp2wgHrPr4g+UU862
jqoFTKZ59iy3MdiA3of/l/ThIcqHjpmuaDLlclA7cFsi5dz5jn5mNeXJLcmi
WYHyLFi+LmqU5kGxzsNeAeHVqDkvraZ5ek0g+bKY+hxq++C2HeHEzRYbmE15
+T96GnRA
       "], "Volts", {{1}}]]}, {{3.686901626832833*^9, 
    3.6869016302159724`*^9, 0.010009288787841797`}}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     MetaInformation -> {"A0" -> TemporalData`Self["PathComponent", 1]}}}, 
   True, 11.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.68691354501727*^9, 3.6869135674301233`*^9}, 
   3.686913600774959*^9, {3.686913698520526*^9, 3.6869137258455553`*^9}, 
   3.6869137874412127`*^9, 3.686913915892165*^9, 3.6869160003216333`*^9, 
   3.686916030627859*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.686913703143077*^9, 3.686913704511154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"smoothed", "=", 
  RowBox[{"MovingAverage", "[", 
   RowBox[{"ts", ",", 
    TemplateBox[{"100","\"ms\"","milliseconds","\"Milliseconds\""},
     "Quantity"]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "smoothed", "]"}]}], "Input",
 CellChangeTimes->{{3.686913710860796*^9, 3.686913752869721*^9}, {
  3.686914070287713*^9, 3.6869140716675873`*^9}, {3.6869160414127703`*^9, 
  3.686916044341179*^9}, {3.686916084254105*^9, 3.686916091230253*^9}, {
  3.686916135168784*^9, 3.686916196676433*^9}, {3.686916286056508*^9, 
  3.686916305169977*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{8.64, {0., 8.64}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.932\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.215\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["329",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, 
            {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
             StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

               "]],
              StripOnInput->False,
              FontFamily->"Arial"]}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:26.932\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:20:30.215\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["329",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["True",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" property\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.010009288787841797`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[1.1447753906163993`, "Volts"], 
      Quantity[1.1436104560113416`, "Volts"], 
      Quantity[1.1426329389047925`, "Volts"], 
      Quantity[1.1417531995716677`, "Volts"], 
      Quantity[1.14061174021977, "Volts"], 
      Quantity[1.1395935369859092`, "Volts"], 
      Quantity[1.1393375236785015`, "Volts"], 
      Quantity[1.1396285901983212`, "Volts"], 
      Quantity[1.1371966120271924`, "Volts"], 
      Quantity[1.1366581642517941`, "Volts"], 
      Quantity[1.1372325998089243`, "Volts"], 
      Quantity[1.1366376159143052`, "Volts"], 
      Quantity[1.136070499056714, "Volts"], 
      Quantity[1.1360499667506527`, "Volts"], 
      Quantity[1.135720142666899, "Volts"], 
      Quantity[1.1357699102126886`, "Volts"], 
      Quantity[1.135128278539418, "Volts"], 
      Quantity[1.1340440934131002`, "Volts"], 
      Quantity[1.1334303643877595`, "Volts"], 
      Quantity[1.1326471349777734`, "Volts"], 
      Quantity[1.1322358162859363`, "Volts"], 
      Quantity[1.1316353781102582`, "Volts"], 
      Quantity[1.1295280695489183`, "Volts"], 
      Quantity[1.1298983877247417`, "Volts"], 
      Quantity[1.1313376514392322`, "Volts"], 
      Quantity[1.1300539491054986`, "Volts"], 
      Quantity[1.127764289610087, "Volts"], 
      Quantity[1.1280424073458808`, "Volts"], 
      Quantity[1.1293258351468476`, "Volts"], 
      Quantity[1.128533616797141, "Volts"], 
      Quantity[1.126568739698849, "Volts"], 
      Quantity[1.1269305812689112`, "Volts"], 
      Quantity[1.1275989642524644`, "Volts"], 
      Quantity[1.1256439300393657`, "Volts"], 
      Quantity[1.1246405054938715`, "Volts"], 
      Quantity[1.1241855745712774`, "Volts"], 
      Quantity[1.1235069568033087`, "Volts"], 
      Quantity[1.1221331305889397`, "Volts"], 
      Quantity[1.1208713603637674`, "Volts"], 
      Quantity[1.1215981219803175`, "Volts"], 
      Quantity[1.1228499772806102`, "Volts"], 
      Quantity[1.121897890968412, "Volts"], 
      Quantity[1.1215336156508449`, "Volts"], 
      Quantity[1.1222109561462075`, "Volts"], 
      Quantity[1.1207531122676797`, "Volts"], 
      Quantity[1.1191097293565708`, "Volts"], 
      Quantity[1.120368527321951, "Volts"], 
      Quantity[1.1221998222032872`, "Volts"], 
      Quantity[1.1218039427412774`, "Volts"], 
      Quantity[1.1191588437113633`, "Volts"], 
      Quantity[1.1167770875619172`, "Volts"], 
      Quantity[1.1174284208468697`, "Volts"], 
      Quantity[1.1172744837805424`, "Volts"], 
      Quantity[1.1153506811966685`, "Volts"], 
      Quantity[1.1145458375734265`, "Volts"], 
      Quantity[1.115976556732291, "Volts"], 
      Quantity[1.115840368272478, "Volts"], 
      Quantity[1.1138034740586025`, "Volts"], 
      Quantity[1.1120746301046651`, "Volts"], 
      Quantity[1.1120905563131775`, "Volts"], 
      Quantity[1.1129440583200692`, "Volts"], 
      Quantity[1.1110011649227425`, "Volts"], 
      Quantity[1.108694865765336, "Volts"], 
      Quantity[1.1087398630726784`, "Volts"], 
      Quantity[1.1097470346130116`, "Volts"], 
      Quantity[1.1088768133557516`, "Volts"], 
      Quantity[1.1067790124624046`, "Volts"], 
      Quantity[1.1063354133272412`, "Volts"], 
      Quantity[1.1080746910861847`, "Volts"], 
      Quantity[1.1095250405374963`, "Volts"], 
      Quantity[1.1083229080452184`, "Volts"], 
      Quantity[1.108098905472408, "Volts"], 
      Quantity[1.109983593658794, "Volts"], 
      Quantity[1.110541960258983, "Volts"], 
      Quantity[1.1089838063392918`, "Volts"], 
      Quantity[1.108462457906994, "Volts"], 
      Quantity[1.110107549535839, "Volts"], 
      Quantity[1.1109047555840095`, "Volts"], 
      Quantity[1.1088906681267545`, "Volts"], 
      Quantity[1.1064712215176074`, "Volts"], 
      Quantity[1.1068973744110158`, "Volts"], 
      Quantity[1.1071289781682385`, "Volts"], 
      Quantity[1.104860792852043, "Volts"], 
      Quantity[1.1039666011812865`, "Volts"], 
      Quantity[1.1053843307408917`, "Volts"], 
      Quantity[1.1056518628609444`, "Volts"], 
      Quantity[1.103705546174749, "Volts"], 
      Quantity[1.1031334938842898`, "Volts"], 
      Quantity[1.1038570592590946`, "Volts"], 
      Quantity[1.1039598555360555`, "Volts"], 
      Quantity[1.1034148864292461`, "Volts"], 
      Quantity[1.1035247727796649`, "Volts"], 
      Quantity[1.1058933537527555`, "Volts"], 
      Quantity[1.1069581643833566`, "Volts"], 
      Quantity[1.1059366452902093`, "Volts"], 
      Quantity[1.104124211357914, "Volts"], 
      Quantity[1.1050694649902695`, "Volts"], 
      Quantity[1.1052011046249, "Volts"], 
      Quantity[1.1040335251960722`, "Volts"], 
      Quantity[1.1035536736249143`, "Volts"], 
      Quantity[1.10416448853413, "Volts"], 
      Quantity[1.1047690492144302`, "Volts"], 
      Quantity[1.1025067466394398`, "Volts"], 
      Quantity[1.1013477134469642`, "Volts"], 
      Quantity[1.1017597993987391`, "Volts"], 
      Quantity[1.1015970322080408`, "Volts"], 
      Quantity[1.100669261517511, "Volts"], 
      Quantity[1.099644216631836, "Volts"], 
      Quantity[1.0990262915881162`, "Volts"], 
      Quantity[1.0990710046463257`, "Volts"], 
      Quantity[1.0984388778826226`, "Volts"], 
      Quantity[1.0966906122428237`, "Volts"], 
      Quantity[1.0962319441793293`, "Volts"], 
      Quantity[1.0963607888810414`, "Volts"], 
      Quantity[1.0954758658062596`, "Volts"], 
      Quantity[1.0953086793202296`, "Volts"], 
      Quantity[1.0951799169730148`, "Volts"], 
      Quantity[1.0952653217940211`, "Volts"], 
      Quantity[1.0952873515704271`, "Volts"], 
      Quantity[1.095717062826059, "Volts"], 
      Quantity[1.0957341340369298`, "Volts"], 
      Quantity[1.0954023966607256`, "Volts"], 
      Quantity[1.0962168119611508`, "Volts"], 
      Quantity[1.0964316447120157`, "Volts"], 
      Quantity[1.0958909682948663`, "Volts"], 
      Quantity[1.0962143495963086`, "Volts"], 
      Quantity[1.0967684417427566`, "Volts"], 
      Quantity[1.0949488706192188`, "Volts"], 
      Quantity[1.0958941785188014`, "Volts"], 
      Quantity[1.0962612218952057`, "Volts"], 
      Quantity[1.0946579607103821`, "Volts"], 
      Quantity[1.094856030785363, "Volts"], 
      Quantity[1.0954886828047712`, "Volts"], 
      Quantity[1.0943095680279804`, "Volts"], 
      Quantity[1.0933376092264173`, "Volts"], 
      Quantity[1.0938604909441467`, "Volts"], 
      Quantity[1.0933501490941135`, "Volts"], 
      Quantity[1.0949083111144517`, "Volts"], 
      Quantity[1.0933716885132991`, "Volts"], 
      Quantity[1.092072582784693, "Volts"], 
      Quantity[1.0933021997504269`, "Volts"], 
      Quantity[1.0926375192060582`, "Volts"], 
      Quantity[1.0913231685121172`, "Volts"], 
      Quantity[1.0918350840368434`, "Volts"], 
      Quantity[1.093331371912529, "Volts"], 
      Quantity[1.091751437239645, "Volts"], 
      Quantity[1.0913171150156982`, "Volts"], 
      Quantity[1.090566435911451, "Volts"], 
      Quantity[1.0901145827309424`, "Volts"], 
      Quantity[1.0905197088212812`, "Volts"], 
      Quantity[1.089363060903689, "Volts"], 
      Quantity[1.0886212254633505`, "Volts"], 
      Quantity[1.0889297623370897`, "Volts"], 
      Quantity[1.0877388966042014`, "Volts"], 
      Quantity[1.0856479870927342`, "Volts"], 
      Quantity[1.0863261328168585`, "Volts"], 
      Quantity[1.0867680268696331`, "Volts"], 
      Quantity[1.0862473870931901`, "Volts"], 
      Quantity[1.086093715955306, "Volts"], 
      Quantity[1.0860863447626792`, "Volts"], 
      Quantity[1.0864291591042325`, "Volts"], 
      Quantity[1.0866294245570987`, "Volts"], 
      Quantity[1.0865232511673883`, "Volts"], 
      Quantity[1.0868373327774328`, "Volts"], 
      Quantity[1.0866167254955612`, "Volts"], 
      Quantity[1.0860448245291834`, "Volts"], 
      Quantity[1.0860841346139434`, "Volts"], 
      Quantity[1.0853058122520154`, "Volts"], 
      Quantity[1.0855658194644828`, "Volts"], 
      Quantity[1.0854016985144739`, "Volts"], 
      Quantity[1.0858895983609458`, "Volts"], 
      Quantity[1.086153133178703, "Volts"], 
      Quantity[1.084248259948206, "Volts"], 
      Quantity[1.0840623208212812`, "Volts"], 
      Quantity[1.0853963205080706`, "Volts"], 
      Quantity[1.0849289262862227`, "Volts"], 
      Quantity[1.0839783461116217`, "Volts"], 
      Quantity[1.0861898512746957`, "Volts"], 
      Quantity[1.0873797338809141`, "Volts"], 
      Quantity[1.0861261783431613`, "Volts"], 
      Quantity[1.0851481724150347`, "Volts"], 
      Quantity[1.0863778996701199`, "Volts"], 
      Quantity[1.0874069017181187`, "Volts"], 
      Quantity[1.0865145907547886`, "Volts"], 
      Quantity[1.0870866015424359`, "Volts"], 
      Quantity[1.0874764524782043`, "Volts"], 
      Quantity[1.0879000553793572`, "Volts"], 
      Quantity[1.0874463679633952`, "Volts"], 
      Quantity[1.086573227061915, "Volts"], 
      Quantity[1.0867433720420012`, "Volts"], 
      Quantity[1.0871831671924386`, "Volts"], 
      Quantity[1.0873541598926448`, "Volts"], 
      Quantity[1.0866375817970366`, "Volts"], 
      Quantity[1.0865495509958385`, "Volts"], 
      Quantity[1.0859234628788106`, "Volts"], 
      Quantity[1.086606279109724, "Volts"], 
      Quantity[1.08499342829288, "Volts"], 
      Quantity[1.0837988810949726`, "Volts"], 
      Quantity[1.0847250023544555`, "Volts"], 
      Quantity[1.084918850479926, "Volts"], 
      Quantity[1.0843810421277407`, "Volts"], 
      Quantity[1.0841852006788177`, "Volts"], 
      Quantity[1.0836967965383806`, "Volts"], 
      Quantity[1.084103541476887, "Volts"], 
      Quantity[1.0849147905745657`, "Volts"], 
      Quantity[1.0849297691255477`, "Volts"], 
      Quantity[1.0847216002243305`, "Volts"], 
      Quantity[1.0841335966470758`, "Volts"], 
      Quantity[1.0839490109492935`, "Volts"], 
      Quantity[1.084926528055843, "Volts"], 
      Quantity[1.0839774070956667`, "Volts"], 
      Quantity[1.082863632654137, "Volts"], 
      Quantity[1.0844420829033035`, "Volts"], 
      Quantity[1.0837418690939535`, "Volts"], 
      Quantity[1.082184416475996, "Volts"], 
      Quantity[1.082525569524808, "Volts"], 
      Quantity[1.0829491483056153`, "Volts"], 
      Quantity[1.0826868826943934`, "Volts"], 
      Quantity[1.082064430347232, "Volts"], 
      Quantity[1.0824277587531497`, "Volts"], 
      Quantity[1.0825767827691994`, "Volts"], 
      Quantity[1.082488988799934, "Volts"], 
      Quantity[1.0831723723754958`, "Volts"], 
      Quantity[1.083612943824043, "Volts"], 
      Quantity[1.0830978488986303`, "Volts"], 
      Quantity[1.0825239330257141`, "Volts"], 
      Quantity[1.0825710810129594`, "Volts"], 
      Quantity[1.0827159256423662`, "Volts"], 
      Quantity[1.082899933853763, "Volts"], 
      Quantity[1.0828382803996426`, "Volts"], 
      Quantity[1.083140685371921, "Volts"], 
      Quantity[1.082274233699677, "Volts"], 
      Quantity[1.0817887782439413`, "Volts"], 
      Quantity[1.0820556519167455`, "Volts"], 
      Quantity[1.0817456919449202`, "Volts"], 
      Quantity[1.0815197576874707`, "Volts"], 
      Quantity[1.0824398344410477`, "Volts"], 
      Quantity[1.0817956975377037`, "Volts"], 
      Quantity[1.0811868046461377`, "Volts"], 
      Quantity[1.0806053148491994`, "Volts"], 
      Quantity[1.08099508936637, "Volts"], 
      Quantity[1.0806036982741136`, "Volts"], 
      Quantity[1.0797627853422989`, "Volts"], 
      Quantity[1.080621101706933, "Volts"], 
      Quantity[1.0816577582672235`, "Volts"], 
      Quantity[1.0804568345955068`, "Volts"], 
      Quantity[1.0807778054129635`, "Volts"], 
      Quantity[1.0821847417980037`, "Volts"], 
      Quantity[1.081301682714051, "Volts"], 
      Quantity[1.0803772729924932`, "Volts"], 
      Quantity[1.0807974080947693`, "Volts"], 
      Quantity[1.0811288066255318`, "Volts"], 
      Quantity[1.0809474592611346`, "Volts"], 
      Quantity[1.0808722283549534`, "Volts"], 
      Quantity[1.080227979236579, "Volts"], 
      Quantity[1.079768985883738, "Volts"], 
      Quantity[1.0796256581545247`, "Volts"], 
      Quantity[1.079663744845385, "Volts"], 
      Quantity[1.0806166238501194`, "Volts"], 
      Quantity[1.0821134259422043`, "Volts"], 
      Quantity[1.0811563762839662`, "Volts"], 
      Quantity[1.0816708437614033`, "Volts"], 
      Quantity[1.082705972531489, "Volts"], 
      Quantity[1.081442737964943, "Volts"], 
      Quantity[1.0813365215265807`, "Volts"], 
      Quantity[1.0833705863984997`, "Volts"], 
      Quantity[1.0826168984720286`, "Volts"], 
      Quantity[1.082143745473985, "Volts"], 
      Quantity[1.0832564696541689`, "Volts"], 
      Quantity[1.0817987297813476`, "Volts"], 
      Quantity[1.0813082317953762`, "Volts"], 
      Quantity[1.0813730676108442`, "Volts"], 
      Quantity[1.0810309322091864`, "Volts"], 
      Quantity[1.0806858809335056`, "Volts"], 
      Quantity[1.0811366617150846`, "Volts"], 
      Quantity[1.0816477314225366`, "Volts"], 
      Quantity[1.0822588082582043`, "Volts"], 
      Quantity[1.0815268507789901`, "Volts"], 
      Quantity[1.0817443196595384`, "Volts"], 
      Quantity[1.0822879702500292`, "Volts"], 
      Quantity[1.0824066512500659`, "Volts"], 
      Quantity[1.083442229067167, "Volts"], 
      Quantity[1.0844197461737164`, "Volts"], 
      Quantity[1.0854820995194698`, "Volts"], 
      Quantity[1.085066327256556, "Volts"], 
      Quantity[1.0842584894668683`, "Volts"], 
      Quantity[1.0846567951776345`, "Volts"], 
      Quantity[1.084745212006628, "Volts"], 
      Quantity[1.083912162733752, "Volts"], 
      Quantity[1.0845226730629256`, "Volts"], 
      Quantity[1.0840397468309058`, "Volts"], 
      Quantity[1.0834446026863875`, "Volts"], 
      Quantity[1.0825626744447054`, "Volts"], 
      Quantity[1.0811813793101233`, "Volts"], 
      Quantity[1.0810496162686336`, "Volts"], 
      Quantity[1.0813959162741733`, "Volts"], 
      Quantity[1.0803044744694872`, "Volts"], 
      Quantity[1.0807640201723807`, "Volts"], 
      Quantity[1.081307415831429, "Volts"], 
      Quantity[1.0817569439839994`, "Volts"], 
      Quantity[1.0820395738167647`, "Volts"], 
      Quantity[1.0810387261112864`, "Volts"], 
      Quantity[1.080792279333994, "Volts"], 
      Quantity[1.0813072830546033`, "Volts"], 
      Quantity[1.0811555435887548`, "Volts"], 
      Quantity[1.0809162927890354`, "Volts"], 
      Quantity[1.0812810426021673`, "Volts"], 
      Quantity[1.08044619490611, "Volts"], 
      Quantity[1.0788460030066749`, "Volts"], 
      Quantity[1.0784574016248676`, "Volts"], 
      Quantity[1.079180089735634, "Volts"], 
      Quantity[1.0792148074643415`, "Volts"], 
      Quantity[1.079718286307281, "Volts"], 
      Quantity[1.080599948657777, "Volts"], 
      Quantity[1.0807213117299699`, "Volts"], 
      Quantity[1.0802113469287693`, "Volts"], 
      Quantity[1.0806440086845344`, "Volts"], 
      Quantity[1.0811799068612662`, "Volts"], 
      Quantity[1.082268362813267, "Volts"], 
      Quantity[1.0822109750262328`, "Volts"], 
      Quantity[1.0818796110687636`, "Volts"], 
      Quantity[1.082360518315032, "Volts"], 
      Quantity[1.082318772673848, "Volts"], 
      Quantity[1.0816591854180464`, "Volts"], 
      Quantity[1.0818599221274998`, "Volts"], 
      Quantity[1.0825933646699157`, "Volts"], 
      Quantity[1.0821213349617713`, "Volts"], 
      Quantity[1.0824172861525114`, "Volts"], 
      Quantity[1.0818837990245336`, "Volts"]}}, CompressedData["
1:eJwtxWdYCAoYQOEIWdl7771lz6RIEiUV2nvvvfciI8lKslIpTSsJJXtm771J
9uY+37k/znl7WrjqWisqKCjU+T/N/xZ7y7hGxe+1aswQEzE6BKMuYmQvUzHC
C8OrMKyDmRjqgCGHMLiZuRhkhoGFGFDPQvRfhH670PcH+sy1FL03o9d79Jxh
JXqsQfdn6DbeWnRNQJc76DzMRnQKQ8fL6NDHVrT3QbuTaNvJTrRxQuvDaNXC
XrS0QItiNG/gIJoZomk2mvxC43mO4tItuOQDLp7pJBqtRcMXaDDRWVy0DPXv
4cIRLqJeBOpewQX9XMX5fqhzGud1cRO1XXDuEdRq5S7OsULNvTi7oYc4azFq
7Eb1PzhzvqeothVnfEJVDS9x+jqc9gqnTvYWpyTh5Ac4aZSPODEKJ1zD8QN8
xXEBOPYsjunmJ6q44ehjOKqNvzjSBkfsx+GNA8RhS3FoHg5RCBQH6+Kg7Tjw
Cw6YHST234D93mDfqcFin5XY+xH2UgkRe8ZgjxvYfVCo2C0Iu57HLj3CxM4e
2KkSO7YLFzvYYfuD2K5phNjWBNvkY+u6kWKrhdhyJ7b4hs3nRInNNqHyO2w6
PVpsshobP8FGY2PEhnGodAsbDIkV64dgvYuo2CtOrOuFdapQoUO8+Nce/5Ti
b+UE8Zcp/izAH4qJ4nd9/JaJX7/jF61l4uc0/FSDH1WXix+SsfYpvh+XJNbE
47vb+HboCvFNKL6+hK96rxRfeuOLE/i84yrxmSM+LcMnzVeLj83xURE+rJ8s
PjDA+1l47yfe1V4j3knH27V4Sy1FvJmCN57j9QlrxWuJePUuXhmeKlaH4+Vq
vNR3nXjRFy+cwvOd14vnnPFsOZ5puUE8bYmnSvCk0kbxhBFW5eDx31ips0ms
yMBjH/Goepp4JBXLX+LhSZvFsuV46D6WjkwXD0bigau4v/8WcZ8/7j2DJV0z
xGJXLDqKha23igXWmL8P9zTaJuYtwdxc3P0XcxZsF7O3YdZn3DVrh5i5Hne+
xh1TdorbV+C2h7h1dKaYEY1brmP6wF3i5kBMO4ebumeJG91xQwWub5strrPF
1AO4tkmOmGKMa/Zgcp3d4mo9XLUDV37FFZq5YtJGXP4Wl03LExNXYcJjjB+z
R4yLxdibGDM4X4wOxqgLGNmzQIzwxPDjGNa+UAy1x5BSDFYuEoNMMbAAAxSL
RX999MtE3+/oo1UieqehVw16qu4VPZLR/Sm6jdsnusajy210HrpfdApFx0vo
0PuAaO+NdifQtuNB0cYRrcvQqnmpaGmOFkVoXv+QaGaApllo8hONtcvEpem4
pBYXqx0WjVLQ8DkaTCgXFyWi/l1cOPyIqBeOutW4oO9Rcb4v6pzCeZ2PidrO
OLcctVpWiHMsUbMEZytVirOMUCMH1X/jTJ3joloGzviIqupV4vRUnPYS/wGg
pI9q
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     MetaInformation -> {"A0" -> TemporalData`Self["PathComponent", 1]}}}, 
   True, 11.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.686913714523872*^9, 3.68691378941024*^9}, 
   3.686913916340831*^9, 3.6869140756736107`*^9, {3.686916000701117*^9, 
   3.686916037819496*^9}, {3.686916155924492*^9, 3.686916215048765*^9}, {
   3.686916301858657*^9, 3.686916305737782*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt13dcz90XAPBKWkaFaEhPw4rwkMjoikjRkDaloSREe2hTKWWFSKlEmaXl
0d57KOORIhWSqNwPIZHfee75/dXr/Tr3nM+5534+t9dX3u6wkQMfDw+PDi8P
z39/IzqshlV9PmpmO/3588eQI+GLrZnpgIbfmu0cCQtED3WM+6pv5cjxVjTf
6iqeJC2OHFPYw6zzPF6SIxwJ9UAvcSx3qVnLkZAa9IHu3LH8NRwJlrRhtm/V
XvYR4kHO6CHP2dNH/uZIYBH6k0SqT9lSjgRMtWX2/x3ySHo5R/xt0AMSRZ9u
Q/xoNprYeW00V+GIH78ds+TUVwUbwb6m6Op4u97+RRzxuYneYlAhLruYI94/
0TLe4pv9F3LEa7s9s2mf6YFJcznieRWdeSCvO0KBIx6f0WUrlOON5DjivnEv
s9Pgdb1UWY64nUfnZZRmq8hwxLUPnSzgLBA9jSNHVjswm22jxmIzOHI4Cn0t
1TJ0RIojLi/R9Ke8ew7EDy1xZN4eY3bWaBJHDgajrz3hWe41mSMHHqPbiiK+
/yPOEWelfcw/twpr+U7lyH4vtPP6XfSgAEec6tAxl7x29wtyZJ+0E7OS/3y1
GyIccTyInr07fWUqH0ccStAaaYMiEeOU7BXbz5yQbTrh9i9K7O3QnrVaLr2j
lNjloi+siO/S/EqJrYAz8+SzRS0zhymxMUebnjV6LcZRsuc2uqbsTuTf3ymx
/oXWOMet2PaFEiv9A8xquyPXNlNKdiejJ9cU+8ZC/V0ceot2eWv8ECWWWgeZ
n0Ufi3/9nhKLi2iFyWHRgoOUmPej60X+NEVAvtmaQ8zc6Q/3+6Ef02h0o0G0
9PR+Sky60Pp8ZWk7uigxXuaC8zmRnfSrm5Kdoeh5vRErd4GNnqI/jOZ+9W2n
ZMe8w8wqJkr8S55RYuiDXqvzdq1IJyUGDWipuBkuRzso0Z99hLllkkec4mNK
9FzQNouPVE1tpGR7GTr0zSVvOfC2aa7MgsubDl1toUR3L7oh1mjBrRpKdB6g
E7d2PlErpmSrkBtzT3YBnyNY2xItNqwtE15OyZa76KgAkcQRiG8eR6c29/Vb
5VGiZejOnGOpXBmdQ8mma+gv7WPhdwso2fgV/Vx9hXFiGSWaWzyY0+xXNd8v
pGTDJbRZ09hANawnA+iRGtkFgRWUaKzzZPaxDr1RW0XJ+lPoQyZlzQ4llKzr
Rvt1mctvKqJk7XIvnGe9lgJPJSVrjqNttVLFtGD/6v+ik6XnK/FD/uoF3vh9
yPcpy+RSssoPvfSn68QO2J9aE/rZmHR30wNKVs7xwfMeKAkNvUeJ6hF04/I/
Pe23KFlRgRa+3+2XnknJ8hm+zC9/jfGW3afkb0f0SGns3NqblCx7iBbP9NQ/
nEbJUhE/vP+SRCc6Qr0lu9F9v9QftYFVMtDu8sutL6ZTspjnKHNFysU4Yai3
yAh9LS9nTXEWJcrX0evFUyqloP+F39B3QjOTBiC+YKs/83GxBfMCb1MyPx49
Xax0h1UGJfM+oQ1fB1i+B8/VCGAu8a2ZKgfrlc6g11y6/G4+PF+xF90R+dP2
JsQVVANxfkrBBgowL/lw9PMfW2S7Uin5qx29wPtu7ZwkSuSUg5inuc7vbUmm
ZI5/0P/P785KJbBsC1qgd84eswRKZv8VzGyZV3BC6RIlMm7oApHiuIQLlEhX
oa14DfwawVIzQ5hvnJt2QzWWEkkntEbCRY9J0ZTMKkBf1W0LUY6iZObkUObR
ar2ELLCENdpZLjZHPIKSGffRYjqNe+3CKZnOd4zZfKGzTWcYJdOM0eerJYdU
IS6ehk7xuyO4HSz2Az1T1ilx6glKRHWPY/8Nn479BZ6agL7Z++JWFayfMoRe
oNKYKg39TN4QhveDY1j/GHjSObT/UNP3KsgXeYsuKWuZKglxYbVwXD+nXswK
9it0An002Vbmw3FKBDvQy59HmtRBvsDiCObNV8ZVdSB/YiBabKBd7OExSvhb
0SOPu8sjIH+CwgnmypjZSnIwHz4PdPGMvlLdUEp4a9AKT7NiDQIp4ZGMZE5/
ldnpHkzJn/3oq6P/5u+G+HghuiyjOrYE6v+eEsW8Oq7OwB3iv/agV2WXSMn7
UjKWha5RjnRThvjPCSeZFb/l+bkepWTUBP1QwG6rqBclP9LRBfy3xBb4UPJ9
FN3YYyOsA/nftkUzO/S+tWz1pmQkER300WlYCPK/DqMH74U1jLhR8kUzBs8r
Rua3jCslXCzaPNCwsQri9B1a5SnPN0EXSj6vOsXseFJ81rgzJcOR6DpR/UTN
g5QMdaLfCj3ss9lHyaDKaWa5EJ+DrdaUfApCK7U9CY2zpeRjG9r3XWeXoz0l
A4pnmJXfZnzWgvgHT/SL3L7mVBtK+mvRDapq0xPA76XOMs+yKYqaYEdJ3wH0
khCJyGfgd8Vol4e2qo7gt6LnmL0SJ57MhOe9sUULXFddXQfx3hx0uH9e5BGo
3zMxlnkSHSy/DO42Q/sFJSTvt6Lk9S205MyqTX6wv64xdJl276IWiL/SO4/z
PhRc3byHkpdJaMmVcTK9UK+Toheenp47w4KSjk0X8PufcrBwhzklLy6gTwWu
O1EH9drfo/MVpx7u2kXJc/WLzHxcyr1RM0r+PYkejxZMEIL5PXuFjk/O0+13
oOTp0jhmtwkjz6vh+U9C0Hr2AcZVuyl5/ASd1tvb0Az5bXMvMcsvDavld6Sk
1Rtdnn1Vzgrm9age7fng0sfcvZS0yFzG+0Fgf54erG8+hJYrcnsj7ERJUyk6
tP/mwiUQbxSPZ84QybwSD/Ua7NE9Iin8enA+9XnolrT1KtLQf53gFbxvI0t8
m8G1FujaypqZXZBfcwfttWhZXQi4+jc61OazNoX5VxkkMPf6CGgVQ7wyBT1d
J0NcAfZf8QWd3t8ZuB7mWb45Ed9HzevxQjDvsjh0C49l1xNw6Qf0R4+w4SQ4
v5K1V5k3nik8/xjOrzgG/eRSiftjU0qKXqPTh0O++kO88O8kZjuXiIRHUK/g
GHo4UW/Ha3D+M7Rour3wRPDD+cnMaiG2PgmQ/48v+v5noY8d0O+DRnQej87H
TlifJ5uC9/fGs1k/IJ57GJ1/mL/NaSclOeXogQRB+hr6z55+jfmbYNsDXlif
5YAOkDC8kmxIyf1/0I8k3hgLGFGSKZyK/683uvtXQL2MXehz90WPZkL83j10
uFRdgwLk3/2DThPmq07aQcmdHdeZJVxNhdbB+tup6GWtRqOvIX5rBL0oMjfm
rjElN7VvMHfRnHA/mGf6ZbTvim9O1hBP+4jWzY9L5Id6N9anMUcU1U1RA18/
jb7YvWq4GZzag17Sc7LnFPR/bUU684Sac2v1wSlh6FlrG3aehPrJz9F+2Ufq
x2E/SQtvMvc1jZXyGlBy9Sh6zRfTi1IQT2xGn+qede6pPiUJcreYswd33nqv
R8kVV3TV72iXu7Df+Eq02GRrXmGod1niNvOxeYMnorZTcmkfuj3WrWmBLiVx
+eitrqUh5dsouTjpDu7HLlh6PsQvWKGjCtLN8rZQcj4TPW/JCkt1iMfy3mXm
TsVa+UB/53aiv62TkInRoeTsDXTAS8E7r2D9me/oGpHr3H/vw2mde8y3X20e
54P9nLqCLg8dvKcO+TGD6Pp3Euoc5EeTDPx+wlY81IP9nDyLvn1C8cxp6D/q
DfpfgaB7G8CRKzOZXfOXKSRupeREBFo2S6q9EPYT8QLto9gZMxccvug+nkf8
3QA9cFgAmld16U1VeP7xR+hrpcPKptD/Mfks/L4FupOdoZ9Qd7TI66Uzw2Ee
IdVoQ333oEp4X4JnZWP9d8F9F2G/QfvRms80wueDAwvR3n42Dv4mlARMycHz
j26VdIR8/z3oYJmaEU94/tEstHOYQxE/rPebkMtsq2G8dDKcv68JukJf+6Uw
1PdJR7deDW3XA3uPon3a1816D/Py2pbH/LRwvXYA7NczEZ2oXP/VBPbnMYyu
EebvOAT7c9d8wLzFJTdhCPpxi0WbeltJDUN913foVqV8+Sew/siqf/D+JG3L
psD7ejgS7e3DmxoJdulE2y55dLwW9nNI5SGzg4ZoWB3cLweD0E2brfwU4P/l
gTZ06CfzUBe4f50V87HfAhEXOVi/3xP9vcxZotySEqda9IyfyY2ycL/tkyrA
7/HFbe1cuK8cD6BN1XTcVGG9QzF6QKNSdA3cl3tFC5n1p4zyNkB/9rboR5UL
16vA+djloMffnWs/DvOynVjEbHwtJ+MnzNfGDP29pa/ZAeaz5xZ6i7S6+SC8
n9Zj6ACzC2qPYP5WesXMy7M0eP87v91JaGfZKOtumOcuiv7LxKlACOZvuamE
Wf2hw6ZheJ7FBfRkJfP2T1DP/D061jT+lRDUM1Mvxf+3NyzK90O/pifR83q+
9LhAvskrtItKkcUgxI2XljGnWkz4EgLf584QNJ95tcDXjfD7/wlascA2ercm
/P6fW47vU1SgmZEW/P73RutmfSvxAhvUo/N2RmaEw/emL1OB88v7sUgR+tU7
hB4Kl3O5Bt5eipZZF5B1Eua1TbwS62dp7NkBcV17dMWYod4x6FcnDx3q4Z/y
A+azVbCKeWfFWY8isLYFWna8cNwGvpctd9CxhrqbLOB93PwbbZStHaAC1jKo
Zi5KvPvSF+a/KQVttyHcYjvkb/yC9hgLOaAH74Pm5hpmncN/PK3heRvi0B2O
DfXnoR75gFaWG7JzgPz/AUhB4Lk=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6869016269329257`*^9, 1.0751415021752908`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
       
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.686901627*^9, 
        FormBox["\"11:20:27\"", TraditionalForm], {0.0125, 0.}}, {
       3.686901628*^9, 
        FormBox["\"11:20:28\"", TraditionalForm], {0.0125, 0.}}, {
       3.686901629*^9, 
        FormBox["\"11:20:29\"", TraditionalForm], {0.0125, 0.}}, {
       3.68690163*^9, 
        FormBox["\"11:20:30\"", TraditionalForm], {0.0125, 0.}}, {
       3.6869016272*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016274*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016276*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016278*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016282*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016284*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016286*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016292*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016294*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016298*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016302*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}, {{
       3.686901627*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.686901628*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.686901629*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {
       3.68690163*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {
       3.6869016272*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016274*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016276*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016278*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016282*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016284*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016286*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016292*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016294*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016298*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {
       3.6869016302*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6869016269329257`*^9, 3.6869016302159724`*^9}, {
   1.0784574016248676`, 1.1447753906163993`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.686913714523872*^9, 3.68691378941024*^9}, 
   3.686913916340831*^9, 3.6869140756736107`*^9, {3.686916000701117*^9, 
   3.686916037819496*^9}, {3.686916155924492*^9, 3.686916215048765*^9}, {
   3.686916301858657*^9, 3.6869163060447702`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arduino", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.686916374087511*^9, 3.686916406015223*^9}}],

Cell["DeviceObject[{\"Arduino\", 2}]", "Output",
 CellChangeTimes->{{3.6869163772712317`*^9, 3.686916406230558*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "''"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "t"}], " ", 
         RowBox[{"f", "[", "t", "]"}]}], "+", "1"}]}], ",", 
      RowBox[{
       RowBox[{"f", "[", "3", "]"}], "\[Equal]", 
       RowBox[{"f", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"f", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.`", ",", "5.`"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6869142415589237`*^9, 3.6869142853297653`*^9}, {
   3.686914478936441*^9, 3.686914520366675*^9}, 3.686914553878292*^9, {
   3.686914633994739*^9, 3.686914693284492*^9}, {3.6869147771797132`*^9, 
   3.686914777346142*^9}, 3.6869148780928593`*^9, {3.686915134332631*^9, 
   3.6869151526243277`*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/dj4AGrnwI3ERQDd0wYnD
3bQ/iFvQpEP5D0DSUFjDa77FP7nnLhDm2wxAIqE47Akn0D9uFePiHvkJQNWb
k3tZVNU/8PF2JlwnB0C7wbiC/fHaP9YZ33X9GARAgEqXStgX4D86WK3RGj4B
QLtJtw/c7uI/JGDrH59J/D/ziT6XnbjlP5b5EfWvMvY/2iBupGZS6D/3WD/z
N4bwP1rNgu1ZJOs/MFxuPTnM5D+J0D+8VMbtP89AeqM77NI/WwqypoYt8D8L
pSDNEvynvz63Ng34k/E/b3WVjk5I2r94j482beLyP1n5N+9Ur+e/f/LaffdM
9D/mCHmkSlTxvwX2WabgsPU/jKLK3yFt9r/iJK2Rzfz2PwGXe+F+3fq/jN7y
ms9k+D/3SNhOw0X/v43DDGfVtPk/KV+pUsx4AcBbMxlR8CD7P/Z5cxygLwPA
p0NZHGqG/D+TuHksy44EwEt/barn0/0/2rufUxyIBcC8RXRWej3/P926DwYG
OgbAwpunYohHAEBPiuw7y4MGwOXkrgoD7QBAyB6EdmRxBsBvc69BiKABQOLL
19+h9AXApRcaWg9IAkCWn4RsVxwFwEEBfgGh/QJAW2Rvj1jFA8Acu3sZ4q8D
QMtvpnlFCQLAoorjEiVWBEBsMr9ijg8AwI+fRJtyCgVAMEq66+Mc+78oyg8F
wrIFQEpfaAmI0/W/AMV038BXBkBo5ZGvySbwvz4F00jKCgdAssuPZGkZ478o
W5uT1bEHQDP3CBkZtci/ePZcbetmCECV49ZwKmbQP3SniCgDEAlAwrkow7ut
5T+vKE5UyrUJQHJz7/YWVPE/Ue8MD5xpCkAAo4ZcihH4P5/LNatvEQtAfFVu
n+rr/T9T7VfWTccLQAvXPQyfzgFAR98Tctt5DEA6a/kbkjAEQObmOe9qIA1A
wJbcjRL6BUDrM1n7BNUNQHM6nZo1YAdAnJbi6KB9DkAyzAXM2CAIQIzJBUfs
Ig9A3GdRf5tQCEDiQSI0QtYPQKSQIfZQ4QdA8mdUAc0+EEBnJDKRud8GQKZR
FDB+mRBAgHJQbkIlBUB6IyEXh/IQQLiKo0V91wJAJADj7pBFEUCZvpp7KTQA
QIF/IQ6gnxFAv9FII5XF+T+0CRUesPMRQMarOXEm5fI/mjaFdcVOEkBa2pbG
3tvlP59LQoUyqBJAsuLqV0HGxj96a7SFoPsSQNjp312FuNK/CC6jzRNWE0Aw
9oRe1Rfpv2z7RgaIqhNAspjdQbZb878yFFD6//8TQONNDkGFe/m/LyDKag==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 5.}, {-2.814352481990944, 
                  4.360488663957312}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/dj4AGrnwI3ERQDd0wYnD
3bQ/iFvQpEP5D0DSUFjDa77FP7nnLhDm2wxAIqE47Akn0D9uFePiHvkJQNWb
k3tZVNU/8PF2JlwnB0C7wbiC/fHaP9YZ33X9GARAgEqXStgX4D86WK3RGj4B
QLtJtw/c7uI/JGDrH59J/D/ziT6XnbjlP5b5EfWvMvY/2iBupGZS6D/3WD/z
N4bwP1rNgu1ZJOs/MFxuPTnM5D+J0D+8VMbtP89AeqM77NI/WwqypoYt8D8L
pSDNEvynvz63Ng34k/E/b3WVjk5I2r94j482beLyP1n5N+9Ur+e/f/LaffdM
9D/mCHmkSlTxvwX2WabgsPU/jKLK3yFt9r/iJK2Rzfz2PwGXe+F+3fq/jN7y
ms9k+D/3SNhOw0X/v43DDGfVtPk/KV+pUsx4AcBbMxlR8CD7P/Z5cxygLwPA
p0NZHGqG/D+TuHksy44EwEt/barn0/0/2rufUxyIBcC8RXRWej3/P926DwYG
OgbAwpunYohHAEBPiuw7y4MGwOXkrgoD7QBAyB6EdmRxBsBvc69BiKABQOLL
19+h9AXApRcaWg9IAkCWn4RsVxwFwEEBfgGh/QJAW2Rvj1jFA8Acu3sZ4q8D
QMtvpnlFCQLAoorjEiVWBEBsMr9ijg8AwI+fRJtyCgVAMEq66+Mc+78oyg8F
wrIFQEpfaAmI0/W/AMV038BXBkBo5ZGvySbwvz4F00jKCgdAssuPZGkZ478o
W5uT1bEHQDP3CBkZtci/ePZcbetmCECV49ZwKmbQP3SniCgDEAlAwrkow7ut
5T+vKE5UyrUJQHJz7/YWVPE/Ue8MD5xpCkAAo4ZcihH4P5/LNatvEQtAfFVu
n+rr/T9T7VfWTccLQAvXPQyfzgFAR98Tctt5DEA6a/kbkjAEQObmOe9qIA1A
wJbcjRL6BUDrM1n7BNUNQHM6nZo1YAdAnJbi6KB9DkAyzAXM2CAIQIzJBUfs
Ig9A3GdRf5tQCEDiQSI0QtYPQKSQIfZQ4QdA8mdUAc0+EEBnJDKRud8GQKZR
FDB+mRBAgHJQbkIlBUB6IyEXh/IQQLiKo0V91wJAJADj7pBFEUCZvpp7KTQA
QIF/IQ6gnxFAv9FII5XF+T+0CRUesPMRQMarOXEm5fI/mjaFdcVOEkBa2pbG
3tvlP59LQoUyqBJAsuLqV0HGxj96a7SFoPsSQNjp312FuNK/CC6jzRNWE0Aw
9oRe1Rfpv2z7RgaIqhNAspjdQbZb878yFFD6//8TQONNDkGFe/m/LyDKag==

                    "]]}}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 5.}, {-2.814352481990944, 
                  4.360488663957312}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 5.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{
  3.6869142858742456`*^9, {3.686914479713127*^9, 3.6869145208552637`*^9}, 
   3.686914554450996*^9, {3.68691463517309*^9, 3.686914699312704*^9}, 
   3.686914777862631*^9, 3.686914878911978*^9, {3.686915134919714*^9, 
   3.6869151530902023`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.}, {-2.816335948123715, 4.3604885861438}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6869142858742456`*^9, {3.686914479713127*^9, 3.6869145208552637`*^9}, 
   3.686914554450996*^9, {3.68691463517309*^9, 3.686914699312704*^9}, 
   3.686914777862631*^9, 3.686914878911978*^9, {3.686915134919714*^9, 
   3.686915153300414*^9}}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.686915890125442*^9, 3.686915891033512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", 
  RowBox[{"\"\<Arduino\>\"", ",", "\"\<A0\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.686915893812668*^9, 3.6869159905688257`*^9}}],

Cell[BoxData[
 TemplateBox[{"1.1436950146627565982`6.","\"V\"","volts","\"Volts\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.686915939278131*^9, 3.6869159909065104`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1016},
WindowMargins->{{0, Automatic}, {0, 37}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "trident" -> "\[Psi]"},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Textbook.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Reflection"], CellDingbat -> "\[EmptyDiamond]", TextAlignment -> 
    Left, MenuSortingValue -> 10000, FontSize -> 16, FontWeight -> "Bold", 
    FontColor -> 
    RGBColor[0.027450980392156862`, 0.6431372549019608, 0.0196078431372549]]},
   Visible -> False, FrontEndVersion -> 
  "11.0 for Linux x86 (64-bit) (July 28, 2016)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]

