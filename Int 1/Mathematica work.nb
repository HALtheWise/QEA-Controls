Notebook[{

Cell[CellGroupData[{
Cell["Int 1: Governing Equations", "Title",
 CellChangeTimes->{{3.6826813785335817`*^9, 3.682681379590159*^9}, {
   3.682710876474948*^9, 3.682710892530466*^9}, {3.682980932118884*^9, 
   3.682980953632352*^9}, {3.684152148208818*^9, 3.684152163265457*^9}, {
   3.684355522339327*^9, 3.6843555383359423`*^9}, 3.684507642144094*^9, {
   3.684507677082271*^9, 3.684507682570043*^9}, {3.684541245284643*^9, 
   3.6845412506801167`*^9}, {3.685128141054286*^9, 3.685128151201559*^9}, {
   3.685808829284281*^9, 3.685808833926445*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<../MMA library.m\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682710916634346*^9, 3.682710945444784*^9}, {
  3.682711378657494*^9, 3.682711389969411*^9}}],

Cell[CellGroupData[{

Cell["Electric Skateboards", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.685809272232636*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<es`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.685809272269802*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{16.2568359375, {1., 7.}}]], "Output",
 CellChangeTimes->{{3.6858092722898417`*^9, 3.6858092919279118`*^9}, 
   3.685879436045581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Parameters", "Subsection",
 CellChangeTimes->{{3.6858833820053787`*^9, 3.6858833847330637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"g", "\[Rule]", "9.8"}], ",", 
    RowBox[{
     RowBox[{"motor", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"r", "[", "t", "]"}]}]}], ",", 
    RowBox[{"i", "\[Rule]", "3"}]}], " ", "|>"}]}]], "Input",
 CellChangeTimes->{{3.685883386340185*^9, 3.6858833989850273`*^9}, {
  3.6858834350324173`*^9, 3.685883471715969*^9}, {3.685883518347486*^9, 
  3.685883520625572*^9}, {3.68590016815971*^9, 3.6859001718862743`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{
    RowBox[{"motor", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"r", "[", "t", "]"}]}]}], ",", 
   RowBox[{"i", "\[Rule]", "3"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.685883472658471*^9, 3.685883521077545*^9, 
  3.685900173990815*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Define forces", "Subsection",
 CellChangeTimes->{{3.685879469503236*^9, 3.6858794798805227`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fn", "=", 
   RowBox[{
    RowBox[{"normal", "[", "t", "]"}], " ", "\[Theta]hat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmotor", "=", 
   RowBox[{
    RowBox[{"motor", "[", "t", "]"}], " ", "rhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fg", " ", "=", 
   RowBox[{"m", " ", "g", " ", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"-", "rhat"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685879496130699*^9, 3.685879572470675*^9}, {
  3.6858797207303667`*^9, 3.6858797643349133`*^9}, {3.685883309581204*^9, 
  3.685883309766885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Torques", " ", "on", " ", "ramp"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tn", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"r", "[", "t", "]"}]}], 
     RowBox[{"normal", "[", "t", "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.685883145380652*^9, 3.685883205225165*^9}, 
   3.6858847648368187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Equations of motion", "Subsection",
 CellChangeTimes->{{3.6858797775527782`*^9, 3.685879789594347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mass", " ", "motion"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "=", 
     RowBox[{
      RowBox[{"fn", "+", "fmotor", "+", "fg"}], "\[Equal]", 
      RowBox[{"m", " ", 
       RowBox[{"polaraccel", "[", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Ramp", " ", "rotation"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"eq2", "=", 
    RowBox[{"tn", "\[Equal]", 
     RowBox[{"i", " ", 
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"eqns", "=", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"splitVectorEqn", "[", "eq1", "]"}], ",", "eq2"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6858798013196583`*^9, 3.685879844157256*^9}, {
  3.685879876177787*^9, 3.685879876488512*^9}, {3.685882414402318*^9, 
  3.685882426464727*^9}, {3.6858832152686157`*^9, 3.685883264093402*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"normal", "[", "t", "]"}]}], " ", 
   RowBox[{"r", "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.685879836154998*^9, 3.685879845537199*^9}, 
   3.6858798775510807`*^9, 3.68588242783631*^9, 3.685882496471702*^9, 
   3.6858831100435257`*^9, {3.685883251465077*^9, 3.6858832644351053`*^9}, 
   3.685883312637206*^9, 3.6858847774110613`*^9, 3.685900179912157*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"motor", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "[", "t", "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"normal", "[", "t", "]"}], "-", 
     RowBox[{"g", " ", "m", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"normal", "[", "t", "]"}]}], " ", 
     RowBox[{"r", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"i", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.685879836154998*^9, 3.685879845537199*^9}, 
   3.6858798775510807`*^9, 3.68588242783631*^9, 3.685882496471702*^9, 
   3.6858831100435257`*^9, {3.685883251465077*^9, 3.6858832644351053`*^9}, 
   3.685883312637206*^9, 3.6858847774110613`*^9, 3.68590017994212*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Solve", "Subsection",
 CellChangeTimes->{{3.6858833719220343`*^9, 3.6858833763610497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"eqns", "/.", "params"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
       RowBox[{"normal", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6858833316504383`*^9, 3.685883356967474*^9}, {
   3.685883478091895*^9, 3.685883498580386*^9}, 3.685883535957912*^9, 
   3.685883567486445*^9, {3.685883629892119*^9, 3.685883634458552*^9}, {
   3.685883704380701*^9, 3.685883719979106*^9}, {3.685883775747592*^9, 
   3.685883777446323*^9}, {3.685905809511249*^9, 3.685905820233696*^9}, {
   3.685905865729876*^9, 3.685905866106449*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","pdord",
   "\"Some of the functions have zero differential order, so the equations \
will be solved as a system of differential-algebraic equations.\"",2,138,37,
   30901331320839948251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6859058665016623`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","chknic",
   "\"Structural analysis indicates that \\!\\(\\*RowBox[{\\\"4\\\"}]\\) \
initial conditions are needed to fix the state of the system. Currently only \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) initial conditions are specified. NDSolve may \
return one of a family of solutions.\"",2,138,38,30901331320839948251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.685905866530636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]", ",", "normal"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685883690498055*^9, 3.685883711580399*^9}, {
   3.685883764683485*^9, 3.685883827595285*^9}, {3.6858847904802*^9, 
   3.685884790820023*^9}, 3.685900106751725*^9, {3.6859001843967743`*^9, 
   3.685900184666192*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
8KEDGw3em9KmlstDqf+fyllHNrIs7vL/UikPBaFfZfY7sdFSxd1RjyZ5SB+y
i5ZxZaOiypykqla8vo9fjq4bG7lUXzKidciDeeBVTTN3NiqvPRLa+1keUOol
2mZPNvJv2C9j8UUevpdpplp7sZFC097i3O/ysGmb28Z1e9ko4t2WaZ9BeTAW
XuGu6MPG8xdx+c2IPNj20kvnMbd+5KzU+SUPmWMBxu992ciwR+XQ4Iw8pL4O
SovyZ6OBgZHFAH4yWO9cIPYF4vwNf81qFCIDz+zoKvkgNrIYa19rIEYGzuF3
uk8x35h8fnyMRIannpL9w8FstH3mgYatPBn0A3bfOhzCRv9+36oqUiTDl/en
LHn3s9Gev4n8oWpkeHhRT2MRsxjPidxWTTIYGdJtg0PZ6CnfAUvWMjJ41f7Z
3InZV9D/58XlZJAzuSmzJoyNyCIu8ZP6+Hz7pLMzMNeIbV9uzyBDSciOwTHM
4ZIW9Y/ZZHDafHrcLJyNNEgmAfIryVDf0F14EnOLrIF45GoyrG1MpVRjXhcc
PJS5hgxvrOSLZjEX1RbVVhNkcGCXfNGKYCM1GjdvyJwM2d2Vt7diTo5hxZGs
yPA77DxfCOZ/H8K9Vm0iw7q++PEEzMGsEnDbSoZRpOyXjbk7cUbt1DYyFLHf
+N/FvPXnyr937cjwU4vMLcZcAYe63jmSIdIgZ/4xZoPM8vJ5JzIc9RU5WYQ5
a2YhXcMF3/8I7+mbmMW3rzlo7U6G1WXWfBcwRxcedQjxIkPeZO7UQczDApXs
yz5kGD76a+cuzM7uPDIV/mTIVBHTZWFuKF//60cgGcoofb4CmE3lY5tE95NB
cNVhyTZ8/8KQmrvMcDIcvtSmlI5ZuV7w7K5IMrQX8p7ZifkM3dr/2CF8vn16
TtKY544mWOUdIUO5wuG4Khx//856rbfHyPB9jY54MOaNSVu/K50iw/H016oP
/5/fgaRKSCDDLVffm9aYdcxbsv0SycBOr43qxHoQ+r3DufQiGXY+Lxb+ifVz
cMclk+5UMixvsn3hhfnn3Q4F/gwyRBxtedqJ9fbaY1f79mtkSGYtP/QQ69H4
ecajqBs4v7oRq2Qx55I/n7+WS4alhAROMNZzXIPL1tFCMhifivkkFcBG01rX
9OSKyHCJYnTccR8b7T3+VcT0ERlmBrbtvoz9YG7s9Tr+CWZjyVs8fmxUnHzr
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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fG0KzzilJP4HJ8twLA==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Q7xHlOz4ipjB89bAF8+Fd6i7a8jPkMoM1U761jKb3yO3NYvanC/MYNThUx2p
9B5loqP/vRpihn+bZzMNXN4jSrWCwRERFogol7tVwvoBMX3rgxJ3Fsj1HVpj
2pOMnoyVJbg/YgE/LZ+Pt42SESdTDLOWHwu8usd5e+NSMiJuP0vLDWMBHVc5
kfPPk9FW36//ZWSyQP65uJM7h5LRkX0Vx98Os0CdjbDfzdcfUUhiooWfMSsM
vHNNfbblExItelRqeJYVlLzuX9m94xN603KBzHaRFWKTSdXrhp/Q+3WJvkfX
WeG7ZDaN7vaJ8X8LvXzfjxWkvuzzFOj9hLq5n9o7lbFCzIFDkdzpqUj+to2b
iRIbjGk5itGupqPt2r9Ox6myQXZoaIuTVzrSYDLfOa7JBgrUafM90elIL/Dw
8EN9Nqg4OnZF5ms6skpSMflkwQYkm8i3V3QyUHjb7E7ml2zQyT23w4IvE7Ht
fjiSMccG7gnCT1pWMxHP6mLFyjIbcNAtdslzf0bE8huxBkzsoNQ0zPZc/DOi
HLM2/cnDDm2S+o9faH1G+68aVLLLs0NNRUy9tdtndDuMO87SnB18ZewjrZY/
I/pChBl3KTvsqP5vQ4QzG73VVb/VU8kOQ7CotJOUjS48b3qZUc/OqD9h2GJn
NuqSY6s73ckOnnrRp9ZMs9HX0y773syxQ3L941GjpGxU9tmIsl1pMwi8DdPR
N8hBEdc3jR+P2AxJ1+U/DkXmoiND9g+Cb3LAqwGW5FC/AmT4QDb1oBsH8Ewe
rNyWUID0tnR3/fXkgByp6rjvhQVI2+DY3vOBHOD9ffTYzd8FSOndzjnZDxxw
PT3CMu9EIeK+Om+b280Be8u/dlmTitAX+gOTzv84QczI5+6VqmJ0nB6kTCZz
ASljlePUEYy+KNPbLOS44Ea5/PcjVzE6emuPZ7QSF5wZsdty1AujQ8y9LaJ7
uGD0VqGtZR5GehTlO4InucB+P8eglQAV7baoonJ4c4F55vUXbJ5URGpbNp0b
4oL21iH2T2blKEri2IbaBBe8Vds2KHalHIldjk++McsFIQVm7x7fLEfCs4ar
f/5xgUFe5T3DwHLEzx8aPyrCDV2oI+lheTliMdrxu+cwN+QaKqVfV6pA45XW
XrVp3DD4p/Kk5VwFknrVaf8ihxvSPb6ZODBVIhOr46Ymxdywl3nL3cuESlS2
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
      "]]}}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {10., -19.183473725516652`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., -19.183473725516652`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., -19.18347365989569}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., -19.18347365989569}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10., 8.371297896704537}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., 8.371297896704537}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., 8.3708885075216}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., 8.3708885075216}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10., 0.11519344921185852`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., 0.11519344921185852`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., 0.1151934398748249}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., 0.1151934398748249}]]}]}, {
       InsetBox["r", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., -19.18347365989569}]], ImageScaled[{0, 0.5}]],
        InsetBox["\[Theta]", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., 8.3708885075216}]], ImageScaled[{0, 0.5}]], 
       InsetBox["normal", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., 0.1151934398748249}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 67}, {All, All}},
  ImageSize->{450.4000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-19.82564723842874, 8.371297896704537}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685883697191745*^9, 3.685883722644197*^9}, {
   3.685883765505871*^9, 3.685883779901923*^9}, {3.685883822881463*^9, 
   3.685883827985448*^9}, {3.685884773579988*^9, 3.685884791364438*^9}, 
   3.685900108051806*^9, {3.685900180495672*^9, 3.685900185261697*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.685883099261322*^9, 3.685883100251898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<es`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.685809272307323*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{16.2568359375, {1., 7.}}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6858092723283453`*^9, 3.685906051386262*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic pendulum", "Section",
 CellChangeTimes->{
  3.685809272232636*^9, {3.685906059526177*^9, 3.6859060614648867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p1`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.685809272269802*^9, {3.685906063611395*^9, 3.685906064827922*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{16.2568359375, {1., 7.}}]], "Output",
 CellChangeTimes->{{3.6858092722898417`*^9, 3.6858092919279118`*^9}, 
   3.685879436045581*^9, 3.685906065254373*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Parameters", "Subsection",
 CellChangeTimes->{{3.6858833820053787`*^9, 3.6858833847330637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"g", "\[Rule]", "9.8"}], " ", ",", 
    RowBox[{"l", "\[Rule]", "2"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.685883386340185*^9, 3.6858833989850273`*^9}, {
   3.6858834350324173`*^9, 3.685883471715969*^9}, {3.685883518347486*^9, 
   3.685883520625572*^9}, {3.68590016815971*^9, 3.6859001718862743`*^9}, 
   3.685906083724723*^9, {3.685906409235302*^9, 3.6859064123873053`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"l", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.685883472658471*^9, 3.685883521077545*^9, 
  3.685900173990815*^9, 3.685906084780634*^9, 3.685906412931484*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Define forces", "Subsection",
 CellChangeTimes->{{3.685879469503236*^9, 3.6858794798805227`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fg", " ", "=", 
   RowBox[{"m", " ", "g", " ", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"-", "rhat"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ftension", "=", 
   RowBox[{
    RowBox[{"tension", "[", "t", "]"}], " ", "rhat"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685879496130699*^9, 3.685879572470675*^9}, {
  3.6858797207303667`*^9, 3.6858797643349133`*^9}, {3.685883309581204*^9, 
  3.685883309766885*^9}, {3.6859060914720984`*^9, 3.6859060925260067`*^9}, {
  3.6859213400736637`*^9, 3.685921370641079*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Equations of motion", "Subsection",
 CellChangeTimes->{{3.6858797775527782`*^9, 3.685879789594347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mass", " ", "motion"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "=", 
     RowBox[{
      RowBox[{"fg", "+", "ftension"}], "\[Equal]", 
      RowBox[{"m", " ", 
       RowBox[{"polaraccel", "[", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"eqns", "=", 
    RowBox[{"splitVectorEqn", "[", "eq1", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6858798013196583`*^9, 3.685879844157256*^9}, {
   3.685879876177787*^9, 3.685879876488512*^9}, {3.685882414402318*^9, 
   3.685882426464727*^9}, {3.6858832152686157`*^9, 3.685883264093402*^9}, {
   3.6859061067592077`*^9, 3.685906122113882*^9}, 3.68590637286452*^9, 
   3.6859065128930693`*^9, {3.685906543837409*^9, 3.68590655170188*^9}, {
   3.6859213660135593`*^9, 3.685921367528144*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"tension", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "[", "t", "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "m", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.685906551938403*^9, 3.685921374273656*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Constraints", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.68590617019722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraint", "=", 
   RowBox[{
    RowBox[{"r", "[", "t", "]"}], "\[Equal]", "l"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.6859061583968153`*^9}, {
  3.685906204516946*^9, 3.685906230636426*^9}, {3.68590628247033*^9, 
  3.685906282820859*^9}, {3.685906348536948*^9, 3.685906401795878*^9}, {
  3.685921580699527*^9, 3.6859215809967957`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Solve", "Subsection",
 CellChangeTimes->{{3.6858833719220343`*^9, 3.6858833763610497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqns", ",", "constraint"}], "}"}], "/.", "params"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Pantelides\>\"", ",", " ", 
         RowBox[{
         "\"\<ConstraintMethod\>\"", "\[Rule]", "\"\<Projection\>\""}]}], 
        "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6858833316504383`*^9, 3.685883356967474*^9}, {
   3.685883478091895*^9, 3.685883498580386*^9}, 3.685883535957912*^9, 
   3.685883567486445*^9, {3.685883629892119*^9, 3.685883634458552*^9}, {
   3.685883704380701*^9, 3.685883719979106*^9}, {3.685883775747592*^9, 
   3.685883777446323*^9}, {3.685905809511249*^9, 3.685905820233696*^9}, {
   3.685905865729876*^9, 3.685905866106449*^9}, {3.68590646178723*^9, 
   3.685906474752206*^9}, {3.685906557823328*^9, 3.685906565200671*^9}, {
   3.685921392324782*^9, 3.685921393219735*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","chknic",
   "\"Structural analysis indicates that \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
initial conditions are needed to fix the state of the system. Currently only \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) initial conditions are specified. NDSolve may \
return one of a family of solutions.\"",2,189,58,30901331320839948251,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.6859058665016623`*^9, 3.685906418668777*^9, {3.6859064641108217`*^9, 
   3.6859064787016687`*^9}, {3.685906523596054*^9, 3.68590652491262*^9}, 
   3.685906565636303*^9, 3.685921330099305*^9, {3.68592138577149*^9, 
   3.685921393859247*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5MS/U/IL7zPzd0wYnD
3cQ/6y/PILB89T/SUFjDa77VPxv/Vj1pF/U/IqE47Akn4D86pcswiJbyP9Wb
k3tZVOU/iNgv2iF97D+7wbiC/fHqP+6uuvKWHN8/gEqXStgX8D/gaeVUVWWn
P7tJtw/c7vI/3GGjH9fr27/ziT6Xnbj1P3RISOB2Juu/2iBupGZS+D8yPaAL
uCfyv1rNgu1ZJPs/qsMCIi8E9b+J0D+8VMb9Py1YqV4HkfW/WwqypoYtAECy
/IIL4Rn0vz63Ng34kwFAyEThwC5V8L94j482beICQKid4iyN+eW/f/LaffdM
BEAwq0AyZwbOvwX2WabgsAVA3C+zTAkszz/iJK2RzfwGQMxourG7GuU/jN7y
ms9kCEAbGRKX+FvwP43DDGfVtAlAPtba6G3y8z9bMxlR8CALQDf6YHFJlvU/
p0NZHGqGDEAdd7oxYtj0P0t/barn0w1AUCYE4w8W8j+8RXRWej0PQMr/487v
9Ok/wpunYohHEEDco7qHCYjaP+XkrgoD7RBAwJlEz1knmL9vc69BiKARQDcP
YS4ko9+/pRcaWg9IEkBGogpD3e7rv0EBfgGh/RJAyWzYz8m88r8cu3sZ4q8T
QKOX/9cBO/W/oorjEiVWFEDPMgYJGXv1v4+fRJtyChVAhrGbhct8878oyg8F
wrIVQHTW4wf6Hu+/AMV038BXFkAZUtq8VBTkvz4F00jKChdA2NnkWVw8xr8o
W5uT1bEXQO4DwEarjtE/ePZcbetmGED2GdRtyw3nP3SniCgDEBlAotq77APH
8D+vKE5UyrUZQL8RIDozJvQ/Ue8MD5xpGkCvNZWly5r1P5/LNatvERtAYz68
ZOnW9D9T7VfWTccbQGKKIF6luvE/R98Tctt5HEB8wJ0aLxfpP+bmOe9qIB1A
a0H7W4Ta2D/rM1n7BNUdQIBzIMQx5Le/nJbi6KB9HkDkdlZrggXhv4zJBUfs
Ih9ASg6fAEPB7L/iQSI0QtYfQG59HBTg8vK/8mdUAc0+IEAWi5raizr1v6ZR
FDB+mSBALvpUf9tn9b96IyEXh/IgQKXjJTl3QvO/JADj7pBFIUBYY34y74vu
v4F/IQ6gnyFAnMqJrNQu4r+0CRUesPMhQEAi0YATQsG/mjaFdcVOIkCyU5yz
mY/WP59LQoUyqCJAmK7Sc6b96D96a7SFoPsiQLXL5OCMavE/CC6jzRNWI0AG
7s304q70P2z7RgaIqiNAJ6ZofZee9T8yFFD6//8jQAF5+yC3c/Q/JmTZQA==

                    "]]}}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-1.3479074189867888`, 
                   1.3512186907559085`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5MS/U/IL7zPzd0wYnD
3cQ/6y/PILB89T/SUFjDa77VPxv/Vj1pF/U/IqE47Akn4D86pcswiJbyP9Wb
k3tZVOU/iNgv2iF97D+7wbiC/fHqP+6uuvKWHN8/gEqXStgX8D/gaeVUVWWn
P7tJtw/c7vI/3GGjH9fr27/ziT6Xnbj1P3RISOB2Juu/2iBupGZS+D8yPaAL
uCfyv1rNgu1ZJPs/qsMCIi8E9b+J0D+8VMb9Py1YqV4HkfW/WwqypoYtAECy
/IIL4Rn0vz63Ng34kwFAyEThwC5V8L94j482beICQKid4iyN+eW/f/LaffdM
BEAwq0AyZwbOvwX2WabgsAVA3C+zTAkszz/iJK2RzfwGQMxourG7GuU/jN7y
ms9kCEAbGRKX+FvwP43DDGfVtAlAPtba6G3y8z9bMxlR8CALQDf6YHFJlvU/
p0NZHGqGDEAdd7oxYtj0P0t/barn0w1AUCYE4w8W8j+8RXRWej0PQMr/487v
9Ok/wpunYohHEEDco7qHCYjaP+XkrgoD7RBAwJlEz1knmL9vc69BiKARQDcP
YS4ko9+/pRcaWg9IEkBGogpD3e7rv0EBfgGh/RJAyWzYz8m88r8cu3sZ4q8T
QKOX/9cBO/W/oorjEiVWFEDPMgYJGXv1v4+fRJtyChVAhrGbhct8878oyg8F
wrIVQHTW4wf6Hu+/AMV038BXFkAZUtq8VBTkvz4F00jKChdA2NnkWVw8xr8o
W5uT1bEXQO4DwEarjtE/ePZcbetmGED2GdRtyw3nP3SniCgDEBlAotq77APH
8D+vKE5UyrUZQL8RIDozJvQ/Ue8MD5xpGkCvNZWly5r1P5/LNatvERtAYz68
ZOnW9D9T7VfWTccbQGKKIF6luvE/R98Tctt5HEB8wJ0aLxfpP+bmOe9qIB1A
a0H7W4Ta2D/rM1n7BNUdQIBzIMQx5Le/nJbi6KB9HkDkdlZrggXhv4zJBUfs
Ih9ASg6fAEPB7L/iQSI0QtYfQG59HBTg8vK/8mdUAc0+IEAWi5raizr1v6ZR
FDB+mSBALvpUf9tn9b96IyEXh/IgQKXjJTl3QvO/JADj7pBFIUBYY34y74vu
v4F/IQ6gnyFAnMqJrNQu4r+0CRUesPMhQEAi0YATQsG/mjaFdcVOIkCyU5yz
mY/WP59LQoUyqCJAmK7Sc6b96D96a7SFoPsiQLXL5OCMavE/CC6jzRNWI0AG
7s304q70P2z7RgaIqiNAJ6ZofZee9T8yFFD6//8jQAF5+yC3c/Q/JmTZQA==

                    "]]}}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-1.3479074189867888`, 
                   1.3512186907559085`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "t", "]"}], "}"}]], "Output",
 CellChangeTimes->{3.68592139391825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", "\[Theta]", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685883690498055*^9, 3.685883711580399*^9}, {
   3.685883764683485*^9, 3.685883827595285*^9}, {3.6858847904802*^9, 
   3.685884790820023*^9}, 3.685900106751725*^9, {3.6859001843967743`*^9, 
   3.685900184666192*^9}, {3.6859214135796337`*^9, 3.685921414217814*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
+vYigf4H1hevFw==
      "]]}}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[0.5], 
      LineBox[{Scaled[{0.02, 0}, {10., 1.2782508459221689`}], 
        Offset[{3, 0}, Scaled[{0.02, 0}, {10., 1.2782508459221689`}]], 
        Offset[{7, 0}, Scaled[{0.02, 0}, {10., 1.2782501814528204`}]], 
        Offset[{12, 0}, Scaled[{0.02, 0}, {10., 1.2782501814528204`}]]}], 
      InsetBox["\[Theta]", Offset[{15, 0}, 
       Scaled[{0.02, 0}, {10., 1.2782501814528204}]], 
       ImageScaled[{0, 0.5}]], {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 36}, {All, All}},
  ImageSize->{450.4000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-1.3515237393347155`, 1.351604531098792}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685883697191745*^9, 3.685883722644197*^9}, {
   3.685883765505871*^9, 3.685883779901923*^9}, {3.685883822881463*^9, 
   3.685883827985448*^9}, {3.685884773579988*^9, 3.685884791364438*^9}, 
   3.685900108051806*^9, {3.685900180495672*^9, 3.685900185261697*^9}, 
   3.6859064224375362`*^9, 3.685906487403159*^9, {3.685921402959796*^9, 
   3.685921415235824*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.685883099261322*^9, 3.685883100251898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p1`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.685809272307323*^9, {3.685906069598714*^9, 3.685906070269486*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{16.2568359375, {1., 7.}}]], "Output",
 CellChangeTimes->{3.685921957569085*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Segway pendulum", "Section",
 CellChangeTimes->{
  3.685809272232636*^9, {3.685906059526177*^9, 3.6859060614648867`*^9}, {
   3.6859219668745613`*^9, 3.6859219681034403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p2`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.685809272269802*^9, {3.685906063611395*^9, 3.685906064827922*^9}, {
   3.685921970481358*^9, 3.685921970585084*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{16.2568359375, {1., 7.}}]], "Output",
 CellChangeTimes->{{3.6858092722898417`*^9, 3.6858092919279118`*^9}, 
   3.685879436045581*^9, 3.685906065254373*^9, {3.6859219709754753`*^9, 
   3.685921979622607*^9}, 3.685924047160074*^9, 3.68592437388032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Parameters", "Subsection",
 CellChangeTimes->{{3.6858833820053787`*^9, 3.6858833847330637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{"m", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"g", "\[Rule]", "9.8"}], " ", ",", 
    RowBox[{"l", "\[Rule]", "2"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.685883386340185*^9, 3.6858833989850273`*^9}, {
   3.6858834350324173`*^9, 3.685883471715969*^9}, {3.685883518347486*^9, 
   3.685883520625572*^9}, {3.68590016815971*^9, 3.6859001718862743`*^9}, 
   3.685906083724723*^9, {3.685906409235302*^9, 3.6859064123873053`*^9}, {
   3.685921984986467*^9, 3.6859219890959167`*^9}, 3.685922141063715*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"l", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.685883472658471*^9, 3.685883521077545*^9, 
  3.685900173990815*^9, 3.685906084780634*^9, 3.685906412931484*^9, 
  3.68592214257806*^9, 3.685922204996073*^9, 3.68592404729744*^9, 
  3.6859243740587587`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Define forces", "Subsection",
 CellChangeTimes->{{3.685879469503236*^9, 3.6858794798805227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xhat", "=", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"-", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"-", "\[Theta]hat"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685921998186811*^9, 3.685921999249124*^9}, {
  3.685922032880619*^9, 3.6859220717440557`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fg", " ", "=", 
   RowBox[{"m", " ", "g", " ", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"-", "rhat"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ftension", "=", 
   RowBox[{
    RowBox[{"tension", "[", "t", "]"}], " ", "rhat"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685879496130699*^9, 3.685879572470675*^9}, {
  3.6858797207303667`*^9, 3.6858797643349133`*^9}, {3.685883309581204*^9, 
  3.685883309766885*^9}, {3.6859060914720984`*^9, 3.6859060925260067`*^9}, {
  3.6859213400736637`*^9, 3.685921370641079*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Equations of motion", "Subsection",
 CellChangeTimes->{{3.6858797775527782`*^9, 3.685879789594347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mass", " ", "motion"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "=", 
     RowBox[{
      RowBox[{"fg", "+", "ftension"}], "\[Equal]", 
      RowBox[{"m", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"polaraccel", "[", "]"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}], " ", "xhat"}]}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"eqns", "=", 
    RowBox[{"splitVectorEqn", "[", "eq1", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6858798013196583`*^9, 3.685879844157256*^9}, {
   3.685879876177787*^9, 3.685879876488512*^9}, {3.685882414402318*^9, 
   3.685882426464727*^9}, {3.6858832152686157`*^9, 3.685883264093402*^9}, {
   3.6859061067592077`*^9, 3.685906122113882*^9}, 3.68590637286452*^9, 
   3.6859065128930693`*^9, {3.685906543837409*^9, 3.68590655170188*^9}, {
   3.6859213660135593`*^9, 3.685921367528144*^9}, {3.685922085395255*^9, 
   3.685922130132292*^9}, {3.685923353305653*^9, 3.685923358141654*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"tension", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "[", "t", "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "m", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.685906551938403*^9, 3.685921374273656*^9, {3.685922113831604*^9, 
   3.685922137321135*^9}, 3.685922205123241*^9, 3.685924047428244*^9, 
   3.685924374395735*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Constraints", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.68590617019722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraint", "=", 
   RowBox[{
    RowBox[{"r", "[", "t", "]"}], "\[Equal]", "l"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.6859061583968153`*^9}, {
  3.685906204516946*^9, 3.685906230636426*^9}, {3.68590628247033*^9, 
  3.685906282820859*^9}, {3.685906348536948*^9, 3.685906401795878*^9}, {
  3.685921580699527*^9, 3.6859215809967957`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Driving", " ", "functions"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6859221497033567`*^9, 3.6859221549647293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"driver", "=", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Equal]", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685922156260878*^9, 3.685922164096293*^9}, {
  3.685922220754259*^9, 3.685922324504369*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Solve", "Subsection",
 CellChangeTimes->{{3.6858833719220343`*^9, 3.6858833763610497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqns", ",", "constraint", ",", "driver"}], "}"}], "/.", 
     "params"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Pantelides\>\"", ",", " ", 
         RowBox[{
         "\"\<ConstraintMethod\>\"", "\[Rule]", "\"\<Projection\>\""}]}], 
        "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6858833316504383`*^9, 3.685883356967474*^9}, {
   3.685883478091895*^9, 3.685883498580386*^9}, 3.685883535957912*^9, 
   3.685883567486445*^9, {3.685883629892119*^9, 3.685883634458552*^9}, {
   3.685883704380701*^9, 3.685883719979106*^9}, {3.685883775747592*^9, 
   3.685883777446323*^9}, {3.685905809511249*^9, 3.685905820233696*^9}, {
   3.685905865729876*^9, 3.685905866106449*^9}, {3.68590646178723*^9, 
   3.685906474752206*^9}, {3.685906557823328*^9, 3.685906565200671*^9}, {
   3.685921392324782*^9, 3.685921393219735*^9}, {3.685922170446888*^9, 
   3.685922171191637*^9}, {3.685924033570928*^9, 3.685924034744709*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","chknic",
   "\"Structural analysis indicates that \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
initial conditions are needed to fix the state of the system. Currently only \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) initial conditions are specified. NDSolve may \
return one of a family of solutions.\"",2,14,1,30901631520811990847,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.6859058665016623`*^9, 3.685906418668777*^9, {3.6859064641108217`*^9, 
   3.6859064787016687`*^9}, {3.685906523596054*^9, 3.68590652491262*^9}, 
   3.685906565636303*^9, 3.685921330099305*^9, {3.68592138577149*^9, 
   3.685921393859247*^9}, 3.6859221716373043`*^9, {3.685922208672655*^9, 
   3.685922326746118*^9}, {3.6859240354866447`*^9, 3.6859240477125683`*^9}, 
   3.6859243750818567`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4GLwl55b/zPzd0wYnD
3cQ/oNPgnPp69T/SUFjDa77VP4/FOyya//Q/IqE47Akn4D+nHm1LnUTyP9Wb
k3tZVOU/ZMCgO2rW6j+7wbiC/fHqP1h5htUqeNc/gEqXStgX8D/wRzZj+fvF
v7tJtw/c7vI/MxwDUVb06L/ziT6Xnbj1P8RVj+NQ5fS/2iBupGZS+D/5KAGI
tdf6v1rNgu1ZJPs/diMNoF39/r+J0D+8VMb9P3+SfzFucQDAWwqypoYtAEBR
crZ0A5AAwD63Ng34kwFAyJAXHHyx/794j482beICQHMbjyWpsPy/f/LaffdM
BEBcHgLvVk33vwX2WabgsAVAaEcb/RMt77/iJK2RzfwGQOANKFEefdm/jN7y
ms9kCEBIAiV+tYzTP43DDGfVtAlAto8CZe7j7T9bMxlR8CALQOi/J+/o8Pc/
p0NZHGqGDEAmz8QU6XL+P0t/barn0w1AikeGCIxXAUC8RXRWej0PQPUREaQJ
6QJAwpunYohHEEBU/roM6OgDQOXkrgoD7RBAb4Lbh1CTBEBvc69BiKARQBZ0
8owW/gRApRcaWg9IEkDi92pmBRAFQEEBfgGh/RJAi+Mr7wKtBEAcu3sZ4q8T
QJoJzTtanwNAoorjEiVWFED5YBI9K9EBQI+fRJtyChVAdGTvXh9+/T8oyg8F
wrIVQFZFuxcBevU/AMV038BXFkC2FFEMZ7/nPz4F00jKChdAoJvqWqhopT8o
W5uT1bEXQKy4prJmbOK/ePZcbetmGECBY8+KcCTyv3SniCgDEBlA3a/NcNJg
+L+vKE5UyrUZQJg/VyB2avy/Ue8MD5xpGkCOl3KPnnH+v5/LNatvERtAyTx0
zmcb/r9T7VfWTccbQByZHX43O/u/R98Tctt5HEA/a8c3uOr1v+bmOe9qIB1A
xnk3EK4p7r/rM1n7BNUdQIyYoemFXNm/nJbi6KB9HkAQO8TNofzAP4zJBUfs
Ih9ABOoTyjeY4z/iQSI0QtYfQD+q/ZKQtPA/8mdUAc0+IEAQwZMN32T1P6ZR
FDB+mSBAirM+d2pK+D96IyEXh/IgQNi2Vergyvg/JADj7pBFIUBgbRXnlyb3
P4F/IQ6gnyFAk2oVu64z8z+0CRUesPMhQCW/7C2BlOs/mjaFdcVOIkB2FKlm
F5TaP59LQoUyqCJAKG47xxNJrL96a7SFoPsiQASuRwRhlN6/CC6jzRNWI0Cx
WPtoUwHsv2z7RgaIqiNARikXzCeJ8r8yFFD6//8jQAERUy8oZ/W/clnFzg==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-2.070319091623141, 
                    2.632822799815572}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4GLwl55b/zPzd0wYnD
3cQ/oNPgnPp69T/SUFjDa77VP4/FOyya//Q/IqE47Akn4D+nHm1LnUTyP9Wb
k3tZVOU/ZMCgO2rW6j+7wbiC/fHqP1h5htUqeNc/gEqXStgX8D/wRzZj+fvF
v7tJtw/c7vI/MxwDUVb06L/ziT6Xnbj1P8RVj+NQ5fS/2iBupGZS+D/5KAGI
tdf6v1rNgu1ZJPs/diMNoF39/r+J0D+8VMb9P3+SfzFucQDAWwqypoYtAEBR
crZ0A5AAwD63Ng34kwFAyJAXHHyx/794j482beICQHMbjyWpsPy/f/LaffdM
BEBcHgLvVk33vwX2WabgsAVAaEcb/RMt77/iJK2RzfwGQOANKFEefdm/jN7y
ms9kCEBIAiV+tYzTP43DDGfVtAlAto8CZe7j7T9bMxlR8CALQOi/J+/o8Pc/
p0NZHGqGDEAmz8QU6XL+P0t/barn0w1AikeGCIxXAUC8RXRWej0PQPUREaQJ
6QJAwpunYohHEEBU/roM6OgDQOXkrgoD7RBAb4Lbh1CTBEBvc69BiKARQBZ0
8owW/gRApRcaWg9IEkDi92pmBRAFQEEBfgGh/RJAi+Mr7wKtBEAcu3sZ4q8T
QJoJzTtanwNAoorjEiVWFED5YBI9K9EBQI+fRJtyChVAdGTvXh9+/T8oyg8F
wrIVQFZFuxcBevU/AMV038BXFkC2FFEMZ7/nPz4F00jKChdAoJvqWqhopT8o
W5uT1bEXQKy4prJmbOK/ePZcbetmGECBY8+KcCTyv3SniCgDEBlA3a/NcNJg
+L+vKE5UyrUZQJg/VyB2avy/Ue8MD5xpGkCOl3KPnnH+v5/LNatvERtAyTx0
zmcb/r9T7VfWTccbQByZHX43O/u/R98Tctt5HEA/a8c3uOr1v+bmOe9qIB1A
xnk3EK4p7r/rM1n7BNUdQIyYoemFXNm/nJbi6KB9HkAQO8TNofzAP4zJBUfs
Ih9ABOoTyjeY4z/iQSI0QtYfQD+q/ZKQtPA/8mdUAc0+IEAQwZMN32T1P6ZR
FDB+mSBAirM+d2pK+D96IyEXh/IgQNi2Vergyvg/JADj7pBFIUBgbRXnlyb3
P4F/IQ6gnyFAk2oVu64z8z+0CRUesPMhQCW/7C2BlOs/mjaFdcVOIkB2FKlm
F5TaP59LQoUyqCJAKG47xxNJrL96a7SFoPsiQASuRwRhlN6/CC6jzRNWI0Cx
WPtoUwHsv2z7RgaIqiNARikXzCeJ8r8yFFD6//8jQAERUy8oZ/W/clnFzg==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-2.070319091623141, 
                    2.632822799815572}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF45r7+WPjd0wYnD
3cQ/FzhOzKB/1D/SUFjDa77VP+q6SHfaG+Q/IqE47Akn4D/oJTy4MxfrP9Wb
k3tZVOU/0lIp96YZ7z+7wbiC/fHqP1uuAON9y+8/gEqXStgX8D8DvC3FxPDs
P7tJtw/c7vI/gHJ3/dlj5j/ziT6Xnbj1P3Tcgy4Tedo/2iBupGZS+D8o5sjO
N+e5P1rNgu1ZJPs/ZVSpS6nPz7+J0D+8VMb9P7CqOZkdi+G/WwqypoYtAEC1
2qZElR/pvz63Ng34kwFA+ZMNwY9l7r94j482beICQJNZq4Ov/++/f/LaffdM
BECN3CNe0OrtvwX2WabgsAVAgPul4KZC6L/iJK2RzfwGQC57a17TWeC/jN7y
ms9kCEB4QoCmF4PHv43DDGfVtAlAANWPvyZLwj9bMxlR8CALQPanq388oN4/
p0NZHGqGDEA0Xy0eFgDoP0t/barn0w1AUyfkK7uC7T+8RXRWej0PQOIskAQX
+O8/wpunYohHEEC4uW3O2rPuP+XkrgoD7RBA6qsSCo8/6j9vc69BiKARQKO+
8+89XeI/pRcaWg9IEkBUKraZUu/RP0EBfgGh/RJAsGoe3F4Osr8cu3sZ4q8T
QHwDi/LvBdq/oorjEiVWFEC3OVjmvqjlv4+fRJtyChVAbq81OHR07L8oyg8F
wrIVQIr3O0VQqO+/AMV038BXFkAjYo+wrYHvvz4F00jKChdAUP5MKaiu678o
W5uT1bEXQNY3ug/AE+W/ePZcbetmGEA4SBFks93Wv3SniCgDEBlAkDAA5T/3
ob+vKE5UyrUZQDpa7IlxONI/Ue8MD5xpGkCFyDoajhvjP5/LNatvERtAanWB
/bha6j9T7VfWTccbQBoEfGiPBe8/R98Tctt5HEC+9A53XtbvP+bmOe9qIB1A
rZUIvFUj7T/rM1n7BNUdQCEWjtA2xuY/nJbi6KB9HkBkRG7ft4/cP4zJBUfs
Ih9A6FnY05TUwT/iQSI0QtYfQDz+XFwrv8q/8mdUAc0+IEBbQyEEL2Hgv6ZR
FDB+mSBAvS7Evxvm6L96IyEXh/IgQBJgKaFJQu6/JADj7pBFIUDAdaKCyf/v
v4F/IQ6gnyFAeBBQHegd7r+0CRUesPMhQDrUXlsHBem/mjaFdcVOIkBsfijZ
1IDgv59LQoUyqCJA4AhsshR+yL96a7SFoPsiQLyTbwcSBcE/CC6jzRNWI0Cy
3z6JwO7dP2z7RgaIqiNAsWpb/2hS5z8yFFD6//8jQL3mGKvYNu0/nFDSSQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-0.99997401728222, 
                    0.9990344132542328}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF45r7+WPjd0wYnD
3cQ/FzhOzKB/1D/SUFjDa77VP+q6SHfaG+Q/IqE47Akn4D/oJTy4MxfrP9Wb
k3tZVOU/0lIp96YZ7z+7wbiC/fHqP1uuAON9y+8/gEqXStgX8D8DvC3FxPDs
P7tJtw/c7vI/gHJ3/dlj5j/ziT6Xnbj1P3Tcgy4Tedo/2iBupGZS+D8o5sjO
N+e5P1rNgu1ZJPs/ZVSpS6nPz7+J0D+8VMb9P7CqOZkdi+G/WwqypoYtAEC1
2qZElR/pvz63Ng34kwFA+ZMNwY9l7r94j482beICQJNZq4Ov/++/f/LaffdM
BECN3CNe0OrtvwX2WabgsAVAgPul4KZC6L/iJK2RzfwGQC57a17TWeC/jN7y
ms9kCEB4QoCmF4PHv43DDGfVtAlAANWPvyZLwj9bMxlR8CALQPanq388oN4/
p0NZHGqGDEA0Xy0eFgDoP0t/barn0w1AUyfkK7uC7T+8RXRWej0PQOIskAQX
+O8/wpunYohHEEC4uW3O2rPuP+XkrgoD7RBA6qsSCo8/6j9vc69BiKARQKO+
8+89XeI/pRcaWg9IEkBUKraZUu/RP0EBfgGh/RJAsGoe3F4Osr8cu3sZ4q8T
QHwDi/LvBdq/oorjEiVWFEC3OVjmvqjlv4+fRJtyChVAbq81OHR07L8oyg8F
wrIVQIr3O0VQqO+/AMV038BXFkAjYo+wrYHvvz4F00jKChdAUP5MKaiu678o
W5uT1bEXQNY3ug/AE+W/ePZcbetmGEA4SBFks93Wv3SniCgDEBlAkDAA5T/3
ob+vKE5UyrUZQDpa7IlxONI/Ue8MD5xpGkCFyDoajhvjP5/LNatvERtAanWB
/bha6j9T7VfWTccbQBoEfGiPBe8/R98Tctt5HEC+9A53XtbvP+bmOe9qIB1A
rZUIvFUj7T/rM1n7BNUdQCEWjtA2xuY/nJbi6KB9HkBkRG7ft4/cP4zJBUfs
Ih9A6FnY05TUwT/iQSI0QtYfQDz+XFwrv8q/8mdUAc0+IEBbQyEEL2Hgv6ZR
FDB+mSBAvS7Evxvm6L96IyEXh/IgQBJgKaFJQu6/JADj7pBFIUDAdaKCyf/v
v4F/IQ6gnyFAeBBQHegd7r+0CRUesPMhQDrUXlsHBem/mjaFdcVOIkBsfijZ
1IDgv59LQoUyqCJA4AhsshR+yL96a7SFoPsiQLyTbwcSBcE/CC6jzRNWI0Cy
3z6JwO7dP2z7RgaIqiNAsWpb/2hS5z8yFFD6//8jQL3mGKvYNu0/nFDSSQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-0.99997401728222, 
                    0.9990344132542328}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68592139391825*^9, 3.685922171691379*^9, {3.68592220873971*^9, 
   3.685922326790497*^9}, {3.6859240355371017`*^9, 3.6859240477785378`*^9}, 
   3.6859243752496433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "x"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685883690498055*^9, 3.685883711580399*^9}, {
   3.685883764683485*^9, 3.685883827595285*^9}, {3.6858847904802*^9, 
   3.685884790820023*^9}, 3.685900106751725*^9, {3.6859001843967743`*^9, 
   3.685900184666192*^9}, {3.6859214135796337`*^9, 3.685921414217814*^9}, {
   3.685924037705906*^9, 3.6859240378526087`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Vn1hZYUKjtefaWi4MvD/AP0q+rA=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
dst4QpsOE/0PUvZMXg==
      "]]}}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {10., -1.3376847827092524`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., -1.3376847827092524`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., -1.33768476707638}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., -1.33768476707638}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10., 0.9129450841634442}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., 0.9129450841634442}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., 0.9129451037089197}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., 0.9129451037089197}]]}]}, {
       InsetBox["\[Theta]", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., -1.33768476707638}]], ImageScaled[{0, 0.5}]], 
       InsetBox["x", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., 0.9129451037089197}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 37}, {All, All}},
  ImageSize->{450.4000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-2.075866796529547, 2.634799931649183}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685883697191745*^9, 3.685883722644197*^9}, {
   3.685883765505871*^9, 3.685883779901923*^9}, {3.685883822881463*^9, 
   3.685883827985448*^9}, {3.685884773579988*^9, 3.685884791364438*^9}, 
   3.685900108051806*^9, {3.685900180495672*^9, 3.685900185261697*^9}, 
   3.6859064224375362`*^9, 3.685906487403159*^9, {3.685921402959796*^9, 
   3.685921415235824*^9}, {3.685922213200321*^9, 3.685922277778626*^9}, 
   3.685922328479746*^9, {3.68592403904158*^9, 3.685924048223709*^9}, 
   3.6859243760398417`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.685883099261322*^9, 3.685883100251898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p2`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.685809272307323*^9, {3.685906069598714*^9, 3.685906070269486*^9}, {
   3.685921975917831*^9, 3.6859219759815483`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{30., {3., 13.}}]], "Output",
 CellChangeTimes->{{3.685921957569085*^9, 3.685921976392077*^9}, 
   3.685923068525982*^9, 3.685924048480236*^9, 3.6859243764967213`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wheeled segway", "Section",
 CellChangeTimes->{
  3.685809272232636*^9, {3.685906059526177*^9, 3.6859060614648867`*^9}, {
   3.6859219668745613`*^9, 3.6859219681034403`*^9}, {3.685923015812035*^9, 
   3.685923018035842*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p3`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.685809272269802*^9, {3.685906063611395*^9, 3.685906064827922*^9}, {
   3.685921970481358*^9, 3.685921970585084*^9}, {3.68592307105581*^9, 
   3.6859230713876467`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{30., {3., 13.}}]], "Output",
 CellChangeTimes->{{3.6858092722898417`*^9, 3.6858092919279118`*^9}, 
   3.685879436045581*^9, 3.685906065254373*^9, {3.6859219709754753`*^9, 
   3.685921979622607*^9}, {3.6859230727929707`*^9, 3.685923080679142*^9}, 
   3.6859240616402693`*^9, 3.6859242516672163`*^9, {3.6859244009781513`*^9, 
   3.685924405355547*^9}, 3.685924454881299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Parameters", "Subsection",
 CellChangeTimes->{{3.6858833820053787`*^9, 3.6858833847330637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", "1"}], ",", 
    RowBox[{"m2", "\[Rule]", "2"}], ",", " ", 
    RowBox[{"g", "\[Rule]", "9.8"}], " ", ",", 
    RowBox[{"l", "\[Rule]", "2"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.685883386340185*^9, 3.6858833989850273`*^9}, {
   3.6858834350324173`*^9, 3.685883471715969*^9}, {3.685883518347486*^9, 
   3.685883520625572*^9}, {3.68590016815971*^9, 3.6859001718862743`*^9}, 
   3.685906083724723*^9, {3.685906409235302*^9, 3.6859064123873053`*^9}, {
   3.685921984986467*^9, 3.6859219890959167`*^9}, 3.685922141063715*^9, {
   3.685923162857441*^9, 3.685923170893612*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", "1"}], ",", 
   RowBox[{"m2", "\[Rule]", "2"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"l", "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.685883472658471*^9, 3.685883521077545*^9, 
  3.685900173990815*^9, 3.685906084780634*^9, 3.685906412931484*^9, 
  3.68592214257806*^9, 3.685922204996073*^9, 3.685923131900082*^9, 
  3.6859233634827023`*^9, 3.6859240618101807`*^9, 3.68592426076976*^9, 
  3.685924405460938*^9, 3.685924456410075*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Define forces", "Subsection",
 CellChangeTimes->{{3.685879469503236*^9, 3.6858794798805227`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xhat", "=", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"-", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"-", "\[Theta]hat"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yhat", "=", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], ".", "xhat"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685921998186811*^9, 3.685921999249124*^9}, {
  3.685922032880619*^9, 3.6859220717440557`*^9}, {3.685957812728654*^9, 
  3.685957825489547*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fg", " ", "=", 
   RowBox[{"m1", " ", "g", " ", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"-", "rhat"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ftension", "=", 
   RowBox[{
    RowBox[{"tension", "[", "t", "]"}], " ", "rhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdrive", "=", 
   RowBox[{
    RowBox[{"drive", "[", "t", "]"}], " ", "xhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fnormal", "=", 
   RowBox[{
    RowBox[{"normal", "[", "t", "]"}], "yhat"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685879496130699*^9, 3.685879572470675*^9}, {
   3.6858797207303667`*^9, 3.6858797643349133`*^9}, {3.685883309581204*^9, 
   3.685883309766885*^9}, {3.6859060914720984`*^9, 3.6859060925260067`*^9}, {
   3.6859213400736637`*^9, 3.685921370641079*^9}, {3.685923102684258*^9, 
   3.68592312078994*^9}, 3.685923859124634*^9, 3.6859252036480637`*^9, {
   3.685957802550817*^9, 3.685957809507978*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Equations of motion", "Subsection",
 CellChangeTimes->{{3.6858797775527782`*^9, 3.685879789594347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mass", " ", "motion"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "=", 
     RowBox[{
      RowBox[{"fg", "+", "ftension"}], "\[Equal]", 
      RowBox[{"m1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"polaraccel", "[", "]"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}], " ", "xhat"}]}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Base", " ", "motion"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ftension"}], "+", "fdrive", "+", "fnormal"}], "\[Equal]", 
      RowBox[{"m2", " ", 
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "xhat"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"eqns", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"splitVectorEqn", "[", "eq1", "]"}], ",", 
      RowBox[{"splitVectorEqn", "[", "eq2", "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6858798013196583`*^9, 3.685879844157256*^9}, {
   3.685879876177787*^9, 3.685879876488512*^9}, {3.685882414402318*^9, 
   3.685882426464727*^9}, {3.6858832152686157`*^9, 3.685883264093402*^9}, {
   3.6859061067592077`*^9, 3.685906122113882*^9}, 3.68590637286452*^9, 
   3.6859065128930693`*^9, {3.685906543837409*^9, 3.68590655170188*^9}, {
   3.6859213660135593`*^9, 3.685921367528144*^9}, {3.685922085395255*^9, 
   3.685922130132292*^9}, {3.685923140185319*^9, 3.685923156296771*^9}, {
   3.685923204918244*^9, 3.685923242672574*^9}, {3.685923338586362*^9, 
   3.6859233403519278`*^9}, {3.685924104577984*^9, 3.685924105585783*^9}, {
   3.6859243194713697`*^9, 3.685924323952422*^9}, {3.685924500971678*^9, 
   3.685924504360106*^9}, {3.685924542843409*^9, 3.685924579062693*^9}, 
   3.685924776661481*^9, {3.6859578332377*^9, 3.685957834683374*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"tension", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"m1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "[", "t", "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "m1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{"m1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"normal", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"drive", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{"tension", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "m2"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"drive", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"normal", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "m2"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.685906551938403*^9, 3.685921374273656*^9, {3.685922113831604*^9, 
   3.685922137321135*^9}, 3.685922205123241*^9, 3.685923243694192*^9, {
   3.685923341572043*^9, 3.68592337061904*^9}, 3.685923861248538*^9, 
   3.685924062027109*^9, {3.685924234597892*^9, 3.685924261073134*^9}, 
   3.685924324606494*^9, 3.6859244055642843`*^9, 3.685924461732884*^9, 
   3.685924504727476*^9, 3.6859245511970787`*^9, 3.685924581424263*^9, 
   3.685924777249601*^9, 3.6859578357920637`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Constraints", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.68590617019722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraint", "=", 
   RowBox[{
    RowBox[{"r", "[", "t", "]"}], "\[Equal]", "l"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685906129127569*^9, 3.6859061583968153`*^9}, {
  3.685906204516946*^9, 3.685906230636426*^9}, {3.68590628247033*^9, 
  3.685906282820859*^9}, {3.685906348536948*^9, 3.685906401795878*^9}, {
  3.685921580699527*^9, 3.6859215809967957`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Driving", " ", "functions"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6859221497033567`*^9, 3.6859221549647293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"driver", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"drive", "[", "t", "]"}], "\[Equal]", 
     RowBox[{"-", 
      RowBox[{"x", "[", "t", "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.685922156260878*^9, 3.685922164096293*^9}, {
   3.685922220754259*^9, 3.685922324504369*^9}, {3.685923276960081*^9, 
   3.685923282459339*^9}, 3.6859235788513823`*^9, {3.685924395569993*^9, 
   3.685924443014642*^9}, {3.685924492336916*^9, 3.685924520967639*^9}, {
   3.685957847366123*^9, 3.6859578736458883`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Solve", "Subsection",
 CellChangeTimes->{{3.6858833719220343`*^9, 3.6858833763610497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqns", ",", "constraint", ",", "driver"}], "}"}], "/.", 
     "params"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Pantelides\>\"", ",", " ", 
         RowBox[{
         "\"\<ConstraintMethod\>\"", "\[Rule]", "\"\<Projection\>\""}]}], 
        "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6858833316504383`*^9, 3.685883356967474*^9}, {
   3.685883478091895*^9, 3.685883498580386*^9}, 3.685883535957912*^9, 
   3.685883567486445*^9, {3.685883629892119*^9, 3.685883634458552*^9}, {
   3.685883704380701*^9, 3.685883719979106*^9}, {3.685883775747592*^9, 
   3.685883777446323*^9}, {3.685905809511249*^9, 3.685905820233696*^9}, {
   3.685905865729876*^9, 3.685905866106449*^9}, {3.68590646178723*^9, 
   3.685906474752206*^9}, {3.685906557823328*^9, 3.685906565200671*^9}, {
   3.685921392324782*^9, 3.685921393219735*^9}, {3.685922170446888*^9, 
   3.685922171191637*^9}, {3.685923627567445*^9, 3.685923691899427*^9}, {
   3.685923746054744*^9, 3.685923750094509*^9}, {3.685923785780777*^9, 
   3.685923787045137*^9}, {3.685923819968143*^9, 3.685923826530822*^9}, {
   3.6859243525861263`*^9, 3.685924352743597*^9}, {3.68592439057754*^9, 
   3.6859243932939787`*^9}, {3.685924837651369*^9, 3.6859248408613358`*^9}, {
   3.685924966484136*^9, 3.6859249696423683`*^9}, {3.685925173556068*^9, 
   3.685925188551002*^9}, {3.685925272518231*^9, 3.685925274983755*^9}, {
   3.685925337950417*^9, 3.685925366053278*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","chknic",
   "\"Structural analysis indicates that \\!\\(\\*RowBox[{\\\"4\\\"}]\\) \
initial conditions are needed to fix the state of the system. Currently only \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) initial conditions are specified. NDSolve may \
return one of a family of solutions.\"",2,114,35,30901631520811990847,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.6859058665016623`*^9, 3.685906418668777*^9, {3.6859064641108217`*^9, 
   3.6859064787016687`*^9}, {3.685906523596054*^9, 3.68590652491262*^9}, 
   3.685906565636303*^9, 3.685921330099305*^9, {3.68592138577149*^9, 
   3.685921393859247*^9}, 3.6859221716373043`*^9, {3.685922208672655*^9, 
   3.685922326746118*^9}, 3.685923286164464*^9, 3.685923582481989*^9, {
   3.6859236708819532`*^9, 3.685923694630291*^9}, 3.685923750579308*^9, {
   3.6859238437123137`*^9, 3.685923864087894*^9}, 3.685924062367696*^9, {
   3.6859243366696568`*^9, 3.6859243531381807`*^9}, {3.685924405691618*^9, 
   3.685924472092504*^9}, {3.68592450745667*^9, 3.685924523915368*^9}, {
   3.685924554868235*^9, 3.6859245834343853`*^9}, 3.685924780019176*^9, 
   3.68592486271397*^9, 3.685924969960476*^9, 3.6859251832362833`*^9, 
   3.685925461545576*^9, {3.685957838998088*^9, 3.685957880104698*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5gO1QOiN7xPzd0wYnD
3cQ/qEZn7Uu98z/SUFjDa77VP+l1VKzIoPM/IqE47Akn4D8hAmVBtIPxP9Wb
k3tZVOU/ZkFV6cNK6z+7wbiC/fHqP7r3B/Zet94/gEqXStgX8D9YzaTTf6Wt
P7tJtw/c7vI/AFwytMmZ2r/ziT6Xnbj1P5avm7ShS+q/2iBupGZS+D9DRYxy
vbDxv1rNgu1ZJPs/NuKGCM2c9L+J0D+8VMb9P7ZIG9/hUfW/WwqypoYtAEAM
grsI/xb0vz63Ng34kwFAVjZwIKiq8L94j482beICQIIm21soZee/f/LaffdM
BECo17UhFFzTvwX2WabgsAVAXHtDgEe2wz/iJK2RzfwGQLPzZqvNbeE/jN7y
ms9kCEDj9vEfThvsP43DDGfVtAlAgW6pb0NQ8T9bMxlR8CALQLGYrBv9xfI/
p0NZHGqGDEBsZ3ZdHAvyP0t/barn0w1Af0EcPBvs7j+8RXRWej0PQH3JHrol
euU/wpunYohHEEBi+/ll2lDTP+XkrgoD7RBAEA9poJycvL9vc69BiKARQNMh
uNJfpuG/pRcaWg9IEkDa/5KvtqPsv0EBfgGh/RJAo+xv8kJ/8r8cu3sZ4q8T
QJTe1jSRgvS/oorjEiVWFECa3LhPOmv0v4+fRJtyChVAciOIH1Ys8r8oyg8F
wrIVQC4wgpU4UOy/AMV038BXFkAUGGQWRkXhvz4F00jKChdACCObwtlktr8o
W5uT1bEXQEKcAI7/aNY/ePZcbetmGEDxSrEqB5LoP3SniCgDEBlAyeXmZ4z8
8D+vKE5UyrUZQHY5ETUx2PM/Ue8MD5xpGkCzjCnRANX0P5/LNatvERtAY55h
rpy78z9T7VfWTccbQDfK6wEtZ/A/R98Tctt5HEDIZP1mzFvmP+bmOe9qIB1A
+sQ/OTrh0z/rM1n7BNUdQL6grtwlxsK/nJbi6KB9HkCy8IaeW1Hhv4zJBUfs
Ih9Ah3SUDlY867/iQSI0QtYfQHt3j9lFNPG/8mdUAc0+IEBsjtVY8q3yv6ZR
FDB+mSBAZFAccsoo8r96IyEXh/IgQDZjmOmODu+/JADj7pBFIUD+6sTCQprm
v4F/IQ6gnyFAhqkn1Z5O1L+0CRUesPMhQJTGk+3hIbs/mjaFdcVOIkBean5M
r+vhP59LQoUyqCJAX4NDvC/S7T96a7SFoPsiQOqFBWwZ1fI/CC6jzRNWI0CT
IvDwngT1P2z7RgaIqiNA1j8xSg8D9T8yFFD6//8jQKtlZ3ZH/fI/ZTLYhA==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-1.3324907984829628`, 
                    1.3136281406060888`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5gO1QOiN7xPzd0wYnD
3cQ/qEZn7Uu98z/SUFjDa77VP+l1VKzIoPM/IqE47Akn4D8hAmVBtIPxP9Wb
k3tZVOU/ZkFV6cNK6z+7wbiC/fHqP7r3B/Zet94/gEqXStgX8D9YzaTTf6Wt
P7tJtw/c7vI/AFwytMmZ2r/ziT6Xnbj1P5avm7ShS+q/2iBupGZS+D9DRYxy
vbDxv1rNgu1ZJPs/NuKGCM2c9L+J0D+8VMb9P7ZIG9/hUfW/WwqypoYtAEAM
grsI/xb0vz63Ng34kwFAVjZwIKiq8L94j482beICQIIm21soZee/f/LaffdM
BECo17UhFFzTvwX2WabgsAVAXHtDgEe2wz/iJK2RzfwGQLPzZqvNbeE/jN7y
ms9kCEDj9vEfThvsP43DDGfVtAlAgW6pb0NQ8T9bMxlR8CALQLGYrBv9xfI/
p0NZHGqGDEBsZ3ZdHAvyP0t/barn0w1Af0EcPBvs7j+8RXRWej0PQH3JHrol
euU/wpunYohHEEBi+/ll2lDTP+XkrgoD7RBAEA9poJycvL9vc69BiKARQNMh
uNJfpuG/pRcaWg9IEkDa/5KvtqPsv0EBfgGh/RJAo+xv8kJ/8r8cu3sZ4q8T
QJTe1jSRgvS/oorjEiVWFECa3LhPOmv0v4+fRJtyChVAciOIH1Ys8r8oyg8F
wrIVQC4wgpU4UOy/AMV038BXFkAUGGQWRkXhvz4F00jKChdACCObwtlktr8o
W5uT1bEXQEKcAI7/aNY/ePZcbetmGEDxSrEqB5LoP3SniCgDEBlAyeXmZ4z8
8D+vKE5UyrUZQHY5ETUx2PM/Ue8MD5xpGkCzjCnRANX0P5/LNatvERtAY55h
rpy78z9T7VfWTccbQDfK6wEtZ/A/R98Tctt5HEDIZP1mzFvmP+bmOe9qIB1A
+sQ/OTrh0z/rM1n7BNUdQL6grtwlxsK/nJbi6KB9HkCy8IaeW1Hhv4zJBUfs
Ih9Ah3SUDlY867/iQSI0QtYfQHt3j9lFNPG/8mdUAc0+IEBsjtVY8q3yv6ZR
FDB+mSBAZFAccsoo8r96IyEXh/IgQDZjmOmODu+/JADj7pBFIUD+6sTCQprm
v4F/IQ6gnyFAhqkn1Z5O1L+0CRUesPMhQJTGk+3hIbs/mjaFdcVOIkBean5M
r+vhP59LQoUyqCJAX4NDvC/S7T96a7SFoPsiQOqFBWwZ1fI/CC6jzRNWI0CT
IvDwngT1P2z7RgaIqiNA1j8xSg8D9T8yFFD6//8jQKtlZ3ZH/fI/ZTLYhA==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-1.3324907984829628`, 
                    1.3136281406060888`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4cUScX6PO2vzd0wYnD
3cQ/KEi8fph3tT/SUFjDa77VP3Zbz6f1KtM/IqE47Akn4D+uaAULYsXgP9Wb
k3tZVOU/mb/vw6Eg6D+7wbiC/fHqPzJ9y3m0xO8/gEqXStgX8D/XTISbXgfz
P7tJtw/c7vI/K0GDZ58e9j/ziT6Xnbj1PwdH8fqSKvk/2iBupGZS+D8SUv8L
LPT7P1rNgu1ZJPs/Q3vbp8qe/j+J0D+8VMb9PwTtiNWyRgBAWwqypoYtAECC
OOYO4OwAQD63Ng34kwFAI16rl1tXAUB4j482beICQFL04ouBjwFAf/LaffdM
BEA6MU2sWLgBQAX2WabgsAVALEIQYpW+AUDiJK2RzfwGQGAe9vU6fgFAjN7y
ms9kCEC6dSCwavAAQI3DDGfVtAlAYXn5v5tRAEBbMxlR8CALQP91eHR2Y/8/
p0NZHGqGDECKNorYemf+P0t/barn0w1AkcKGxnmn/T+8RXRWej0PQI2ZVVsw
yvw/wpunYohHEEC82mtpRKH7P+XkrgoD7RBASnFEAvoF+j9vc69BiKARQOPv
3fPfAPg/pRcaWg9IEkDqX1F/qA/2P0EBfgGh/RJAeRK7XuDC8z8cu3sZ4q8T
QLjuA7eYEPE/oorjEiVWFECweEJDWRLsP4+fRJtyChVAboF/mbt25D8oyg8F
wrIVQF3igxi1ktk/AMV038BXFkD44jXm8CzFPz4F00jKChdAxhVCCICNsr8o
W5uT1bEXQKVs5qOPc9K/ePZcbetmGEAuIMpSriPhv3SniCgDEBlAokFKMs+9
6L+vKE5UyrUZQBiQwkgG0u+/Ue8MD5xpGkBhD9SFiEbzv5/LNatvERtAiWZy
kh7e9b9T7VfWTccbQMQDz/yRJfi/R98Tctt5HED1ODIQjhD6v+bmOe9qIB1A
rh0nRJDC+7/rM1n7BNUdQOkLNiCCav2/nJbi6KB9HkDZ71KrVH3+v4zJBUfs
Ih9A5VkiiKoY/7/iQSI0QtYfQEL1uVWSj/+/8mdUAc0+IECf3XOPLAoAwKZR
FDB+mSBApAvKzb1vAMB6IyEXh/IgQHQKSJ3I6QDAJADj7pBFIUB1h+v4PFMB
wIF/IQ6gnyFAvwUABKyOAcC0CRUesPMhQPOLc9pYeQHAmjaFdcVOIkBf15HW
zC0BwJ9LQoUyqCJAxmlJBbPQAMB6a7SFoPsiQM1UWJBfWwDACC6jzRNWI0Cq
cXkjWzf/v2z7RgaIqiNAJcBKl6U0/b8yFFD6//8jQH/K2jI4lvq/n+LH3A==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-2.1946640312678194`, 
                    2.2180583630763717`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4cUScX6PO2vzd0wYnD
3cQ/KEi8fph3tT/SUFjDa77VP3Zbz6f1KtM/IqE47Akn4D+uaAULYsXgP9Wb
k3tZVOU/mb/vw6Eg6D+7wbiC/fHqPzJ9y3m0xO8/gEqXStgX8D/XTISbXgfz
P7tJtw/c7vI/K0GDZ58e9j/ziT6Xnbj1PwdH8fqSKvk/2iBupGZS+D8SUv8L
LPT7P1rNgu1ZJPs/Q3vbp8qe/j+J0D+8VMb9PwTtiNWyRgBAWwqypoYtAECC
OOYO4OwAQD63Ng34kwFAI16rl1tXAUB4j482beICQFL04ouBjwFAf/LaffdM
BEA6MU2sWLgBQAX2WabgsAVALEIQYpW+AUDiJK2RzfwGQGAe9vU6fgFAjN7y
ms9kCEC6dSCwavAAQI3DDGfVtAlAYXn5v5tRAEBbMxlR8CALQP91eHR2Y/8/
p0NZHGqGDECKNorYemf+P0t/barn0w1AkcKGxnmn/T+8RXRWej0PQI2ZVVsw
yvw/wpunYohHEEC82mtpRKH7P+XkrgoD7RBASnFEAvoF+j9vc69BiKARQOPv
3fPfAPg/pRcaWg9IEkDqX1F/qA/2P0EBfgGh/RJAeRK7XuDC8z8cu3sZ4q8T
QLjuA7eYEPE/oorjEiVWFECweEJDWRLsP4+fRJtyChVAboF/mbt25D8oyg8F
wrIVQF3igxi1ktk/AMV038BXFkD44jXm8CzFPz4F00jKChdAxhVCCICNsr8o
W5uT1bEXQKVs5qOPc9K/ePZcbetmGEAuIMpSriPhv3SniCgDEBlAokFKMs+9
6L+vKE5UyrUZQBiQwkgG0u+/Ue8MD5xpGkBhD9SFiEbzv5/LNatvERtAiWZy
kh7e9b9T7VfWTccbQMQDz/yRJfi/R98Tctt5HED1ODIQjhD6v+bmOe9qIB1A
rh0nRJDC+7/rM1n7BNUdQOkLNiCCav2/nJbi6KB9HkDZ71KrVH3+v4zJBUfs
Ih9A5VkiiKoY/7/iQSI0QtYfQEL1uVWSj/+/8mdUAc0+IECf3XOPLAoAwKZR
FDB+mSBApAvKzb1vAMB6IyEXh/IgQHQKSJ3I6QDAJADj7pBFIUB1h+v4PFMB
wIF/IQ6gnyFAvwUABKyOAcC0CRUesPMhQPOLc9pYeQHAmjaFdcVOIkBf15HW
zC0BwJ9LQoUyqCJAxmlJBbPQAMB6a7SFoPsiQM1UWJBfWwDACC6jzRNWI0Cq
cXkjWzf/v2z7RgaIqiNAJcBKl6U0/b8yFFD6//8jQH/K2jI4lvq/n+LH3A==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-2.1946640312678194`, 
                    2.2180583630763717`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68592139391825*^9, 3.685922171691379*^9, {3.68592220873971*^9, 
   3.685922326790497*^9}, 3.6859232862165823`*^9, 3.685923582533084*^9, {
   3.6859236709382133`*^9, 3.685923694686017*^9}, 3.685923750638413*^9, {
   3.685923843766129*^9, 3.685923864144237*^9}, 3.685924062440486*^9, {
   3.685924336724132*^9, 3.685924353189443*^9}, {3.685924405794496*^9, 
   3.685924472170809*^9}, {3.685924507515136*^9, 3.6859245239731007`*^9}, {
   3.685924554924097*^9, 3.685924583490032*^9}, 3.685924780073848*^9, 
   3.685924862773773*^9, 3.68592497001928*^9, 3.685925183292204*^9, 
   3.685925461597081*^9, {3.685957839080576*^9, 3.685957880188377*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "x"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685883690498055*^9, 3.685883711580399*^9}, {
   3.685883764683485*^9, 3.685883827595285*^9}, {3.6858847904802*^9, 
   3.685884790820023*^9}, 3.685900106751725*^9, {3.6859001843967743`*^9, 
   3.685900184666192*^9}, {3.6859214135796337`*^9, 3.685921414217814*^9}, {
   3.685957864245325*^9, 3.6859578667227697`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVl3k8lN8Xx4UkS5ZBDDGMikhIWaJ7qFSSSmiT4iuUbJVSVEJElKRslYhS
lkpEJddWRNm3UCr7PvPMM7Lm9/z+mtf7de899yyfc+a5yk5e1id4eXh4/vLx
8Pz/9+EVJwEd55ubyzPMZW/8ZKOKJoblAcZJFHi/2HRwhI0WPhcHMxgXUX3b
0+OK02z0sCRKaTEjHJ3/3AgiNAKdNvH1+KuUgPxuvesf3UqgN82/0sgtD9DG
f8tkZvcSaMbdsovtmowepph/+mlPoK3f7qycbEtFrwuUPFadI1DTrFssS+k5
0tEpPpv/mEDnKxW1J16/QHFtZTqemQSi322uGduShf6eYi6dyyeQ0xrgG3F9
iXj/TjbfryaQX5bwO6ItF9WJLjypZBNoSeef1WNK79AKxekhEQMOai/56Ds6
+A65l+3XlAQOevE0vnzk9XuUzHOmd2Q7B1mdsTo2vKUIvdPWiFU4wEH3l76/
P+CKkbhjjdiZsxyUd8HizFnZEiTVIb+CfomDHgzry3ECSpDs9vuO9wM5yLNe
0pXYVoqENezOCUdxkOSDKl52Wxmqtjm/dOAJB80ue/vc27gcTfxnuFz7OQf1
Xnuyl/W4HF00uK6+O4eD3rpeeTRxsgKZ17Ru4yvkoOQO921etRVI0/z0tgdF
HHRj96HRcd1P6KbAU72lpRx0eL2e0fjsJ/TtrnydwxcO2vJU+bfH8c9o6XlL
n+3fOEhTTuzGWMVnJF0izOZr4KB//4ZaRqMq0e46jt9UGwcN+LQFnCYqUT2f
y0XtTg6q761gjtpVoTPnp7cb/+SglOpknxGlL6jKdti0roeDyPj8Nd2RX9Ds
QFZDRD8HmbvW9DROf0HSjgPHJYc4KGHD7wefXaqRjqnM6IkRDhrl+2v7vqka
TcWxvK6PcRBqFBHLgRrk+s91yHuCg2Ieq1SlZNegkOgMWzU2B/V5Gly7R/+K
GAOyuZkEBxmYWBmFh31F9yQOz81wOOimsDMngPyKrtzerivD5aCf3y9meTt+
Qxct/u6bp1gn4/YJ59pv6M/td4deTXJQyPl0xYObalG0kNyOdX85qG3rh7Zd
GbXoTlGH/CWK19AaopF0HRqdmm+Kpvjy7/6d64Pq0KGjRV5nKa5/Oce7eqIO
LdSEjytTLImWOohq1SPdE1J7H1D2N62KNQpzpvja1tg/1P3OokrLFyXVo77n
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
CotyUDFn1fTCAhMCv/4J3D5PoP8BVLu5IA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k8FP8bAPAZdt03+ebetYWQJB265kGIinKFqBBRiFA5Uoly5AipHKkQ
6aAclWSGRIgoFRIVUipyrz1/8/tn9/Xemf3MM8/n+TyfGbrXMXsfAQRB5MiP
/3/nx3gJrT6UvNVM8Wrs2EwN3vSetnMvzR8rOuE6+li3Buc315+n0SKwd/bx
vXKe1Xg+kaJBpSViY17xcclvKvGALeGBCxrXsaqMFS5bb1Tg79l+Wf807mJ/
2tfKOe4twoU/f9f+q/EMqwjPHHVpSsButRWE/NZoxb6rXKKft8Kxh+WJnwMM
+jHln5QN4zJ92GGs+/qf48PYmqqIXbvDRrGg0RXDVQ9/YZ4ufRFX1CcwMXqc
9tCGf9ih5IKmffozWKpMu+6tgzPY9s2+7V3X5zGvz4644Jt5zJv69JLAXhYm
lvstMKRvHuswtZW86MPCHrsFqQ79mMdiaovthcNYmGD/xYhadAHzWEXJZKWz
sKLe2jUh6xcwk0KpupI2FvbjA6108PYC5mduspa9mY0d6fqT/iyCidVW65Wf
VuVgcukRmPZFJjZsG2ezWpeD1doJTWRlMbHxpfmcz+s5mPhbjR3B5UzsZLXj
UkUHDna/w56qPcrE6MTYQaVEDjbR9jQia/ciVrHWJXPrDAcLeRXndUybhSmv
ebp2Gc7F1EcshebXsDDbja+tStq4WLuAaFk0kHG531ir8ZGLLYeUqURXFtal
3Wr39w8X66u9crYomYXFFApuQpR5mGnFnRt9kywsP29tzWQID5PNfd1v/pSN
/fXQXh+5lI/VP0uKaWtiY4oz2X1hmnzsaO9OzT3dpO9omXjp87FXS7r994+z
MVVGCl8B+FhEeh/zFHnfSaLyR/p8+di3+HHFh2c5mNO3B0TPIz72KFjCYak1
FyvNuG1Qro7Amxz5iAfOXIw5IBOkw0DgR5NygdkhLla/767rdW0ElJVW/A44
w8XCPJ4YehkiENdgcb6hmosF6du3pZki4Cx3pvKIJg/jfg5rdvNCIHjzhT7+
Kh6WWeZeaeuLQJJvCj9rCw87s3jXYeMRBPDa3B24Cw+LYAs/ZYYgoOP9dFg+
jYdF5hkdkDuHAKtySv4Fm4f1x6u41uUjoDDINLEX5WNOW/dIr7yFgIEIcnBM
kY/tdfF5eqUIAW93qfuyRnxMNDCEZXuPvB+K3jZfPz4mm5X1x/MpAjecDoVJ
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
0Vrk8xnQpdi9eUM2C/8fM5VZog==
      "]]}}, {{{}, 
     {GrayLevel[0.4], AbsoluteThickness[
      0.5], {LineBox[{
        Scaled[{0.02, 0}, {10., 1.1868357691389804`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., 1.1868357691389804`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., 1.186835760107341}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., 1.186835760107341}]]}], 
       LineBox[{
        Scaled[{0.02, 0}, {10., -1.6616747260717837`}], 
         Offset[{3, 0}, Scaled[{0.02, 0}, {10., -1.6616747260717837`}]], 
         Offset[{7, 0}, Scaled[{0.02, 0}, {10., -1.661674675855282}]], 
         Offset[{12, 0}, Scaled[{0.02, 0}, {10., -1.661674675855282}]]}]}, {
       InsetBox["\[Theta]", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., 1.186835760107341}]], ImageScaled[{0, 0.5}]], 
       InsetBox["x", Offset[{15, 0}, 
        Scaled[{0.02, 0}, {10., -1.661674675855282}]], 
        ImageScaled[{0, 0.5}]]}, {}, {}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 37}, {All, All}},
  ImageSize->{450.4000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-2.1954306834965758`, 2.22041128853653}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685883697191745*^9, 3.685883722644197*^9}, {
   3.685883765505871*^9, 3.685883779901923*^9}, {3.685883822881463*^9, 
   3.685883827985448*^9}, {3.685884773579988*^9, 3.685884791364438*^9}, 
   3.685900108051806*^9, {3.685900180495672*^9, 3.685900185261697*^9}, 
   3.6859064224375362`*^9, 3.685906487403159*^9, {3.685921402959796*^9, 
   3.685921415235824*^9}, {3.685922213200321*^9, 3.685922277778626*^9}, 
   3.685922328479746*^9, 3.685924064830038*^9, 3.685924406083025*^9, 
   3.6859245307499943`*^9, {3.685957841349074*^9, 3.6859578820888233`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.685883099261322*^9, 3.685883100251898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<p3`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.685809272307323*^9, {3.685906069598714*^9, 3.685906070269486*^9}, {
   3.685921975917831*^9, 3.6859219759815483`*^9}, {3.6859230767985086`*^9, 
   3.6859230768977537`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{30., {3., 13.}}]], "Output",
 CellChangeTimes->{{3.685921957569085*^9, 3.685921976392077*^9}, 
   3.685923077445373*^9, 3.68592406510878*^9, 3.685924406357498*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch Work", "Section",
 CellChangeTimes->{{3.684352034538128*^9, 3.6843520403533773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportNotebookPDF", "[", "]"}]], "Input",
 CellChangeTimes->{{3.684460723261771*^9, 3.684460729218697*^9}}],

Cell[BoxData["\<\"/home/eric/Documents/School/QEA2/Module 3/Int 1/Mathematica \
work.pdf\"\>"], "Output",
 CellChangeTimes->{3.6859270611181087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rotate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"Pi", "/", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685881084970745*^9, 3.685881131132854*^9}, {
  3.685921476098106*^9, 3.6859214789822407`*^9}}],

Cell[BoxData[
 RotationBox[
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}],
  BoxRotation->1.0471975511965976`]], "Output",
 CellChangeTimes->{3.685921500634913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Constraints", "Subsection",
 CellChangeTimes->{{3.685882449743088*^9, 3.685882454359517*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"constraint", " ", "=", " ", 
  RowBox[{
   RowBox[{"r", "[", "t", "]"}], "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.6858824621445847`*^9, 3.685882464480794*^9}, {
  3.6858824998800297`*^9, 3.68588250779298*^9}, {3.685882710098742*^9, 
  3.685882710323534*^9}, {3.685882839052024*^9, 3.68588284674047*^9}, {
  3.685882930126326*^9, 3.6858829308727617`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t", "]"}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{{3.6858825027567368`*^9, 3.685882508132716*^9}, 
   3.685882711057344*^9, {3.685882839349374*^9, 3.685882847083714*^9}, 
   3.685882931540243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "=", "r"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "[", "t_", "]"}], ":=", "l"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Simplify", "[", "eqns", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.685882975016217*^9, 3.685883031628809*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "m", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"motor", "[", "t", "]"}], "+", 
     RowBox[{"l", " ", "m", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{"normal", "[", "t", "]"}], "\[Equal]", 
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"l", " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.685883000318898*^9, 3.685883031950881*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.685958476955461*^9, 3.685958488526465*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "trident" -> "\[Psi]"},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Textbook.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Reflection"], CellDingbat -> "\[EmptyDiamond]", TextAlignment -> 
    Left, MenuSortingValue -> 10000, FontSize -> 16, FontWeight -> "Bold", 
    FontColor -> 
    RGBColor[0.027450980392156862`, 0.6431372549019608, 0.0196078431372549]]},
   Visible -> False, FrontEndVersion -> 
  "11.0 for Linux x86 (64-bit) (July 28, 2016)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]

